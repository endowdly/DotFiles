<Objs Version="1.1.0.1" xmlns="http://schemas.microsoft.com/powershell/2004/04">
  <Obj RefId="0">
    <TN RefId="0">
      <T>Entry[]</T>
      <T>System.Array</T>
      <T>System.Object</T>
    </TN>
    <LST>
      <Obj RefId="1">
        <TN RefId="1">
          <T>DotEntry</T>
          <T>Entry</T>
          <T>System.Object</T>
        </TN>
        <ToString>DotEntry</ToString>
        <Props>
          <S N="Target">"$env:APPDATA\Code\User\settings.json"</S>
          <S N="ExpandedTarget">C:\Users\endow\AppData\Roaming\Code\User\settings.json</S>
          <S N="TargetObject">C:\Users\endow\AppData\Roaming\Code\User\settings.json</S>
          <Obj N="Content" RefId="2">
            <TN RefId="2">
              <T>System.String[]</T>
              <T>System.Array</T>
              <T>System.Object</T>
            </TN>
            <LST>
              <S>{</S>
              <S>    "window.menuBarVisibility": "toggle",</S>
              <S>    "editor.lineNumbers": "relative",</S>
              <S>    "editor.fontFamily": "\"FiraCode NF\", Consolas, Courier",</S>
              <S>    "editor.fontLigatures": true,</S>
              <S>    "editor.fontSize": 12,</S>
              <S>    "editor.wordWrap": "wordWrapColumn",</S>
              <S>    "terminal.integrated.fontFamily": "TerminessTTF NF",</S>
              <S>    "terminal.integrated.fontSize": 14,</S>
              <S>    "terminal.integrated.cursorBlinking": true,</S>
              <S>    "terminal.integrated.shellArgs.windows": [</S>
              <S>        "-nologo",</S>
              <S>        "-noprofile"</S>
              <S>    ],</S>
              <S></S>
              <S>    "powershell.developer.editorServicesLogLevel": "Verbose",</S>
              <S>    "powershell.integratedConsole.showOnStartup": false,</S>
              <S>    "powershell.enableProfileLoading": true,</S>
              <S>    "vim.debug.silent": true,</S>
              <S>    "vim.insertModeKeyBindings": [</S>
              <S>        {</S>
              <S>            "before": ["j", "k"],</S>
              <S>            "after": ["&lt;Esc&gt;"]</S>
              <S>        }</S>
              <S>    ], </S>
              <S>    "vim.normalModeKeyBindingsNonRecursive": [</S>
              <S>        {</S>
              <S>            "before": ["&lt;leader&gt;", "o"],</S>
              <S>            "after": ["o", "&lt;Esc&gt;", "k"]</S>
              <S>        }, </S>
              <S>        {</S>
              <S>            "before": ["&lt;leader&gt;", "d"],</S>
              <S>            "after": ["d", "d"]</S>
              <S>        },</S>
              <S>        {</S>
              <S>            "before": ["&lt;leader&gt;", "O"],</S>
              <S>            "after": ["O", "&lt;Esc&gt;", "j"]</S>
              <S>        },</S>
              <S>        {</S>
              <S>            "before": ["&lt;leader&gt;", "h"],</S>
              <S>            "after": ["^"]</S>
              <S>        }, </S>
              <S>        {</S>
              <S>            "before": ["&lt;leader&gt;", "l"],</S>
              <S>            "after": ["$"]</S>
              <S>        }</S>
              <S>    ],</S>
              <S>    "todo.embedded.exclude": [ </S>
              <S>        "**/.*",</S>
              <S>        "**/.*/**",</S>
              <S>        "**/_output/**",</S>
              <S>        "**/bower_components/**",</S>
              <S>        "**/build/**",</S>
              <S>        "**/dist/**",</S>
              <S>        "**/node_modules/**",</S>
              <S>        "**/out/**",</S>
              <S>        "**/output/**",</S>
              <S>        "**/static/**",</S>
              <S>        "**/target/**",</S>
              <S>        "**/third_party/**",</S>
              <S>        "**/vendor/**",</S>
              <S>        "**/*.min.*",</S>
              <S>        "**/*.map",</S>
              <S>        "**/*.{3ds,3g2,3gp,7z,a,aac,adp,ai,aif,aiff,alz,ape,apk,ar,arj,asf,au,avi,bak,baml,bh,bin,bk,bmp,btif,bz2,bzip2,cab,caf,cgm,class,cmx,cpio,cr2,csv,cur,dat,dcm,deb,dex,djvu,dll,dmg,dng,doc,docm,docx,dot,dotm,dra,DS_Store,dsk,dts,dtshd,dvb,dwg,dxf,ecelp4800,ecelp7470,ecelp9600,egg,eol,eot,epub,exe,f4v,fbs,fh,fla,flac,fli,flv,fpx,fst,fvt,g3,gif,graffle,gz,gzip,h261,h263,h264,icns,ico,ief,img,ipa,iso,jar,jpeg,jpg,jpgv,jpm,jxr,key,ktx,lha,lib,lvp,lz,lzh,lzma,lzo,m3u,m4a,m4v,mar,mdi,mht,mid,midi,mj2,mka,mkv,mmr,mng,mobi,mov,movie,mp3,mp4,mp4a,mpeg,mpg,mpga,mxu,nef,npx,numbers,o,oga,ogg,ogv,otf,pages,pbm,pcx,pdb,pdf,pea,pgm,pic,png,pnm,pot,potm,potx,ppa,ppam,ppm,pps,ppsm,ppsx,ppt,pptm,pptx,psd,pya,pyc,pyo,pyv,qt,rar,ras,raw,resources,rgb,rip,rlc,rmf,rmvb,rtf,rz,s3m,s7z,scpt,sgi,shar,sil,sketch,slk,smv,so,sub,swf,tar,tbz,tbz2,tga,tgz,thmx,tif,tiff,tlz,ttc,ttf,txz,udf,uvh,uvi,uvm,uvp,uvs,uvu,viv,vob,war,wav,wax,wbmp,wdp,weba,webm,webp,whl,wim,wm,wma,wmv,wmx,woff,woff2,wvx,xbm,xif,xla,xlam,xls,xlsb,xlsm,xlsx,xlt,xltm,xltx,xm,xmind,xpi,xpm,xwd,xz,z,zip,zipx}",</S>
              <S>        "**/TODO*"</S>
              <S>    ], </S>
              <S>    "better-comments.highlightPlainText": true,</S>
              <S>    "better-comments.tags": [ </S>
              <S>        {</S>
              <S>            "tag": "!",</S>
              <S>            "color": "#FF2D00",</S>
              <S>            "strikethrough": false,</S>
              <S>            "backgroundColor": "transparent"</S>
              <S>        },</S>
              <S>        {</S>
              <S>            "tag": "?",</S>
              <S>            "color": "#3498DB",</S>
              <S>            "strikethrough": false,</S>
              <S>            "backgroundColor": "transparent"</S>
              <S>        },</S>
              <S>        {</S>
              <S>            "tag": "todo",</S>
              <S>            "color": "black",</S>
              <S>            "strikethrough": false,</S>
              <S>            "backgroundColor": "#FF8C00"</S>
              <S>        },</S>
              <S>        {</S>
              <S>            "tag": "*",</S>
              <S>            "color": "#98C379",</S>
              <S>            "strikethrough": false,</S>
              <S>            "backgroundColor": "transparent"</S>
              <S>        },</S>
              <S>        {</S>
              <S>            "tag": "done",</S>
              <S>            "color": "#FF8C00",</S>
              <S>            "strikethrough": true,</S>
              <S>            "backgroundColor": "transparent"</S>
              <S>        },</S>
              <S>        {</S>
              <S>            "tag": "review",</S>
              <S>            "color": "white",</S>
              <S>            "strikethrough": false,</S>
              <S>            "backgroundColor": "#000088",</S>
              <S>        },</S>
              <S>        {</S>
              <S>            "tag": "note",</S>
              <S>            "color": "black",</S>
              <S>            "strikethrough": false,</S>
              <S>            "backgroundColor": "#98C379",</S>
              <S>        },</S>
              <S>        {</S>
              <S>            "tag": "idea",</S>
              <S>            "color": "#8000ff",</S>
              <S>            "strikethrough": false,</S>
              <S>            "backgroundColor": "transparent",</S>
              <S>        },</S>
              <S>        {</S>
              <S>            "tag": "hack",</S>
              <S>            "color": "black",</S>
              <S>            "strikethrough": false,</S>
              <S>            "backgroundColor": "orangered",</S>
              <S>        },</S>
              <S>        {</S>
              <S>            "tag": "fixme",</S>
              <S>            "color": "black",</S>
              <S>            "strikethrough": false,</S>
              <S>            "backgroundColor": "pink",</S>
              <S>        },</S>
              <S>    ],</S>
              <S>    "better-comments.multilineComments": true,</S>
              <S></S>
              <S>    "git.path": "C:\\Users\\endowdly\\scoop\\apps\\git\\current\\bin\\git.exe", </S>
              <S>    </S>
              <S>    "cSpell.userWords": [</S>
              <S>        "Allman",</S>
              <S>        "ENDO'S",</S>
              <S>        "Endowdly's",</S>
              <S>        "Groot",</S>
              <S>        "Linq",</S>
              <S>        "dowd",</S>
              <S>        "endowdly",</S>
              <S>        "endregion",</S>
              <S>        "hashtables",</S>
              <S>        "markdownlint",</S>
              <S>        "metaclasses",</S>
              <S>        "pandoc",</S>
              <S>        "performant"</S>
              <S>    ],</S>
              <S>    "files.associations": {</S>
              <S>        "CHANGELOG": "markdown"</S>
              <S>    },</S>
              <S></S>
              <S>    "FSharp.interfaceStubGenerationObjectIdentifier": "__",</S>
              <S>    "FSharp.enableTouchBar": false,</S>
              <S>    "vim.easymotion": true,</S>
              <S>    "vim.camelCaseMotion.enable": true,</S>
              <S>    "vim.highlightedyank.enable": true,</S>
              <S>    "vim.highlightedyank.duration": 300,</S>
              <S>    "editor.renderControlCharacters": true,</S>
              <S>    "terminal.integrated.shell.windows": "C:\\WINDOWS\\SysWOW64\\WindowsPowerShell\\v1.0\\powershell.exe",</S>
              <S>    "extensions.closeExtensionDetailsOnViewChange": true,</S>
              <S>    "extensions.ignoreRecommendations": true,</S>
              <S>    "zenMode.hideLineNumbers": false,</S>
              <S>    "vim.neovimPath": "C:\\Users\\endowdly\\scoop\\apps\\neovim\\current\\bin\\nvim.exe",</S>
              <S>    "vim.enableNeovim": true,</S>
              <S>    "FSharp.useSdkScripts": true,</S>
              <S>    "diffEditor.renderSideBySide": true,</S>
              <S>    "workbench.iconTheme": "vscode-endowdly-icons",</S>
              <S>    "powershell.powerShellDefaultVersion": "Windows PowerShell (x64)",</S>
              <S>    "FSharp.addFsiWatcher": true,</S>
              <S>    "julia.execution.resultType": "both",</S>
              <S>    "editor.wordWrapColumn": 115,</S>
              <S>    "explorer.compactFolders": false,</S>
              <S>    "mdmath.delimiters": "julia",</S>
              <S>    "auto-correct.dictionary": [ </S>
              <S>        {</S>
              <S>            "languages": [</S>
              <S>                "*"</S>
              <S>            ],</S>
              <S>            "words": {</S>
              <S>            },</S>
              <S>            "useLargeList": false</S>
              <S>        },</S>
              <S>        {</S>
              <S>            "languages": [</S>
              <S>                "javascript",</S>
              <S>                "javascriptreact",</S>
              <S>                "typescript",</S>
              <S>                "typescriptreact"</S>
              <S>            ],</S>
              <S>            "words": {</S>
              <S>                "cosnt": "const",</S>
              <S>                "functoin": "function"</S>
              <S>            }</S>
              <S>        }</S>
              <S>    ],</S>
              <S>    "xml.fileAssociations": [</S>
              <S>        {</S>
              <S>          "systemId": "https://raw.githubusercontent.com/PowerShell/PowerShell/master/src/Schemas/Format.xsd",</S>
              <S>          "pattern": "**/*.Format.ps1xml"</S>
              <S>        },</S>
              <S>        {</S>
              <S>          "systemId": "https://raw.githubusercontent.com/PowerShell/PowerShell/master/src/Schemas/Types.xsd",</S>
              <S>          "pattern": "**/*.Types.ps1xml"</S>
              <S>        }</S>
              <S>    ],</S>
              <S>    "banner-comments-plus.font": "Big",</S>
              <S>    "terminal.integrated.commandsToSkipShell": [</S>
              <S>        "language-julia.interrupt"</S>
              <S>    ],</S>
              <S>    "[fsharp]": {</S>
              <S>        "editor.defaultFormatter": "Ionide.Ionide-fsharp"</S>
              <S>    },</S>
              <S>    "terminal.integrated.inheritEnv": false,</S>
              <S>    "markdown.preview.fontFamily": "'BigBlue_TerminalPlus NF',  'Segoe WPC', 'Segoe UI', system-ui, 'Ubuntu', 'Droid Sans', sans-serif",</S>
              <S>    "todo.embedded.regex": "(?:&lt;!-- *)?(?:#|// @|//|/\\*+|&lt;!--|--|\\* @|\\{!|\\{\\{!--|\\{\\{!) *(TODO|DONE|FIXME|FIX|BUG|UGLY|HACK|NOTE|IDEA|REVIEW|DEBUG|OPTIMIZE)(?:\\s*\\([^)]+\\))?:?(?!\\w)(?: *--&gt;| *\\*/| *!}| *--}}| *}}|(?= *(?:[^:]//|/\\*+|&lt;!--|@|--|\\{!|\\{\\{!--|\\{\\{!))|((?: +[^\\n@]*?)(?= *(?:[^:]//|/\\*+|&lt;!--|@|--(?!&gt;)|\\{!|\\{\\{!--|\\{\\{!))|(?: +[^@\\n]+)?))",</S>
              <S>    "multiCommand.commands": [</S>
              <S>        {</S>
              <S>            "command": "endo.miniZen",</S>
              <S>            "sequence": [</S>
              <S>                "workbench.action.toggleTabsVisibility",</S>
              <S>                "workbench.action.toggleActivityBarVisibility",</S>
              <S>                "workbench.action.toggleSidebarVisibility",</S>
              <S>                "editor.action.toggleMinimap"</S>
              <S>            ]</S>
              <S>        },</S>
              <S>        {</S>
              <S>            "command": "multiCommand.mirror.c",</S>
              <S>            "sequence": [</S>
              <S>                "dance.select.copy",</S>
              <S>                "dance.selections.flip",</S>
              <S>                "dance.select.copy.backwards",</S>
              <S>                "dance.selections.flip",</S>
              <S>            ]</S>
              <S>        },</S>
              <S>        {</S>
              <S>            "command": "multiCommand.mirror.h",</S>
              <S>            "sequence": [</S>
              <S>                "dance.left.extend",</S>
              <S>                "dance.selections.flip",</S>
              <S>                "dance.right.extend",</S>
              <S>                "dance.selections.flip",</S>
              <S>            ]</S>
              <S>        },</S>
              <S>        {</S>
              <S>            "command": "multiCommand.mirror.l",</S>
              <S>            "sequence": [</S>
              <S>                "dance.right.extend",</S>
              <S>                "dance.selections.flip",</S>
              <S>                "dance.left.extend",</S>
              <S>                "dance.selections.flip",</S>
              <S>            ]</S>
              <S>        },</S>
              <S>        {</S>
              <S>            "command": "multiCommand.mirror.j",</S>
              <S>            "sequence": [</S>
              <S>                "dance.down.extend",</S>
              <S>                "dance.selections.flip",</S>
              <S>                "dance.up.extend",</S>
              <S>                "dance.selections.flip",</S>
              <S>            ]</S>
              <S>        },</S>
              <S>        {</S>
              <S>            "command": "multiCommand.mirror.k",</S>
              <S>            "sequence": [</S>
              <S>                "dance.up.extend",</S>
              <S>                "dance.selections.flip",</S>
              <S>                "dance.down.extend",</S>
              <S>                "dance.selections.flip",</S>
              <S>            ]</S>
              <S>        },</S>
              <S>        {</S>
              <S>            "command": "multiCommand.mirror.J",</S>
              <S>            "sequence": [</S>
              <S>                "dance.down.extend",</S>
              <S>                "dance.selections.flip",</S>
              <S>                "dance.up.extend",</S>
              <S>                "dance.selections.flip",</S>
              <S>                "dance.expandLines",</S>
              <S>            ]</S>
              <S>        },</S>
              <S>        {</S>
              <S>            "command": "multiCommand.mirror.K",</S>
              <S>            "sequence": [</S>
              <S>                "dance.up.extend",</S>
              <S>                "dance.selections.flip",</S>
              <S>                "dance.down.extend",</S>
              <S>                "dance.selections.flip",</S>
              <S>                "dance.expandLines",</S>
              <S>            ]</S>
              <S>        },</S>
              <S>        {</S>
              <S>            "command": "multiCommand.mirror.b",</S>
              <S>            "sequence": [</S>
              <S>                "dance.select.word.previous.extend",</S>
              <S>                "dance.selections.flip",</S>
              <S>                "dance.select.word.extend",</S>
              <S>                "dance.selections.flip",</S>
              <S>            ]</S>
              <S>        },</S>
              <S>        {</S>
              <S>            "command": "multiCommand.mirror.w",</S>
              <S>            "sequence": [</S>
              <S>                "dance.select.word.extend",</S>
              <S>                "dance.selections.flip",</S>
              <S>                "dance.select.word.previous.extend",</S>
              <S>                "dance.selections.flip",</S>
              <S>            ]</S>
              <S>        },</S>
              <S>        {</S>
              <S>            "command": "multiCommand.mirror.e",</S>
              <S>            "sequence": [</S>
              <S>                "dance.select.word.end.extend",</S>
              <S>                "dance.selections.flip",</S>
              <S>                "dance.select.word.previous.extend",</S>
              <S>                "dance.selections.flip",</S>
              <S>            ]</S>
              <S>        },</S>
              <S>        {</S>
              <S>            "command": "multiCommand.mirror.p",</S>
              <S>            "sequence": [</S>
              <S>                {"command": "dance.objects.performSelection", "args": {"object": "paragraph", "action": "selectToEnd", "extend": true, "inner": false}},</S>
              <S>                "dance.selections.flip",</S>
              <S>                {"command": "dance.objects.performSelection", "args": {"object": "paragraph", "action": "selectToStart", "extend": true, "inner": false}},</S>
              <S>                "dance.selections.flip",</S>
              <S>            ]</S>
              <S>        },</S>
              <S>        {</S>
              <S>            "command": "multiCommand.mirror.s",</S>
              <S>            "sequence": [</S>
              <S>                {"command": "dance.objects.performSelection", "args": {"object": "sentence", "action": "selectToEnd", "extend": true, "inner": false}},</S>
              <S>                "dance.selections.flip",</S>
              <S>                {"command": "dance.objects.performSelection", "args": {"object": "sentence", "action": "selectToStart", "extend": true, "inner": false}},</S>
              <S>                "dance.selections.flip",</S>
              <S>            ]</S>
              <S>        },</S>
              <S>        {</S>
              <S>            "command": "multiCommand.mirror.m",</S>
              <S>            "sequence": [</S>
              <S>                "dance.select.enclosing.extend",</S>
              <S>                "dance.selections.flip",</S>
              <S>                "dance.select.enclosing.extend.backwards",</S>
              <S>                "dance.selections.flip",</S>
              <S>            ]</S>
              <S>        },</S>
              <S>        {</S>
              <S>            "command": "multiCommand.mirror.lparen",</S>
              <S>            "sequence": [</S>
              <S>                "dance.insert.after",</S>
              <S>                {"command": "type", "args": {"text": ")"}},</S>
              <S>                "dance.set.normal",</S>
              <S>                "dance.marks.saveSelections",</S>
              <S>                "dance.insert.before",</S>
              <S>                {"command": "type", "args": {"text": "("}},</S>
              <S>                "dance.set.normal",</S>
              <S>                "dance.marks.restoreSelections",</S>
              <S>                "dance.selections.flip",</S>
              <S>                "dance.left.extend",</S>
              <S>            ]</S>
              <S>        },</S>
              <S>        {</S>
              <S>            "command": "multiCommand.mirror.lcurly",</S>
              <S>            "sequence": [</S>
              <S>                "dance.insert.after",</S>
              <S>                {"command": "type", "args": {"text": "}"}},</S>
              <S>                "dance.set.normal",</S>
              <S>                "dance.marks.saveSelections",   // shouldn't need this</S>
              <S>                "dance.insert.before",</S>
              <S>                {"command": "type", "args": {"text": "{"}},</S>
              <S>                "dance.set.normal",</S>
              <S>                "dance.marks.restoreSelections",</S>
              <S>                "dance.selections.flip",</S>
              <S>                "dance.left.extend",</S>
              <S>            ]</S>
              <S>        },</S>
              <S>        {</S>
              <S>            "command": "multiCommand.mirror.lbracket",</S>
              <S>            "sequence": [</S>
              <S>                "dance.insert.after",</S>
              <S>                {"command": "type", "args": {"text": "]"}},</S>
              <S>                "dance.set.normal",</S>
              <S>                "dance.marks.saveSelections",   // shouldn't need this</S>
              <S>                "dance.insert.before",</S>
              <S>                {"command": "type", "args": {"text": "["}},</S>
              <S>                "dance.set.normal",</S>
              <S>                "dance.marks.restoreSelections",</S>
              <S>                "dance.selections.flip",</S>
              <S>                "dance.left.extend",</S>
              <S>            ]</S>
              <S>        },</S>
              <S>        {</S>
              <S>            "command": "multiCommand.mirror.lt",</S>
              <S>            "sequence": [</S>
              <S>                "dance.insert.after",</S>
              <S>                {"command": "type", "args": {"text": "&gt;"}},</S>
              <S>                "dance.set.normal",</S>
              <S>                "dance.marks.saveSelections",   // shouldn't need this</S>
              <S>                "dance.insert.before",</S>
              <S>                {"command": "type", "args": {"text": "&lt;"}},</S>
              <S>                "dance.set.normal",</S>
              <S>                "dance.marks.restoreSelections",</S>
              <S>                "dance.selections.flip",</S>
              <S>                "dance.left.extend",</S>
              <S>            ]</S>
              <S>        },</S>
              <S>        {</S>
              <S>            "command": "multiCommand.mirror.rparen",</S>
              <S>            "sequence": [</S>
              <S>                "dance.insert.after",</S>
              <S>                {"command": "type", "args": {"text": " )"}},</S>
              <S>                "dance.set.normal",</S>
              <S>                "dance.marks.saveSelections",   // shouldn't need this</S>
              <S>                "dance.insert.before",</S>
              <S>                {"command": "type", "args": {"text": "( "}},</S>
              <S>                "dance.set.normal",</S>
              <S>                "dance.marks.restoreSelections",</S>
              <S>                "dance.selections.flip",</S>
              <S>                "dance.left.extend",</S>
              <S>                "dance.left.extend",</S>
              <S>            ]</S>
              <S>        },</S>
              <S>        {</S>
              <S>            "command": "multiCommand.mirror.rcurly",</S>
              <S>            "sequence": [</S>
              <S>                "dance.insert.after",</S>
              <S>                {"command": "type", "args": {"text": " }"}},</S>
              <S>                "dance.set.normal",</S>
              <S>                "dance.marks.saveSelections",   // shouldn't need this</S>
              <S>                "dance.insert.before",</S>
              <S>                {"command": "type", "args": {"text": "{ "}},</S>
              <S>                "dance.set.normal",</S>
              <S>                "dance.marks.restoreSelections",</S>
              <S>                "dance.selections.flip",</S>
              <S>                "dance.left.extend",</S>
              <S>                "dance.left.extend",</S>
              <S>            ]</S>
              <S>        },</S>
              <S>        {</S>
              <S>            "command": "multiCommand.mirror.rbracket",</S>
              <S>            "sequence": [</S>
              <S>                "dance.insert.after",</S>
              <S>                {"command": "type", "args": {"text": " ]"}},</S>
              <S>                "dance.set.normal",</S>
              <S>                "dance.marks.saveSelections",   // shouldn't need this</S>
              <S>                "dance.insert.before",</S>
              <S>                {"command": "type", "args": {"text": "[ "}},</S>
              <S>                "dance.set.normal",</S>
              <S>                "dance.marks.restoreSelections",</S>
              <S>                "dance.selections.flip",</S>
              <S>                "dance.left.extend",</S>
              <S>                "dance.left.extend",</S>
              <S>            ]</S>
              <S>        },</S>
              <S>        {</S>
              <S>            "command": "multiCommand.mirror.gt",</S>
              <S>            "sequence": [</S>
              <S>                "dance.insert.after",</S>
              <S>                {"command": "type", "args": {"text": " &gt;"}},</S>
              <S>                "dance.set.normal",</S>
              <S>                "dance.marks.saveSelections",   // shouldn't need this</S>
              <S>                "dance.insert.before",</S>
              <S>                {"command": "type", "args": {"text": "&lt; "}},</S>
              <S>                "dance.set.normal",</S>
              <S>                "dance.marks.restoreSelections",</S>
              <S>                "dance.selections.flip",</S>
              <S>                "dance.left.extend",</S>
              <S>                "dance.left.extend",</S>
              <S>            ]</S>
              <S>        },</S>
              <S>        {</S>
              <S>            "command": "multiCommand.mirror.doublequote",</S>
              <S>            "sequence": [</S>
              <S>                "dance.insert.after",</S>
              <S>                {"command": "type", "args": {"text": "\""}},</S>
              <S>                "dance.set.normal",</S>
              <S>                "dance.marks.saveSelections",   // shouldn't need this</S>
              <S>                "dance.insert.before",</S>
              <S>                {"command": "type", "args": {"text": "\""}},</S>
              <S>                "dance.set.normal",</S>
              <S>                "dance.marks.restoreSelections",</S>
              <S>                "dance.selections.flip",</S>
              <S>                "dance.left.extend",</S>
              <S>            ]</S>
              <S>        },</S>
              <S>        {</S>
              <S>            "command": "multiCommand.mirror.singlequote",</S>
              <S>            "sequence": [</S>
              <S>                "dance.insert.after",</S>
              <S>                {"command": "type", "args": {"text": "'"}},</S>
              <S>                "dance.set.normal",</S>
              <S>                "dance.marks.saveSelections",   // shouldn't need this</S>
              <S>                "dance.insert.before",</S>
              <S>                {"command": "type", "args": {"text": "'"}},</S>
              <S>                "dance.set.normal",</S>
              <S>                "dance.marks.restoreSelections",</S>
              <S>                "dance.selections.flip",</S>
              <S>                "dance.left.extend",</S>
              <S>            ]</S>
              <S>        },</S>
              <S>        {</S>
              <S>            "command": "multiCommand.mirror.backtick",</S>
              <S>            "sequence": [</S>
              <S>                "dance.insert.after",</S>
              <S>                {"command": "type", "args": {"text": "`"}},</S>
              <S>                "dance.set.normal",</S>
              <S>                "dance.marks.saveSelections",   // shouldn't need this</S>
              <S>                "dance.insert.before",</S>
              <S>                {"command": "type", "args": {"text": "`"}},</S>
              <S>                "dance.set.normal",</S>
              <S>                "dance.marks.restoreSelections",</S>
              <S>                "dance.selections.flip",</S>
              <S>                "dance.left.extend",</S>
              <S>            ]</S>
              <S>        },</S>
              <S>        {</S>
              <S>            "command": "multiCommand.mirror.d",</S>
              <S>            "sequence": [</S>
              <S>                "dance.marks.saveSelections",</S>
              <S>                "dance.select.firstLast",</S>
              <S>                "dance.delete.noYank",</S>
              <S>                "dance.marks.restoreSelections",</S>
              <S>                "dance.selections.forward",</S>
              <S>            ]</S>
              <S>        },</S>
              <S>    ],</S>
              <S>    "dance.menus": {</S>
              <S>        "mirror": {</S>
              <S>            "items": {</S>
              <S>                "c": {</S>
              <S>                    "text": "column",</S>
              <S>                    "command": "multiCommand.mirror.c",</S>
              <S>                },</S>
              <S>                "l": {</S>
              <S>                    "text": "character left",</S>
              <S>                    "command": "multiCommand.mirror.l",</S>
              <S>                },</S>
              <S>                "h": {</S>
              <S>                    "text": "character right",</S>
              <S>                    "command": "multiCommand.mirror.h",</S>
              <S>                },</S>
              <S>                "j": {</S>
              <S>                    "text": "line down",</S>
              <S>                    "command": "multiCommand.mirror.j",</S>
              <S>                },</S>
              <S>                "k": {</S>
              <S>                    "text": "line up",</S>
              <S>                    "command": "multiCommand.mirror.k",</S>
              <S>                },</S>
              <S>                "J": {</S>
              <S>                    "text": "full line down",</S>
              <S>                    "command": "multiCommand.mirror.J",</S>
              <S>                },</S>
              <S>                "K": {</S>
              <S>                    "text": "full line up",</S>
              <S>                    "command": "multiCommand.mirror.K",</S>
              <S>                },</S>
              <S>                "b": {</S>
              <S>                    "text": "word begin",</S>
              <S>                    "command": "multiCommand.mirror.b",</S>
              <S>                },</S>
              <S>                "w": {</S>
              <S>                    "text": "word begin",</S>
              <S>                    "command": "multiCommand.mirror.w",</S>
              <S>                },</S>
              <S>                "e": {</S>
              <S>                    "text": "word end",</S>
              <S>                    "command": "multiCommand.mirror.e",</S>
              <S>                },</S>
              <S>                "p": {</S>
              <S>                    "text": "paragraph",</S>
              <S>                    "command": "multiCommand.mirror.p",</S>
              <S>                },</S>
              <S>                "s": {</S>
              <S>                    "text": "sentence",</S>
              <S>                    "command": "multiCommand.mirror.s",</S>
              <S>                },</S>
              <S>                "m": {</S>
              <S>                    "text": "matching",</S>
              <S>                    "command": "multiCommand.mirror.m",</S>
              <S>                },</S>
              <S>                "(": {</S>
              <S>                    "text": "(surround)",</S>
              <S>                    "command": "multiCommand.mirror.lparen",</S>
              <S>                },</S>
              <S>                "{": {</S>
              <S>                    "text": "{surround}",</S>
              <S>                    "command": "multiCommand.mirror.lcurly",</S>
              <S>                },</S>
              <S>                "[": {</S>
              <S>                    "text": "[surround]",</S>
              <S>                    "command": "multiCommand.mirror.lbracket",</S>
              <S>                },</S>
              <S>                "&lt;": {</S>
              <S>                    "text": "&lt;surround&gt;",</S>
              <S>                    "command": "multiCommand.mirror.lt",</S>
              <S>                },</S>
              <S>                ")": {</S>
              <S>                    "text": "( surround )",</S>
              <S>                    "command": "multiCommand.mirror.rparen",</S>
              <S>                },</S>
              <S>                "}": {</S>
              <S>                    "text": "{ surround }",</S>
              <S>                    "command": "multiCommand.mirror.rcurly",</S>
              <S>                },</S>
              <S>                "]": {</S>
              <S>                    "text": "[ surround ]",</S>
              <S>                    "command": "multiCommand.mirror.rbracket",</S>
              <S>                },</S>
              <S>                "&gt;": {</S>
              <S>                    "text": "&lt; surround &gt;",</S>
              <S>                    "command": "multiCommand.mirror.gt",</S>
              <S>                },</S>
              <S>                "\"": {</S>
              <S>                    "text": "\"surround\"",</S>
              <S>                    "command": "multiCommand.mirror.doublequote",</S>
              <S>                },</S>
              <S>                "'": {</S>
              <S>                    "text": "'surround'",</S>
              <S>                    "command": "multiCommand.mirror.singlequote",</S>
              <S>                },</S>
              <S>                "`": {</S>
              <S>                    "text": "`surround`",</S>
              <S>                    "command": "multiCommand.mirror.backtick",</S>
              <S>                },</S>
              <S>                "d": {</S>
              <S>                    "text": "delete surround",</S>
              <S>                    "command": "multiCommand.mirror.d",</S>
              <S>                },</S>
              <S>            }</S>
              <S>        }</S>
              <S>    },</S>
              <S>    "dance.normalMode.cursorStyle": "line",</S>
              <S>    "dance.insertMode.lineNumbers": "on",</S>
              <S>    "dance.insertMode.selectionStyle": {</S>
              <S>        "borderColor": "darkcyan"</S>
              <S>    },</S>
              <S>    "dance.normalMode.lineHighlight": "#8B118b22",</S>
              <S>    "workbench.colorCustomizations": {</S>
              <S>        "editor.selectionBackground": "#00ccff62",</S>
              <S>    },</S>
              <S>    "editor.detectIndentation": false,</S>
              <S>    "dance.selectionBehavior": "character",</S>
              <S>    "vim.searchHighlightColor": "Cyan",</S>
              <S>    "vim.searchHighlightTextColor": "Black",</S>
              <S>    "vim.useCtrlKeys": true,</S>
              <S>    "search.smartCase": true,</S>
              <S>    "vim.smartRelativeLine": true,</S>
              <S>    "vim.visualstar": true,</S>
              <S>    "workbench.colorTheme": "Horizon Dark",</S>
              <S>}</S>
            </LST>
          </Obj>
          <SBK N="CompressCommand"> Get-Content -Path $this.TargetObject.FullName -Verbose </SBK>
        </Props>
      </Obj>
      <Obj RefId="3">
        <TNRef RefId="1" />
        <ToString>DotEntry</ToString>
        <Props>
          <S N="Target">"$env:APPDATA\Code\User\snippets\${env:USERNAME}.code-snippets"</S>
          <S N="ExpandedTarget">C:\Users\endow\AppData\Roaming\Code\User\snippets\endow.code-snippets</S>
          <S N="TargetObject">C:\Users\endow\AppData\Roaming\Code\User\snippets\endow.code-snippets</S>
          <Obj N="Content" RefId="4">
            <TNRef RefId="2" />
            <LST>
              <S>{</S>
              <S>_x0009_// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and </S>
              <S>_x0009_// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope </S>
              <S>_x0009_// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is </S>
              <S>_x0009_// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: </S>
              <S>_x0009_// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. </S>
              <S>_x0009_// Placeholders with the same ids are connected.</S>
              <S>_x0009_// Example:</S>
              <S>_x0009_// "Print to console": {</S>
              <S>_x0009_// _x0009_"scope": "javascript,typescript",</S>
              <S>_x0009_// _x0009_"prefix": "log",</S>
              <S>_x0009_// _x0009_"body": [</S>
              <S>_x0009_// _x0009__x0009_"console.log('$1');",</S>
              <S>_x0009_// _x0009__x0009_"$2"</S>
              <S>_x0009_// _x0009_],</S>
              <S>_x0009_// _x0009_"description": "Log output to console"</S>
              <S>_x0009_// }</S>
              <S></S>
              <S>_x0009_"myHelp": {</S>
              <S>_x0009__x0009_"scope": "powershell",</S>
              <S>_x0009__x0009_"prefix": "help",</S>
              <S>_x0009__x0009_"body": [</S>
              <S>_x0009__x0009__x0009_"&lt;#",</S>
              <S>_x0009__x0009__x0009_".Synopsis",</S>
              <S>_x0009__x0009__x0009_"  $1",</S>
              <S>_x0009__x0009__x0009_".Description",</S>
              <S>_x0009__x0009__x0009_"  $2",</S>
              <S>_x0009__x0009__x0009_".Example",</S>
              <S>_x0009__x0009__x0009_"  $3",</S>
              <S>_x0009__x0009__x0009_"#&gt;" </S>
              <S>_x0009__x0009_],</S>
              <S>_x0009__x0009_"description": "endowdly help block"</S>
              <S>_x0009_}</S>
              <S>}</S>
            </LST>
          </Obj>
          <SBK N="CompressCommand"> Get-Content -Path $this.TargetObject.FullName -Verbose </SBK>
        </Props>
      </Obj>
      <Obj RefId="5">
        <TNRef RefId="1" />
        <ToString>DotEntry</ToString>
        <Props>
          <S N="Target">"$env:APPDATA\alacritty\alacritty.yml"</S>
          <S N="ExpandedTarget">C:\Users\endow\AppData\Roaming\alacritty\alacritty.yml</S>
          <S N="TargetObject">C:\Users\endow\AppData\Roaming\alacritty\alacritty.yml</S>
          <Obj N="Content" RefId="6">
            <TNRef RefId="2" />
            <LST>
              <S># Configuration for Alacritty, the GPU enhanced terminal emulator.</S>
              <S></S>
              <S># Import additional configuration files</S>
              <S>#</S>
              <S># Imports are loaded in order, skipping all missing files, with the importing</S>
              <S># file being loaded last. If a field is already present in a previous import, it</S>
              <S># will be replaced.</S>
              <S>#</S>
              <S># All imports must either be absolute paths starting with `/`, or paths relative</S>
              <S># to the user's home directory starting with `~/`.</S>
              <S>#import:</S>
              <S>#  - /path/to/alacritty.yml</S>
              <S></S>
              <S># Any items in the `env` entry below will be added as</S>
              <S># environment variables. Some entries may override variables</S>
              <S># set by alacritty itself.</S>
              <S>#env:</S>
              <S>  # TERM variable</S>
              <S>  #</S>
              <S>  # This value is used to set the `$TERM` environment variable for</S>
              <S>  # each instance of Alacritty. If it is not present, alacritty will</S>
              <S>  # check the local terminfo database and use `alacritty` if it is</S>
              <S>  # available, otherwise `xterm-256color` is used.</S>
              <S>  #TERM: alacritty</S>
              <S></S>
              <S>window:</S>
              <S>  # Window dimensions (changes require restart)</S>
              <S>  #</S>
              <S>  # Number of lines/columns (not pixels) in the terminal. The number of columns</S>
              <S>  # must be at least `2`, while using a value of `0` for columns and lines will</S>
              <S>  # fall back to the window manager's recommended size.</S>
              <S>  dimensions:</S>
              <S>    columns: 120</S>
              <S>    lines: 55</S>
              <S></S>
              <S>  # Window position (changes require restart)</S>
              <S>  #</S>
              <S>  # Specified in number of pixels.</S>
              <S>  # If the position is not set, the window manager will handle the placement.</S>
              <S>  #position:</S>
              <S>  #  x: 0</S>
              <S>  #  y: 0</S>
              <S></S>
              <S>  # Window padding (changes require restart)</S>
              <S>  #</S>
              <S>  # Blank space added around the window in pixels. This padding is scaled</S>
              <S>  # by DPI and the specified value is always added at both opposing sides.</S>
              <S>  padding:</S>
              <S>   x: 10</S>
              <S>   y: 13</S>
              <S></S>
              <S>  # Spread additional padding evenly around the terminal content.</S>
              <S>  dynamic_padding: true</S>
              <S></S>
              <S>  # Window decorations</S>
              <S>  #</S>
              <S>  # Values for `decorations`:</S>
              <S>  #     - full: Borders and title bar</S>
              <S>  #     - none: Neither borders nor title bar</S>
              <S>  #</S>
              <S>  # Values for `decorations` (macOS only):</S>
              <S>  #     - transparent: Title bar, transparent background and title bar buttons</S>
              <S>  #     - buttonless: Title bar, transparent background and no title bar buttons</S>
              <S>  decorations: none</S>
              <S></S>
              <S>  # Startup Mode (changes require restart)</S>
              <S>  #</S>
              <S>  # Values for `startup_mode`:</S>
              <S>  #   - Windowed</S>
              <S>  #   - Maximized</S>
              <S>  #   - Fullscreen</S>
              <S>  #</S>
              <S>  # Values for `startup_mode` (macOS only):</S>
              <S>  #   - SimpleFullscreen</S>
              <S>  #startup_mode: Windowed</S>
              <S></S>
              <S>  # Window title</S>
              <S>  #title: Alacritty</S>
              <S></S>
              <S>  # Allow terminal applications to change Alacritty's window title.</S>
              <S>  dynamic_title: true</S>
              <S></S>
              <S>  # Window class (Linux/BSD only):</S>
              <S>  #class:</S>
              <S>    # Application instance name</S>
              <S>    #instance: Alacritty</S>
              <S>    # General application class</S>
              <S>    #general: Alacritty</S>
              <S></S>
              <S>  # GTK theme variant (Linux/BSD only)</S>
              <S>  #</S>
              <S>  # Override the variant of the GTK theme. Commonly supported values are `dark`</S>
              <S>  # and `light`. Set this to `None` to use the default theme variant.</S>
              <S>  #gtk_theme_variant: None</S>
              <S></S>
              <S>#scrolling:</S>
              <S>  # Maximum number of lines in the scrollback buffer.</S>
              <S>  # Specifying '0' will disable scrolling.</S>
              <S>  #history: 10000</S>
              <S></S>
              <S>  # Scrolling distance multiplier.</S>
              <S>  #multiplier: 3</S>
              <S></S>
              <S># Font configuration</S>
              <S>font:</S>
              <S>  # Normal (roman) font face</S>
              <S>  normal:</S>
              <S>    # Font family</S>
              <S>    #</S>
              <S>    # Default:</S>
              <S>    #   - (macOS) Menlo</S>
              <S>    #   - (Linux/BSD) monospace</S>
              <S>    #   - (Windows) Consolas</S>
              <S>    # family: agave-nf</S>
              <S>    family: GohuFont Nerd Font </S>
              <S></S>
              <S>    # The `style` can be specified to pick a specific face.</S>
              <S>    # style: Regular</S>
              <S></S>
              <S>  # Bold font face</S>
              <S>  #bold:</S>
              <S>    # Font family</S>
              <S>    #</S>
              <S>    # If the bold family is not specified, it will fall back to the</S>
              <S>    # value specified for the normal font.</S>
              <S>    #family: monospace</S>
              <S></S>
              <S>    # The `style` can be specified to pick a specific face.</S>
              <S>    #style: Bold</S>
              <S></S>
              <S>  # Italic font face</S>
              <S>  #italic:</S>
              <S>    # Font family</S>
              <S>    #</S>
              <S>    # If the italic family is not specified, it will fall back to the</S>
              <S>    # value specified for the normal font.</S>
              <S>    #family: monospace</S>
              <S></S>
              <S>    # The `style` can be specified to pick a specific face.</S>
              <S>    #style: Italic</S>
              <S></S>
              <S>  # Bold italic font face</S>
              <S>  #bold_italic:</S>
              <S>    # Font family</S>
              <S>    #</S>
              <S>    # If the bold italic family is not specified, it will fall back to the</S>
              <S>    # value specified for the normal font.</S>
              <S>    #family: monospace</S>
              <S></S>
              <S>    # The `style` can be specified to pick a specific face.</S>
              <S>    #style: Bold Italic</S>
              <S></S>
              <S>  # Point size</S>
              <S>  size: 12.0</S>
              <S></S>
              <S>  # Offset is the extra space around each character. `offset.y` can be thought</S>
              <S>  # of as modifying the line spacing, and `offset.x` as modifying the letter</S>
              <S>  # spacing.</S>
              <S>  #offset:</S>
              <S>  #  x: 0</S>
              <S>  #  y: 0</S>
              <S></S>
              <S>  # Glyph offset determines the locations of the glyphs within their cells with</S>
              <S>  # the default being at the bottom. Increasing `x` moves the glyph to the</S>
              <S>  # right, increasing `y` moves the glyph upward.</S>
              <S>  #glyph_offset:</S>
              <S>  #  x: 0</S>
              <S>  #  y: 0</S>
              <S></S>
              <S>  # Thin stroke font rendering (macOS only)</S>
              <S>  #</S>
              <S>  # Thin strokes are suitable for retina displays, but for non-retina screens</S>
              <S>  # it is recommended to set `use_thin_strokes` to `false`.</S>
              <S>  #use_thin_strokes: true</S>
              <S></S>
              <S># If `true`, bold text is drawn using the bright color variants.</S>
              <S>draw_bold_text_with_bright_colors: true</S>
              <S></S>
              <S># Colors (Gruvbox Dark)</S>
              <S>colors:</S>
              <S>  # Default colors</S>
              <S>  primary:</S>
              <S>   background: "0x282828"</S>
              <S>   foreground: "0xebdbb2"</S>
              <S></S>
              <S>    # Bright and dim foreground colors</S>
              <S>    #</S>
              <S>    # The dimmed foreground color is calculated automatically if it is not</S>
              <S>    # present. If the bright foreground color is not set, or</S>
              <S>    # `draw_bold_text_with_bright_colors` is `false`, the normal foreground</S>
              <S>    # color will be used.</S>
              <S>    #dim_foreground: '#828482'</S>
              <S>    #bright_foreground: '#eaeaea'30</S>
              <S></S>
              <S>  # Cursor colors</S>
              <S>  #</S>
              <S>  # Colors which should be used to draw the terminal cursor.</S>
              <S>  #</S>
              <S>  # Allowed values are CellForeground/CellBackground, which reference the</S>
              <S>  # affected cell, or hexadecimal colors like #ff00ff.</S>
              <S>  #cursor:</S>
              <S>  #  text: CellBackground</S>
              <S>  #  cursor: CellForeground</S>
              <S></S>
              <S>  # Vi mode cursor colors</S>
              <S>  #</S>
              <S>  # Colors for the cursor when the vi mode is active.</S>
              <S>  #</S>
              <S>  # Allowed values are CellForeground/CellBackground, which reference the</S>
              <S>  # affected cell, or hexadecimal colors like #ff00ff.</S>
              <S>  #vi_mode_cursor:</S>
              <S>  #  text: CellBackground</S>
              <S>  #  cursor: CellForeground</S>
              <S></S>
              <S>  # Search colors</S>
              <S>  #</S>
              <S>  # Colors used for the search bar and match highlighting.</S>
              <S>  #search:</S>
              <S>    # Allowed values are CellForeground/CellBackground, which reference the</S>
              <S>    # affected cell, or hexadecimal colors like #ff00ff.</S>
              <S>    #matches:</S>
              <S>    #  foreground: '#000000'</S>
              <S>    #  background: '#ffffff'</S>
              <S>    #focused_match:</S>
              <S>    #  foreground: CellBackground</S>
              <S>    #  background: CellForeground</S>
              <S></S>
              <S>    #bar:</S>
              <S>    #  background: '#c5c8c6'</S>
              <S>    #  foreground: '#1d1f21'</S>
              <S></S>
              <S>  # Keyboard hints</S>
              <S>  #hints:</S>
              <S>    # Fist character in the hint label</S>
              <S>    #</S>
              <S>    # Allowed values are CellForeground/CellBackground, which reference the</S>
              <S>    # affected cell, or hexadecimal colors like #ff00ff.</S>
              <S>    #start:</S>
              <S>    #  foreground: '#1d1f21'</S>
              <S>    #  background: '#e9ff5e'</S>
              <S></S>
              <S>    # All characters after the first one in the hint label</S>
              <S>    #</S>
              <S>    # Allowed values are CellForeground/CellBackground, which reference the</S>
              <S>    # affected cell, or hexadecimal colors like #ff00ff.</S>
              <S>    #end:</S>
              <S>    #  foreground: '#e9ff5e'</S>
              <S>    #  background: '#1d1f21'</S>
              <S></S>
              <S>  # Line indicator</S>
              <S>  #</S>
              <S>  # Color used for the indicator displaying the position in history during</S>
              <S>  # search and vi mode.</S>
              <S>  #</S>
              <S>  # By default, these will use the opposing primary color.</S>
              <S>  #line_indicator:</S>
              <S>  #  foreground: None</S>
              <S>  #  background: None</S>
              <S></S>
              <S>  # Selection colors</S>
              <S>  #</S>
              <S>  # Colors which should be used to draw the selection area.</S>
              <S>  #</S>
              <S>  # Allowed values are CellForeground/CellBackground, which reference the</S>
              <S>  # affected cell, or hexadecimal colors like #ff00ff.</S>
              <S>  selection:</S>
              <S>   text: "0x111111"</S>
              <S>   background: "0x00ffff"</S>
              <S></S>
              <S>  # Normal colors</S>
              <S>  normal:</S>
              <S>    black: "0x282828"</S>
              <S>    red: "0xcc241d"</S>
              <S>    green: "0x98971a"</S>
              <S>    yellow: "0xd79921"</S>
              <S>    blue: "0x458588"</S>
              <S>    magenta: "0xb16286"</S>
              <S>    cyan: "0x689d6a"</S>
              <S>    white: "0xa89984"</S>
              <S></S>
              <S>  # Bright colors</S>
              <S>  bright:</S>
              <S>    black: "0x928374"</S>
              <S>    red: "0xfb4934"</S>
              <S>    green: "0xb8bb26"</S>
              <S>    yellow: "0xfabd2f"</S>
              <S>    blue: "0x83a598"</S>
              <S>    magenta: "0xd3869b"</S>
              <S>    cyan: "0x8ec07c"</S>
              <S>    white: "0xebdbb2"</S>
              <S></S>
              <S>  # Dim colors</S>
              <S>  #</S>
              <S>  # If the dim colors are not set, they will be calculated automatically based</S>
              <S>  # on the `normal` colors.</S>
              <S>  #dim:</S>
              <S>  #  black:   '#131415'</S>
              <S>  #  red:     '#864343'</S>
              <S>  #  green:   '#777c44'</S>
              <S>  #  yellow:  '#9e824c'</S>
              <S>  #  blue:    '#556a7d'</S>
              <S>  #  magenta: '#75617b'</S>
              <S>  #  cyan:    '#5b7d78'</S>
              <S>  #  white:   '#828482'</S>
              <S></S>
              <S>  # Indexed Colors</S>
              <S>  #</S>
              <S>  # The indexed colors include all colors from 16 to 256.</S>
              <S>  # When these are not set, they're filled with sensible defaults.</S>
              <S>  #</S>
              <S>  # Example:</S>
              <S>  #   `- { index: 16, color: '#ff00ff' }`</S>
              <S>  #</S>
              <S>  #indexed_colors: []</S>
              <S></S>
              <S># Bell</S>
              <S>#</S>
              <S># The bell is rung every time the BEL control character is received.</S>
              <S>#bell:</S>
              <S>  # Visual Bell Animation</S>
              <S>  #</S>
              <S>  # Animation effect for flashing the screen when the visual bell is rung.</S>
              <S>  #</S>
              <S>  # Values for `animation`:</S>
              <S>  #   - Ease</S>
              <S>  #   - EaseOut</S>
              <S>  #   - EaseOutSine</S>
              <S>  #   - EaseOutQuad</S>
              <S>  #   - EaseOutCubic</S>
              <S>  #   - EaseOutQuart</S>
              <S>  #   - EaseOutQuint</S>
              <S>  #   - EaseOutExpo</S>
              <S>  #   - EaseOutCirc</S>
              <S>  #   - Linear</S>
              <S>  #animation: EaseOutExpo</S>
              <S></S>
              <S>  # Duration of the visual bell flash in milliseconds. A `duration` of `0` will</S>
              <S>  # disable the visual bell animation.</S>
              <S>  #duration: 0</S>
              <S></S>
              <S>  # Visual bell animation color.</S>
              <S>  #color: '#ffffff'</S>
              <S></S>
              <S>  # Bell Command</S>
              <S>  #</S>
              <S>  # This program is executed whenever the bell is rung.</S>
              <S>  #</S>
              <S>  # When set to `command: None`, no command will be executed.</S>
              <S>  #</S>
              <S>  # Example:</S>
              <S>  #   command:</S>
              <S>  #     program: notify-send</S>
              <S>  #     args: ["Hello, World!"]</S>
              <S>  #</S>
              <S>  #command: None</S>
              <S></S>
              <S># Background opacity</S>
              <S>#</S>
              <S># Window opacity as a floating point number from `0.0` to `1.0`.</S>
              <S># The value `0.0` is completely transparent and `1.0` is opaque.</S>
              <S>#background_opacity: 1.0</S>
              <S></S>
              <S>#selection:</S>
              <S>  # This string contains all characters that are used as separators for</S>
              <S>  # "semantic words" in Alacritty.</S>
              <S>  #semantic_escape_chars: ",â”‚`|:\"' ()[]{}&lt;&gt;\t"</S>
              <S></S>
              <S>  # When set to `true`, selected text will be copied to the primary clipboard.</S>
              <S>  #save_to_clipboard: false</S>
              <S></S>
              <S>cursor:</S>
              <S>  # Cursor style</S>
              <S>  style:</S>
              <S>    # Cursor shape</S>
              <S>    #</S>
              <S>    # Values for `shape`:</S>
              <S>    #   - â–‡ Block</S>
              <S>    #   - _ Underline</S>
              <S>    #   - | Beam</S>
              <S>    shape: Block</S>
              <S></S>
              <S>    # Cursor blinking state</S>
              <S>    #</S>
              <S>    # Values for `blinking`:</S>
              <S>    #   - Never: Prevent the cursor from ever blinking</S>
              <S>    #   - Off: Disable blinking by default</S>
              <S>    #   - On: Enable blinking by default</S>
              <S>    #   - Always: Force the cursor to always blink</S>
              <S>    blinking: Always</S>
              <S></S>
              <S>  # Vi mode cursor style</S>
              <S>  #</S>
              <S>  # If the vi mode cursor style is `None` or not specified, it will fall back to</S>
              <S>  # the style of the active value of the normal cursor.</S>
              <S>  #</S>
              <S>  # See `cursor.style` for available options.</S>
              <S>  # vi_mode_style: None</S>
              <S></S>
              <S>  # Cursor blinking interval in milliseconds.</S>
              <S>  # blink_interval: 750</S>
              <S></S>
              <S>  # If this is `true`, the cursor will be rendered as a hollow box when the</S>
              <S>  # window is not focused.</S>
              <S>  unfocused_hollow: true</S>
              <S></S>
              <S>  # Thickness of the cursor relative to the cell width as floating point number</S>
              <S>  # from `0.0` to `1.0`.</S>
              <S>  # thickness: 0.15</S>
              <S></S>
              <S># Live config reload (changes require restart)</S>
              <S>#live_config_reload: true</S>
              <S></S>
              <S># Shell</S>
              <S>#</S>
              <S># You can set `shell.program` to the path of your favorite shell, e.g.</S>
              <S># `/bin/fish`. Entries in `shell.args` are passed unmodified as arguments to the</S>
              <S># shell.</S>
              <S>#</S>
              <S># Default:</S>
              <S>#   - (macOS) /bin/bash --login</S>
              <S>#   - (Linux/BSD) user login shell</S>
              <S>#   - (Windows) powershell</S>
              <S>#shell:</S>
              <S>#  program: /bin/bash</S>
              <S>#  args:</S>
              <S>#    - --login</S>
              <S></S>
              <S># Startup directory</S>
              <S>#</S>
              <S># Directory the shell is started in. If this is unset, or `None`, the working</S>
              <S># directory of the parent process will be used.</S>
              <S>#working_directory: None</S>
              <S></S>
              <S># Send ESC (\x1b) before characters when alt is pressed.</S>
              <S>#alt_send_esc: true</S>
              <S></S>
              <S>#mouse:</S>
              <S>  # Click settings</S>
              <S>  #</S>
              <S>  # The `double_click` and `triple_click` settings control the time</S>
              <S>  # alacritty should wait for accepting multiple clicks as one double</S>
              <S>  # or triple click.</S>
              <S>  #double_click: { threshold: 300 }</S>
              <S>  #triple_click: { threshold: 300 }</S>
              <S></S>
              <S>  # If this is `true`, the cursor is temporarily hidden when typing.</S>
              <S>  #hide_when_typing: false</S>
              <S></S>
              <S>  #url:</S>
              <S>    # URL launcher</S>
              <S>    #</S>
              <S>    # This program is executed when clicking on a text which is recognized as a</S>
              <S>    # URL. The URL is always added to the command as the last parameter.</S>
              <S>    #</S>
              <S>    # When set to `launcher: None`, URL launching will be disabled completely.</S>
              <S>    #</S>
              <S>    # Default:</S>
              <S>    #   - (macOS) open</S>
              <S>    #   - (Linux/BSD) xdg-open</S>
              <S>    #   - (Windows) cmd /c start ""</S>
              <S>    #launcher:</S>
              <S>    #  program: xdg-open</S>
              <S>    #  args: []</S>
              <S></S>
              <S>    # URL modifiers</S>
              <S>    #</S>
              <S>    # These are the modifiers that need to be held down for opening URLs when</S>
              <S>    # clicking on them. The available modifiers are documented in the key</S>
              <S>    # binding section.</S>
              <S>    #modifiers: None</S>
              <S></S>
              <S># Regex hints</S>
              <S>#</S>
              <S># Terminal hints can be used to find text in the visible part of the terminal</S>
              <S># and pipe it to other applications.</S>
              <S>#hints:</S>
              <S>  # Keys used for the hint labels.</S>
              <S>  #alphabet: "jfkdls;ahgurieowpq"</S>
              <S></S>
              <S>  # List with all available hints</S>
              <S>  #</S>
              <S>  # The fields `command`, `binding.key` and `binding.mods` accept the same</S>
              <S>  # values as they do in the `key_bindings` section.</S>
              <S>  #</S>
              <S>  # Example</S>
              <S>  #</S>
              <S>  # enabled:</S>
              <S>  #   - regex: "alacritty/alacritty#\\d*"</S>
              <S>  #     command: firefox</S>
              <S>  #     binding:</S>
              <S>  #       key: G</S>
              <S>  #       mods: Control|Shift</S>
              <S>  #enabled: []</S>
              <S></S>
              <S># Mouse bindings</S>
              <S>#</S>
              <S># Mouse bindings are specified as a list of objects, much like the key</S>
              <S># bindings further below.</S>
              <S>#</S>
              <S># To trigger mouse bindings when an application running within Alacritty</S>
              <S># captures the mouse, the `Shift` modifier is automatically added as a</S>
              <S># requirement.</S>
              <S>#</S>
              <S># Each mouse binding will specify a:</S>
              <S>#</S>
              <S># - `mouse`:</S>
              <S>#</S>
              <S>#   - Middle</S>
              <S>#   - Left</S>
              <S>#   - Right</S>
              <S>#   - Numeric identifier such as `5`</S>
              <S>#</S>
              <S># - `action` (see key bindings)</S>
              <S>#</S>
              <S># And optionally:</S>
              <S>#</S>
              <S># - `mods` (see key bindings)</S>
              <S>#mouse_bindings:</S>
              <S>#  - { mouse: Middle, action: PasteSelection }</S>
              <S></S>
              <S># Key bindings</S>
              <S>#</S>
              <S># Key bindings are specified as a list of objects. For example, this is the</S>
              <S># default paste binding:</S>
              <S>#</S>
              <S># `- { key: V, mods: Control|Shift, action: Paste }`</S>
              <S>#</S>
              <S># Each key binding will specify a:</S>
              <S>#</S>
              <S># - `key`: Identifier of the key pressed</S>
              <S>#</S>
              <S>#    - A-Z</S>
              <S>#    - F1-F24</S>
              <S>#    - Key0-Key9</S>
              <S>#</S>
              <S>#    A full list with available key codes can be found here:</S>
              <S>#    https://docs.rs/glutin/*/glutin/event/enum.VirtualKeyCode.html#variants</S>
              <S>#</S>
              <S>#    Instead of using the name of the keys, the `key` field also supports using</S>
              <S>#    the scancode of the desired key. Scancodes have to be specified as a</S>
              <S>#    decimal number. This command will allow you to display the hex scancodes</S>
              <S>#    for certain keys:</S>
              <S>#</S>
              <S>#       `showkey --scancodes`.</S>
              <S>#</S>
              <S># Then exactly one of:</S>
              <S>#</S>
              <S># - `chars`: Send a byte sequence to the running application</S>
              <S>#</S>
              <S>#    The `chars` field writes the specified string to the terminal. This makes</S>
              <S>#    it possible to pass escape sequences. To find escape codes for bindings</S>
              <S>#    like `PageUp` (`"\x1b[5~"`), you can run the command `showkey -a` outside</S>
              <S>#    of tmux. Note that applications use terminfo to map escape sequences back</S>
              <S>#    to keys. It is therefore required to update the terminfo when changing an</S>
              <S>#    escape sequence.</S>
              <S>#</S>
              <S># - `action`: Execute a predefined action</S>
              <S>#</S>
              <S>#   - ToggleViMode</S>
              <S>#   - SearchForward</S>
              <S>#       Start searching toward the right of the search origin.</S>
              <S>#   - SearchBackward</S>
              <S>#       Start searching toward the left of the search origin.</S>
              <S>#   - Copy</S>
              <S>#   - Paste</S>
              <S>#   - IncreaseFontSize</S>
              <S>#   - DecreaseFontSize</S>
              <S>#   - ResetFontSize</S>
              <S>#   - ScrollPageUp</S>
              <S>#   - ScrollPageDown</S>
              <S>#   - ScrollHalfPageUp</S>
              <S>#   - ScrollHalfPageDown</S>
              <S>#   - ScrollLineUp</S>
              <S>#   - ScrollLineDown</S>
              <S>#   - ScrollToTop</S>
              <S>#   - ScrollToBottom</S>
              <S>#   - ClearHistory</S>
              <S>#       Remove the terminal's scrollback history.</S>
              <S>#   - Hide</S>
              <S>#       Hide the Alacritty window.</S>
              <S>#   - Minimize</S>
              <S>#       Minimize the Alacritty window.</S>
              <S>#   - Quit</S>
              <S>#       Quit Alacritty.</S>
              <S>#   - ToggleFullscreen</S>
              <S>#   - SpawnNewInstance</S>
              <S>#       Spawn a new instance of Alacritty.</S>
              <S>#   - ClearLogNotice</S>
              <S>#       Clear Alacritty's UI warning and error notice.</S>
              <S>#   - ClearSelection</S>
              <S>#       Remove the active selection.</S>
              <S>#   - ReceiveChar</S>
              <S>#   - None</S>
              <S>#</S>
              <S># - Vi mode exclusive actions:</S>
              <S>#</S>
              <S>#   - Open</S>
              <S>#       Open URLs at the cursor location with the launcher configured in</S>
              <S>#       `url.launcher`.</S>
              <S>#   - ToggleNormalSelection</S>
              <S>#   - ToggleLineSelection</S>
              <S>#   - ToggleBlockSelection</S>
              <S>#   - ToggleSemanticSelection</S>
              <S>#       Toggle semantic selection based on `selection.semantic_escape_chars`.</S>
              <S>#</S>
              <S># - Vi mode exclusive cursor motion actions:</S>
              <S>#</S>
              <S>#   - Up</S>
              <S>#       One line up.</S>
              <S>#   - Down</S>
              <S>#       One line down.</S>
              <S>#   - Left</S>
              <S>#       One character left.</S>
              <S>#   - Right</S>
              <S>#       One character right.</S>
              <S>#   - First</S>
              <S>#       First column, or beginning of the line when already at the first column.</S>
              <S>#   - Last</S>
              <S>#       Last column, or beginning of the line when already at the last column.</S>
              <S>#   - FirstOccupied</S>
              <S>#       First non-empty cell in this terminal row, or first non-empty cell of</S>
              <S>#       the line when already at the first cell of the row.</S>
              <S>#   - High</S>
              <S>#       Top of the screen.</S>
              <S>#   - Middle</S>
              <S>#       Center of the screen.</S>
              <S>#   - Low</S>
              <S>#       Bottom of the screen.</S>
              <S>#   - SemanticLeft</S>
              <S>#       Start of the previous semantically separated word.</S>
              <S>#   - SemanticRight</S>
              <S>#       Start of the next semantically separated word.</S>
              <S>#   - SemanticLeftEnd</S>
              <S>#       End of the previous semantically separated word.</S>
              <S>#   - SemanticRightEnd</S>
              <S>#       End of the next semantically separated word.</S>
              <S>#   - WordLeft</S>
              <S>#       Start of the previous whitespace separated word.</S>
              <S>#   - WordRight</S>
              <S>#       Start of the next whitespace separated word.</S>
              <S>#   - WordLeftEnd</S>
              <S>#       End of the previous whitespace separated word.</S>
              <S>#   - WordRightEnd</S>
              <S>#       End of the next whitespace separated word.</S>
              <S>#   - Bracket</S>
              <S>#       Character matching the bracket at the cursor's location.</S>
              <S>#   - SearchNext</S>
              <S>#       Beginning of the next match.</S>
              <S>#   - SearchPrevious</S>
              <S>#       Beginning of the previous match.</S>
              <S>#   - SearchStart</S>
              <S>#       Start of the match to the left of the vi mode cursor.</S>
              <S>#   - SearchEnd</S>
              <S>#       End of the match to the right of the vi mode cursor.</S>
              <S>#</S>
              <S># - Search mode exclusive actions:</S>
              <S>#   - SearchFocusNext</S>
              <S>#       Move the focus to the next search match.</S>
              <S>#   - SearchFocusPrevious</S>
              <S>#       Move the focus to the previous search match.</S>
              <S>#   - SearchConfirm</S>
              <S>#   - SearchCancel</S>
              <S>#   - SearchClear</S>
              <S>#       Reset the search regex.</S>
              <S>#   - SearchDeleteWord</S>
              <S>#       Delete the last word in the search regex.</S>
              <S>#   - SearchHistoryPrevious</S>
              <S>#       Go to the previous regex in the search history.</S>
              <S>#   - SearchHistoryNext</S>
              <S>#       Go to the next regex in the search history.</S>
              <S>#</S>
              <S># - macOS exclusive actions:</S>
              <S>#   - ToggleSimpleFullscreen</S>
              <S>#       Enter fullscreen without occupying another space.</S>
              <S>#</S>
              <S># - Linux/BSD exclusive actions:</S>
              <S>#</S>
              <S>#   - CopySelection</S>
              <S>#       Copy from the selection buffer.</S>
              <S>#   - PasteSelection</S>
              <S>#       Paste from the selection buffer.</S>
              <S>#</S>
              <S># - `command`: Fork and execute a specified command plus arguments</S>
              <S>#</S>
              <S>#    The `command` field must be a map containing a `program` string and an</S>
              <S>#    `args` array of command line parameter strings. For example:</S>
              <S>#       `{ program: "alacritty", args: ["-e", "vttest"] }`</S>
              <S>#</S>
              <S># And optionally:</S>
              <S>#</S>
              <S># - `mods`: Key modifiers to filter binding actions</S>
              <S>#</S>
              <S>#    - Command</S>
              <S>#    - Control</S>
              <S>#    - Option</S>
              <S>#    - Super</S>
              <S>#    - Shift</S>
              <S>#    - Alt</S>
              <S>#</S>
              <S>#    Multiple `mods` can be combined using `|` like this:</S>
              <S>#       `mods: Control|Shift`.</S>
              <S>#    Whitespace and capitalization are relevant and must match the example.</S>
              <S>#</S>
              <S># - `mode`: Indicate a binding for only specific terminal reported modes</S>
              <S>#</S>
              <S>#    This is mainly used to send applications the correct escape sequences</S>
              <S>#    when in different modes.</S>
              <S>#</S>
              <S>#    - AppCursor</S>
              <S>#    - AppKeypad</S>
              <S>#    - Search</S>
              <S>#    - Alt</S>
              <S>#    - Vi</S>
              <S>#</S>
              <S>#    A `~` operator can be used before a mode to apply the binding whenever</S>
              <S>#    the mode is *not* active, e.g. `~Alt`.</S>
              <S>#</S>
              <S># Bindings are always filled by default, but will be replaced when a new</S>
              <S># binding with the same triggers is defined. To unset a default binding, it can</S>
              <S># be mapped to the `ReceiveChar` action. Alternatively, you can use `None` for</S>
              <S># a no-op if you do not wish to receive input characters for that binding.</S>
              <S>#</S>
              <S># If the same trigger is assigned to multiple actions, all of them are executed</S>
              <S># in the order they were defined in.</S>
              <S>#key_bindings:</S>
              <S>  #- { key: Paste,                                       action: Paste          }</S>
              <S>  #- { key: Copy,                                        action: Copy           }</S>
              <S>  #- { key: L,         mods: Control,                    action: ClearLogNotice }</S>
              <S>  #- { key: L,         mods: Control, mode: ~Vi|~Search, chars: "\x0c"          }</S>
              <S>  #- { key: PageUp,    mods: Shift,   mode: ~Alt,        action: ScrollPageUp,  }</S>
              <S>  #- { key: PageDown,  mods: Shift,   mode: ~Alt,        action: ScrollPageDown }</S>
              <S>  #- { key: Home,      mods: Shift,   mode: ~Alt,        action: ScrollToTop,   }</S>
              <S>  #- { key: End,       mods: Shift,   mode: ~Alt,        action: ScrollToBottom }</S>
              <S></S>
              <S>  # Vi Mode</S>
              <S>  #- { key: Space,  mods: Shift|Control, mode: Vi|~Search, action: ScrollToBottom          }</S>
              <S>  #- { key: Space,  mods: Shift|Control, mode: ~Search,    action: ToggleViMode            }</S>
              <S>  #- { key: Escape,                      mode: Vi|~Search, action: ClearSelection          }</S>
              <S>  #- { key: I,                           mode: Vi|~Search, action: ScrollToBottom          }</S>
              <S>  #- { key: I,                           mode: Vi|~Search, action: ToggleViMode            }</S>
              <S>  #- { key: C,      mods: Control,       mode: Vi|~Search, action: ToggleViMode            }</S>
              <S>  #- { key: Y,      mods: Control,       mode: Vi|~Search, action: ScrollLineUp            }</S>
              <S>  #- { key: E,      mods: Control,       mode: Vi|~Search, action: ScrollLineDown          }</S>
              <S>  #- { key: G,                           mode: Vi|~Search, action: ScrollToTop             }</S>
              <S>  #- { key: G,      mods: Shift,         mode: Vi|~Search, action: ScrollToBottom          }</S>
              <S>  #- { key: B,      mods: Control,       mode: Vi|~Search, action: ScrollPageUp            }</S>
              <S>  #- { key: F,      mods: Control,       mode: Vi|~Search, action: ScrollPageDown          }</S>
              <S>  #- { key: U,      mods: Control,       mode: Vi|~Search, action: ScrollHalfPageUp        }</S>
              <S>  #- { key: D,      mods: Control,       mode: Vi|~Search, action: ScrollHalfPageDown      }</S>
              <S>  #- { key: Y,                           mode: Vi|~Search, action: Copy                    }</S>
              <S>  #- { key: Y,                           mode: Vi|~Search, action: ClearSelection          }</S>
              <S>  #- { key: Copy,                        mode: Vi|~Search, action: ClearSelection          }</S>
              <S>  #- { key: V,                           mode: Vi|~Search, action: ToggleNormalSelection   }</S>
              <S>  #- { key: V,      mods: Shift,         mode: Vi|~Search, action: ToggleLineSelection     }</S>
              <S>  #- { key: V,      mods: Control,       mode: Vi|~Search, action: ToggleBlockSelection    }</S>
              <S>  #- { key: V,      mods: Alt,           mode: Vi|~Search, action: ToggleSemanticSelection }</S>
              <S>  #- { key: Return,                      mode: Vi|~Search, action: Open                    }</S>
              <S>  #- { key: K,                           mode: Vi|~Search, action: Up                      }</S>
              <S>  #- { key: J,                           mode: Vi|~Search, action: Down                    }</S>
              <S>  #- { key: H,                           mode: Vi|~Search, action: Left                    }</S>
              <S>  #- { key: L,                           mode: Vi|~Search, action: Right                   }</S>
              <S>  #- { key: Up,                          mode: Vi|~Search, action: Up                      }</S>
              <S>  #- { key: Down,                        mode: Vi|~Search, action: Down                    }</S>
              <S>  #- { key: Left,                        mode: Vi|~Search, action: Left                    }</S>
              <S>  #- { key: Right,                       mode: Vi|~Search, action: Right                   }</S>
              <S>  #- { key: Key0,                        mode: Vi|~Search, action: First                   }</S>
              <S>  #- { key: Key4,   mods: Shift,         mode: Vi|~Search, action: Last                    }</S>
              <S>  #- { key: Key6,   mods: Shift,         mode: Vi|~Search, action: FirstOccupied           }</S>
              <S>  #- { key: H,      mods: Shift,         mode: Vi|~Search, action: High                    }</S>
              <S>  #- { key: M,      mods: Shift,         mode: Vi|~Search, action: Middle                  }</S>
              <S>  #- { key: L,      mods: Shift,         mode: Vi|~Search, action: Low                     }</S>
              <S>  #- { key: B,                           mode: Vi|~Search, action: SemanticLeft            }</S>
              <S>  #- { key: W,                           mode: Vi|~Search, action: SemanticRight           }</S>
              <S>  #- { key: E,                           mode: Vi|~Search, action: SemanticRightEnd        }</S>
              <S>  #- { key: B,      mods: Shift,         mode: Vi|~Search, action: WordLeft                }</S>
              <S>  #- { key: W,      mods: Shift,         mode: Vi|~Search, action: WordRight               }</S>
              <S>  #- { key: E,      mods: Shift,         mode: Vi|~Search, action: WordRightEnd            }</S>
              <S>  #- { key: Key5,   mods: Shift,         mode: Vi|~Search, action: Bracket                 }</S>
              <S>  #- { key: Slash,                       mode: Vi|~Search, action: SearchForward           }</S>
              <S>  #- { key: Slash,  mods: Shift,         mode: Vi|~Search, action: SearchBackward          }</S>
              <S>  #- { key: N,                           mode: Vi|~Search, action: SearchNext              }</S>
              <S>  #- { key: N,      mods: Shift,         mode: Vi|~Search, action: SearchPrevious          }</S>
              <S></S>
              <S>  # Search Mode</S>
              <S>  #- { key: Return,                mode: Search|Vi,  action: SearchConfirm         }</S>
              <S>  #- { key: Escape,                mode: Search,     action: SearchCancel          }</S>
              <S>  #- { key: C,      mods: Control, mode: Search,     action: SearchCancel          }</S>
              <S>  #- { key: U,      mods: Control, mode: Search,     action: SearchClear           }</S>
              <S>  #- { key: W,      mods: Control, mode: Search,     action: SearchDeleteWord      }</S>
              <S>  #- { key: P,      mods: Control, mode: Search,     action: SearchHistoryPrevious }</S>
              <S>  #- { key: N,      mods: Control, mode: Search,     action: SearchHistoryNext     }</S>
              <S>  #- { key: Up,                    mode: Search,     action: SearchHistoryPrevious }</S>
              <S>  #- { key: Down,                  mode: Search,     action: SearchHistoryNext     }</S>
              <S>  #- { key: Return,                mode: Search|~Vi, action: SearchFocusNext       }</S>
              <S>  #- { key: Return, mods: Shift,   mode: Search|~Vi, action: SearchFocusPrevious   }</S>
              <S></S>
              <S>  # (Windows, Linux, and BSD only)</S>
              <S>  #- { key: V,              mods: Control|Shift, mode: ~Vi,        action: Paste            }</S>
              <S>  #- { key: C,              mods: Control|Shift,                   action: Copy             }</S>
              <S>  #- { key: F,              mods: Control|Shift, mode: ~Search,    action: SearchForward    }</S>
              <S>  #- { key: B,              mods: Control|Shift, mode: ~Search,    action: SearchBackward   }</S>
              <S>  #- { key: C,              mods: Control|Shift, mode: Vi|~Search, action: ClearSelection   }</S>
              <S>  #- { key: Insert,         mods: Shift,                           action: PasteSelection   }</S>
              <S>  #- { key: Key0,           mods: Control,                         action: ResetFontSize    }</S>
              <S>  #- { key: Equals,         mods: Control,                         action: IncreaseFontSize }</S>
              <S>  #- { key: Plus,           mods: Control,                         action: IncreaseFontSize }</S>
              <S>  #- { key: NumpadAdd,      mods: Control,                         action: IncreaseFontSize }</S>
              <S>  #- { key: Minus,          mods: Control,                         action: DecreaseFontSize }</S>
              <S>  #- { key: NumpadSubtract, mods: Control,                         action: DecreaseFontSize }</S>
              <S></S>
              <S>  # (Windows only)</S>
              <S>  #- { key: Return,   mods: Alt,           action: ToggleFullscreen }</S>
              <S></S>
              <S>  # (macOS only)</S>
              <S>  #- { key: K,              mods: Command, mode: ~Vi|~Search, chars: "\x0c"            }</S>
              <S>  #- { key: K,              mods: Command, mode: ~Vi|~Search, action: ClearHistory     }</S>
              <S>  #- { key: Key0,           mods: Command,                    action: ResetFontSize    }</S>
              <S>  #- { key: Equals,         mods: Command,                    action: IncreaseFontSize }</S>
              <S>  #- { key: Plus,           mods: Command,                    action: IncreaseFontSize }</S>
              <S>  #- { key: NumpadAdd,      mods: Command,                    action: IncreaseFontSize }</S>
              <S>  #- { key: Minus,          mods: Command,                    action: DecreaseFontSize }</S>
              <S>  #- { key: NumpadSubtract, mods: Command,                    action: DecreaseFontSize }</S>
              <S>  #- { key: V,              mods: Command,                    action: Paste            }</S>
              <S>  #- { key: C,              mods: Command,                    action: Copy             }</S>
              <S>  #- { key: C,              mods: Command, mode: Vi|~Search,  action: ClearSelection   }</S>
              <S>  #- { key: H,              mods: Command,                    action: Hide             }</S>
              <S>  #- { key: M,              mods: Command,                    action: Minimize         }</S>
              <S>  #- { key: Q,              mods: Command,                    action: Quit             }</S>
              <S>  #- { key: W,              mods: Command,                    action: Quit             }</S>
              <S>  #- { key: N,              mods: Command,                    action: SpawnNewInstance }</S>
              <S>  #- { key: F,              mods: Command|Control,            action: ToggleFullscreen }</S>
              <S>  #- { key: F,              mods: Command, mode: ~Search,     action: SearchForward    }</S>
              <S>  #- { key: B,              mods: Command, mode: ~Search,     action: SearchBackward   }</S>
              <S></S>
              <S>#debug:</S>
              <S>  # Display the time it takes to redraw each frame.</S>
              <S>  #render_timer: false</S>
              <S></S>
              <S>  # Keep the log file after quitting Alacritty.</S>
              <S>  #persistent_logging: false</S>
              <S></S>
              <S>  # Log level</S>
              <S>  #</S>
              <S>  # Values for `log_level`:</S>
              <S>  #   - Off</S>
              <S>  #   - Error</S>
              <S>  #   - Warn</S>
              <S>  #   - Info</S>
              <S>  #   - Debug</S>
              <S>  #   - Trace</S>
              <S>  #log_level: Warn</S>
              <S></S>
              <S>  # Print all received window events.</S>
              <S>  #print_events: false</S>
            </LST>
          </Obj>
          <SBK N="CompressCommand"> Get-Content -Path $this.TargetObject.FullName -Verbose </SBK>
        </Props>
      </Obj>
      <Obj RefId="7">
        <TNRef RefId="1" />
        <ToString>DotEntry</ToString>
        <Props>
          <S N="Target">"$PowerShellCurrentUser\profile.ps1"</S>
          <S N="ExpandedTarget">C:\Users\endow\Documents\WindowsPowerShell\profile.ps1</S>
          <S N="TargetObject">C:\Users\endow\Documents\WindowsPowerShell\profile.ps1</S>
          <Obj N="Content" RefId="8">
            <TNRef RefId="2" />
            <LST>
              <S>#Requires -Version 5.0</S>
              <S></S>
              <S>#------------------------------------------------------------------------------</S>
              <S>#          Endowdly's PowerShell Profile</S>
              <S>#------------------------------------------------------------------------------ </S>
              <S># [      Author      ] endowdly           </S>
              <S># [       Email      ] endowdly@gmail.com</S>
              <S># [   Date Created   ] 29 Jan, 2017</S>
              <S># [   Last Modified  ] 08 Mar, 2021</S>
              <S># [      System      ] Windows 10</S>
              <S></S>
              <S>#region Data ------------------------------------------------------------------- </S>
              <S>data __messages {</S>
              <S>    @{</S>
              <S>        Warning     = @{</S>
              <S>            ProfileFileNotFound = 'Custom profile config not found'</S>
              <S>            ModuleNotFound      = 'Module {0} was not found in env:PSModulePath'</S>
              <S>            PromptFileNotFound  = 'Prompt file not found'</S>
              <S>            PSReadLineNotFound  = 'PSReadline file not found'</S>
              <S>            ModuleFileNotFound  = 'Profile module file not found'</S>
              <S>            ACFileNotFound      = 'ArgumentCompleter file not found'</S>
              <S>        }</S>
              <S></S>
              <S>        Information = @{</S>
              <S>            IsAdmin           = '!!! Running as Administrator !!!'        </S>
              <S>            ModuleLoadWarning = '{0} of {1} {2} not loaded'</S>
              <S>        }</S>
              <S>    }</S>
              <S>}</S>
              <S>#endregion</S>
              <S></S>
              <S>#region Persistant ------------------------------------------------------------- </S>
              <S>$PromptCheckpoint = Get-Content function:\Prompt -ErrorAction SilentlyContinue </S>
              <S></S>
              <S></S>
              <S>function Invoke-Combine {</S>
              <S>    &lt;# </S>
              <S>    .Description </S>
              <S>        Uses managed code to quickly combine files for testing.</S>
              <S>        Returns the combined path as a FileInfo object.</S>
              <S>        obj[] -&gt; FileInfo #&gt;</S>
              <S></S>
              <S>    [System.IO.FileInfo] [System.IO.Path]::Combine.Invoke($args)</S>
              <S>}</S>
              <S></S>
              <S></S>
              <S>function Restore-Prompt { </S>
              <S>    &lt;#</S>
              <S>    .Description</S>
              <S>        Returns the prompt to its previous setting</S>
              <S>        unit -&gt; unit #&gt;</S>
              <S></S>
              <S>    [CmdletBinding(</S>
              <S>        SupportsShouldProcess,</S>
              <S>        ConfirmImpact = 'Medium')] </S>
              <S>    param ()</S>
              <S>    </S>
              <S>    begin {</S>
              <S>        if ($null -eq $PromptCheckpoint) {</S>
              <S>            $e = @{</S>
              <S>                Category    = 'InvalidArgument'</S>
              <S>                ErrorAction = 'Stop'</S>
              <S>                Message     = 'No Prompt Checkpoint found; Cannot restore prompt!' </S>
              <S>            }</S>
              <S></S>
              <S>            Write-Error @e</S>
              <S>        }</S>
              <S>    } </S>
              <S></S>
              <S>    end {</S>
              <S>        if ($PSCmdlet.ShouldProcess('Prompt', 'Restore')) {</S>
              <S>            function global:Prompt {</S>
              <S>                &amp; $PromptCheckpoint</S>
              <S>            }</S>
              <S>        }</S>
              <S>    }</S>
              <S>} </S>
              <S></S>
              <S></S>
              <S>#endregion</S>
              <S></S>
              <S>#region Load Config ------------------------------------------------------------ </S>
              <S>$__configFile = Invoke-Combine $PSScriptRoot Profile.Config.psd1</S>
              <S></S>
              <S>if ($__configFile.Exists) {</S>
              <S>    $__config = Import-PowerShellDataFile $__configFile.FullName</S>
              <S>}</S>
              <S>else {</S>
              <S>    Write-Warning $__messages.Warning.ProfileFileNotFound</S>
              <S>}</S>
              <S></S>
              <S>#endregion</S>
              <S></S>
              <S>#region Configuration Settings ------------------------------------------------- </S>
              <S>$__config.Aliases.GetEnumerator().ForEach{ Set-Alias $_.Key $_.Value }</S>
              <S>$__config.Preferences.GetEnumerator().ForEach{ Set-Variable $_.Key $_.Value }</S>
              <S>$__config.PrivateData.GetEnumerator().ForEach{ $Host.PrivateData.($_.Key) = $_.Value }</S>
              <S>$__setPSReadLineOption = $__config.PSReadLineOptions</S>
              <S></S>
              <S>Set-PSReadLineOption @__setPSReadLineOption</S>
              <S>Set-Variable PSDefaultParameterValues $__config.PSDefaultParameterValues</S>
              <S></S>
              <S># --- Alter Path --------------------------------------------------------------</S>
              <S>$__setPath = { </S>
              <S>    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSPossibleIncorrectComparisonWithNull', '')]</S>
              <S>    param() </S>
              <S></S>
              <S>    begin { </S>
              <S>        # Filter blank lines.</S>
              <S>        $path = ($env:Path -split ';') -ne $null</S>
              <S>    }</S>
              <S></S>
              <S>    process {</S>
              <S>        if ($path -notcontains $_) {</S>
              <S>            $path += $_</S>
              <S>        }</S>
              <S>    }</S>
              <S>    </S>
              <S>    end {</S>
              <S>        $env:Path = $path -join ';'</S>
              <S>    }</S>
              <S>}</S>
              <S>$__config.Path.ForEach($__setPath)</S>
              <S></S>
              <S># --- Startup Modules ---------------------------------------------------------</S>
              <S>$__importModule = {</S>
              <S>   begin { </S>
              <S>        $c = 0</S>
              <S>        $n = 0</S>
              <S>    }</S>
              <S></S>
              <S>    process {</S>
              <S>        $name = $_</S>
              <S>        try {</S>
              <S>            Import-Module $_ -Scope Global -ErrorAction Stop</S>
              <S></S>
              <S>            $n++</S>
              <S>        }</S>
              <S>        catch {</S>
              <S>            Write-Warning ($__messages.Warning.ModuleNotFound -f $name)</S>
              <S></S>
              <S>            $c++</S>
              <S>        }</S>
              <S>    }</S>
              <S></S>
              <S>    end {</S>
              <S>        $module = ('modules', 'module')[($c + $n) -eq 1]</S>
              <S>        $writeHost = @{</S>
              <S>            ForegroundColor = [ConsoleColor]::Black</S>
              <S>            BackgroundColor = [ConsoleColor]::DarkYellow</S>
              <S>            Object = $__messages.Information.ModuleLoadWarning -f $c, ($n + $c), $module</S>
              <S>        }</S>
              <S></S>
              <S>        if ($c -gt 0) {</S>
              <S>            Write-Host @writeHost</S>
              <S>        }</S>
              <S>    } </S>
              <S>}</S>
              <S>$__config.StartupModules.ForEach($__importModule)</S>
              <S>#endregion</S>
              <S></S>
              <S>#region File Loading ----------------------------------------------------------- </S>
              <S></S>
              <S># --- ArgumentCompleters ------------------------------------------------------</S>
              <S>$__acFile = Invoke-Combine $PSScriptRoot .\ArgumentCompleter.ps1</S>
              <S></S>
              <S>if ($__acFile.Exists) {</S>
              <S>    . $__acFile.FullName</S>
              <S>}</S>
              <S>else {</S>
              <S>    Write-Warning $__messages.Warning.ACFileNotFound</S>
              <S>}</S>
              <S></S>
              <S></S>
              <S># --- Prompt -------------------------------------------------------------------</S>
              <S>$__promptFile = Invoke-Combine $PSScriptRoot .\Prompt.ps1 </S>
              <S></S>
              <S>if ($__promptFile.Exists) {</S>
              <S>    . $__promptFile.FullName</S>
              <S>}</S>
              <S>else {</S>
              <S>    Write-Warning $__messages.Warning.PromptFileNotFound</S>
              <S>} </S>
              <S></S>
              <S># --- PSReadLine --------------------------------------------------------------- </S>
              <S>$__psReadLineFile = Invoke-Combine $PSScriptRoot .\PSReadLine.ps1 </S>
              <S></S>
              <S>if ($__psReadLineFile.Exists) {</S>
              <S>    . $__psReadLineFile.FullName</S>
              <S>}</S>
              <S>else {</S>
              <S>    Write-Warning $__messages.Warning.PSReadLineNotFound</S>
              <S>}</S>
              <S></S>
              <S></S>
              <S># --- Functions ----------------------------------------------------------------</S>
              <S>$__moduleFile = Invoke-Combine $PSScriptRoot profile.psm1 </S>
              <S></S>
              <S>if ($__moduleFile.Exists) {</S>
              <S>    </S>
              <S>    $__profile = {</S>
              <S>        $nowFun = Get-ChildItem function:</S>
              <S>        </S>
              <S>        Import-Module $__moduleFile.FullName -ErrorAction Ignore</S>
              <S>        </S>
              <S>        $filter = @{</S>
              <S>            Path = 'function:*'</S>
              <S>            Include = $__config.FunctionsInclude</S>
              <S>            Exclude = $__config.FunctionsExclude</S>
              <S>        } </S>
              <S>        $funs = (Get-ChildItem @filter).Where{ $_ -notin $nowFun }</S>
              <S>    </S>
              <S>        Export-ModuleMember -Function $funs</S>
              <S>    }</S>
              <S>}</S>
              <S>else {</S>
              <S>    Write-Warning $__messages.Warning.ModuleFileNotFound</S>
              <S>} </S>
              <S>#endregion</S>
              <S></S>
              <S>#region Do Stuff --------------------------------------------------------------- </S>
              <S></S>
              <S># Determine Admin </S>
              <S>&amp; {</S>
              <S>    $identity = [System.Security.Principal.WindowsIdentity]::GetCurrent()</S>
              <S>    $admin = [System.Security.Principal.WindowsBuiltInRole]::Administrator </S>
              <S>    $principal = [System.Security.Principal.WindowsPrincipal] $identity</S>
              <S>    $isAdmin = $principal.IsInRole($admin)</S>
              <S></S>
              <S>    if ($isAdmin) {</S>
              <S>        $writeHost = @{</S>
              <S>            ForegroundColor = [System.ConsoleColor]::Red</S>
              <S>            BackgroundColor = $Host.UI.RawUI.ForegroundColor</S>
              <S>            Object = $__messages.Information.IsAdmin </S>
              <S>        }</S>
              <S></S>
              <S>        Write-Host @writeHost</S>
              <S>    } </S>
              <S>}</S>
              <S></S>
              <S>Write-Host $__config.Header -ForegroundColor Red</S>
              <S>#endregion</S>
              <S></S>
              <S>#region Cleanup ----------------------------------------------------------------</S>
              <S>New-Module Profile $__profile | Import-Module</S>
              <S>Remove-Variable __*</S>
              <S>Remove-Item function:\Invoke-Combine </S>
              <S>#endregion</S>
            </LST>
          </Obj>
          <SBK N="CompressCommand"> Get-Content -Path $this.TargetObject.FullName -Verbose </SBK>
        </Props>
      </Obj>
      <Obj RefId="9">
        <TNRef RefId="1" />
        <ToString>DotEntry</ToString>
        <Props>
          <S N="Target">"$PowerShellCurrentUser\profile.psm1"</S>
          <S N="ExpandedTarget">C:\Users\endow\Documents\WindowsPowerShell\profile.psm1</S>
          <S N="TargetObject">C:\Users\endow\Documents\WindowsPowerShell\profile.psm1</S>
          <Obj N="Content" RefId="10">
            <TNRef RefId="2" />
            <LST>
              <S>function Get-Path { $env:Path -split ';' } # () -&gt; string[]</S>
              <S>function Get-Yesterday { (Get-Date).AddDays(-1) } # () -&gt; DateTime</S>
              <S>function Get-Tomorrow { (Get-Date).AddDays(1) } # () -&gt; DateTime</S>
              <S>function Open {</S>
              <S>    &lt;#</S>
              <S>    .Description</S>
              <S>      Opens a directory or a file with its default OS application.</S>
              <S>    .Notes</S>
              <S>      string -&gt; () #&gt;</S>
              <S></S>
              <S>    if ($args.Count -eq 0) {</S>
              <S>        explorer.exe $PWD</S>
              <S>    }</S>
              <S></S>
              <S>    foreach ($arg in $args) {</S>
              <S>        if ($null -ne $arg -and (Test-Path $arg)) {</S>
              <S>            explorer.exe $arg</S>
              <S>        }</S>
              <S>    }</S>
              <S>}</S>
              <S></S>
              <S></S>
              <S>function ConvertTo-TimeZone {</S>
              <S>    &lt;#</S>
              <S>    .Description </S>
              <S>      Converts the local timezone to a specified timezone.</S>
              <S>    .Notes </S>
              <S>      string -&gt; DateTime #&gt;  </S>
              <S></S>
              <S>    [CmdletBinding()] </S>
              <S>    [OutputType([DateTime])]</S>
              <S></S>
              <S>    param( </S>
              <S>        [Parameter(</S>
              <S>            ValueFromPipeline,</S>
              <S>            ValueFromPipelineByPropertyName)]</S>
              <S>        [string] $ToTimeZone</S>
              <S>    )</S>
              <S></S>
              <S>    begin {</S>
              <S>        $x = [datetime]::Now.ToString()</S>
              <S>        $y = [TimeZoneInfo]::Local.Id</S>
              <S>        $f = { </S>
              <S>            Convert-Timezone -Time $x -FromTimeZone $y -ToTimeZone $_</S>
              <S>        }</S>
              <S>    }</S>
              <S></S>
              <S>    process {</S>
              <S>        $ToTimeZone.ForEach($f)</S>
              <S>    }</S>
              <S>}</S>
              <S></S>
              <S></S>
              <S>function ConvertFrom-TimeZone {</S>
              <S>    &lt;#</S>
              <S>    .Description </S>
              <S>      Converts the given timezone to the local time.</S>
              <S>    .Notes</S>
              <S>      string -&gt; DateTime #&gt;</S>
              <S></S>
              <S>    [CmdletBinding()] </S>
              <S>    [OutputType([DateTime])]</S>
              <S></S>
              <S>    param(</S>
              <S>        [Parameter(</S>
              <S>            ValueFromPipeline,</S>
              <S>            ValueFromPipelineByPropertyName)] </S>
              <S>        [string[]] $FromTimeZone</S>
              <S>    ) </S>
              <S></S>
              <S>    begin {</S>
              <S>        $x = [datetime]::Now.ToString()</S>
              <S>        $y = [TimeZoneInfo]::Local.Id</S>
              <S>        $f = { </S>
              <S>            Convert-Timezone -Time $x -FromTimeZone $_ -ToTimeZone $y</S>
              <S>        }</S>
              <S>    }</S>
              <S></S>
              <S>    process {</S>
              <S>        $FromTimeZone.ForEach($f)</S>
              <S>    }</S>
              <S>}</S>
              <S></S>
              <S></S>
              <S>function Convert-TimeZone {</S>
              <S>    &lt;# </S>
              <S>    .Description</S>
              <S>      Convert between two different TimeZones.</S>
              <S>    .Notes</S>
              <S>      DateTime -&gt; string -&gt; string -&gt; DateTime #&gt;</S>
              <S></S>
              <S>    [CmdletBinding()]</S>
              <S>    param(</S>
              <S>        [Parameter(</S>
              <S>            ValueFromPipeline,</S>
              <S>            ValueFromPipelineByPropertyName)]</S>
              <S>        [datetime[]] $Time</S>
              <S>        ,</S>
              <S>        [Parameter(ValueFromPipelineByPropertyName)]</S>
              <S>        [string] $FromTimeZone</S>
              <S>        ,</S>
              <S>        [Parameter(ValueFromPipelineByPropertyName)]</S>
              <S>        [string] $ToTimeZone</S>
              <S>    )</S>
              <S></S>
              <S>    begin { </S>
              <S>        $f = {</S>
              <S>            $x = $_.ToString()</S>
              <S>            $to = [System.TimeZoneInfo]::GetSystemTimeZones().Where{ $_.Id -like $ToTimeZone}</S>
              <S>            $from = [System.TimeZoneInfo]::GetSystemTimeZones().Where{ $_.Id -like $FromTimeZone}</S>
              <S></S>
              <S>            if (!$to) { </S>
              <S>                Write-Error ('TimeZone conversion failed: {0} is not valid.' -f $ToTimeZone) -Category InvalidData -ErrorAction Stop</S>
              <S>            }</S>
              <S></S>
              <S>            if (!$from) {</S>
              <S>                Write-Error ('TimeZone conversion failed: {0} is not valid.' -f $FromTimeZone) -Category InvalidData -ErrorAction Stop</S>
              <S>            }</S>
              <S></S>
              <S>            if ($to.Count -gt 1) {</S>
              <S>                Write-Warning ('{0} returns more than one match; returning the first. Resolve by refining your Id string.' -f $ToTimeZone)</S>
              <S>            }</S>
              <S></S>
              <S>            if ($from.Count -gt 1) {</S>
              <S>                Write-Warning ('{0} returns more than one match; returning the first. Resolve by refining your Id string.' -f $FromTimeZone)</S>
              <S></S>
              <S>            }</S>
              <S></S>
              <S>            [System.TimeZoneInfo]::ConvertTime($x, $from[0], $to[0])</S>
              <S>        }</S>
              <S>    }</S>
              <S></S>
              <S>    process {</S>
              <S>        $Time.ForEach($f)  </S>
              <S>    }</S>
              <S>}</S>
              <S></S>
              <S></S>
              <S>function Switch-Monitor {</S>
              <S>  &lt;#</S>
              <S>  .Synopsis</S>
              <S>      Handler for SwitchMonitor.exe or SwitchMonitorGUI.exe.</S>
              <S>  .Description</S>
              <S>      This cmdlet allows easy use of SwitchMonitor to help loading profiles stored or by opening the GUI to the dock.</S>
              <S>      The use of Dynamic Parameters validates the available profiles. The validated profiles are resolved for the </S>
              <S>      executable so it can be called from anywhere.</S>
              <S>  .Example</S>
              <S>      PS C:\&gt; Switch-Monitor -Load profile</S>
              <S>      This command will run monitorswitcher -load profile.xml </S>
              <S>  .Example</S>
              <S>      PS C:\&gt; Switch-Monitor -ActivateGUI</S>
              <S>      This command will open the GUI in the dock. This is also the default action with no parameters.</S>
              <S>  .Notes</S>
              <S>      Author: endowdly@gmail.com</S>
              <S>  #&gt;</S>
              <S>    </S>
              <S></S>
              <S>    [CmdletBinding(DefaultParameterSetName = "ActivateGUI")]</S>
              <S>    [OutputType([Void])]</S>
              <S></S>
              <S>    param (</S>
              <S>        # Activates the GUI to the dock.</S>
              <S>        [Parameter(ParameterSetName = "ActivateGUI")]</S>
              <S>        [Alias("GUI")]</S>
              <S>        [switch]</S>
              <S>        $ActivateGUI</S>
              <S>        ,</S>
              <S>        [Parameter(ParameterSetName='Load',</S>
              <S>                   Position = 0,</S>
              <S>                   Mandatory,</S>
              <S>                   HelpMessage = 'Enter profile name to load.')]</S>
              <S>        [ArgumentCompleter({</S>
              <S>            param ($commandName, $parameterName, $wordToComplete, $cAst, $fbp)</S>
              <S></S>
              <S>            Convert-Path ${env:USERPROFILE}/AppData/Roaming/MonitorSwitcher/Profiles | </S>
              <S>            Get-ChildItem -File -Filter *.xml |</S>
              <S>            Foreach-Object BaseName | </S>
              <S>            Where-Object { $_ -like "${wordToComplete}*" } })]</S>
              <S>        [ValidateScript({ </S>
              <S>            $profiles = </S>
              <S>                Convert-Path ${env:USERPROFILE}/AppData/Roaming/MonitorSwitcher/Profiles | </S>
              <S>                Get-ChildItem -File -Filter *.xml | </S>
              <S>                Foreach-Object BaseName</S>
              <S>                </S>
              <S></S>
              <S>            if ($_ -notin $profiles) {</S>
              <S>                throw ('Invalid profile name -&gt; {0}' -f $_)</S>
              <S>            }</S>
              <S></S>
              <S>            $true })]</S>
              <S>        [string] $Load </S>
              <S>    )</S>
              <S></S>
              <S>    begin {</S>
              <S>        Convert-Path ${env:USERPROFILE}/AppData/Roaming/MonitorSwitcher/Profiles | </S>
              <S>            Get-ChildItem -File -Filter *.xml |</S>
              <S>            Where-Object BaseName -eq $Load |</S>
              <S>            Set-Variable profilePath</S>
              <S></S>
              <S>        Set-Alias MonitorSwitcher "${env:USERPROFILE}\AppData\Local\MonitorSwitcher\MonitorSwitcher.exe"</S>
              <S>        Set-Alias MonitorSwitcherGUI "${env:USERPROFILE}\AppData\Local\MonitorSwitcher\MonitorSwitcherGUI.exe"</S>
              <S>    }</S>
              <S>    </S>
              <S>    end {</S>
              <S>        switch ($PSCmdlet.ParameterSetName) {</S>
              <S>            ActivateGUI { MonitorSwitcherGUI }</S>
              <S>            Load { MonitorSwitcher -load:$profilePath.Fullname }</S>
              <S>        }</S>
              <S>    }</S>
              <S>}</S>
              <S></S>
              <S># Todo: Add Languages to 'Token' Parameter</S>
              <S>function Write-Section {</S>
              <S>    &lt;#</S>
              <S>    .Synopsis</S>
              <S>      Writes a comment section divider.</S>
              <S>    .Description</S>
              <S>      Writes a comment section divider or header of a specified length.</S>
              <S>      Copies the result to the system clipboard for easy access.</S>
              <S>      </S>
              <S>      Supported Lanaguage Tokens    Example Language</S>
              <S>      --------------------------    ----------------</S>
              <S>      --                            Lua, AppleScript, Ada</S>
              <S>      #                             PowerShell, Python, Ruby</S>
              <S>      //                            C, CSharp, FSharp, Rust</S>
              <S>      %                             Matlab, Fortran, Tex</S>
              <S>      '                             Goddamn Visual Basic</S>
              <S>      "                             Vim</S>
              <S>      ::                            Batch Files</S>
              <S>    .Example</S>
              <S>      PS&gt; Write-Section Test -SectionLength 13</S>
              <S>      Outputs "# --- Test ---" and copies it to the clipboard. </S>
              <S>    .Example</S>
              <S>      PS&gt; "This", "That" | Write-Section -AsHeader</S>
              <S>      Writes This and That as Headers</S>
              <S>    .Inputs</S>
              <S>      System.String</S>
              <S>    .Outputs</S>
              <S>      System.String</S>
              <S>    .Notes</S>
              <S>      Author: endowdly@gmail.com</S>
              <S>      Date: 17 Nov 2018</S>
              <S>    #&gt;</S>
              <S></S>
              <S>    [CmdletBinding(DefaultParameterSetName = 'ByArgument')]</S>
              <S></S>
              <S>    param (</S>
              <S>        # For .Net languages, addes a region fold</S>
              <S>        [switch]</S>
              <S>        $AsRegion,</S>
              <S></S>
              <S>        # The length of the Section. Default: 80</S>
              <S>        # Unit: Characters</S>
              <S>        [Parameter(ValueFromPipelineByPropertyName)]</S>
              <S>        [int] $SectionLength = 80,</S>
              <S></S>
              <S>        # Sets the comment token. Block comments are not allowed. Default: "#"</S>
              <S>        [Parameter(ValueFromPipelineByPropertyName)]</S>
              <S>        [ValidateSet(</S>
              <S>            '--',  # Lua, AppleScript, VHDL, Haskell, Ada</S>
              <S>            '#',   # "Interpreted"</S>
              <S>            '//',  # "Compiled"</S>
              <S>            '%',   # "Old or Sciency"</S>
              <S>            "'",   # Damn Visual Basic</S>
              <S>            '"',   # Vim</S>
              <S>            '::'   # Batch files </S>
              <S>            )]</S>
              <S>        [string] $Token = '#',   # assume PowerShell</S>
              <S></S>
              <S>        # Does not return the result. Output is sent to the clipboard quietly.</S>
              <S>        [Parameter()]</S>
              <S>        [Alias(</S>
              <S>            'Shh',</S>
              <S>            'z')]</S>
              <S>        [switch] $Silent,</S>
              <S></S>
              <S>        # Does not send output to the clipboard.</S>
              <S>        [Parameter()]</S>
              <S>        [switch]</S>
              <S>        $NoCopy,</S>
              <S></S>
              <S>        # Creates a header banner with the string instead of a simple section.</S>
              <S>        [Parameter(ValueFromPipelineByPropertyName)]</S>
              <S>        [Alias('Banner')]</S>
              <S>        [switch] $AsHeader,</S>
              <S></S>
              <S>        # The String to add into the Section.</S>
              <S>        [Parameter(</S>
              <S>            ParameterSetName = 'ByArgument',</S>
              <S>            ValueFromRemainingArguments,</S>
              <S>            Position=0)]</S>
              <S>        [Alias(</S>
              <S>            'Message',</S>
              <S>            'String')]</S>
              <S>        [System.String] $Header,</S>
              <S></S>
              <S>        # The Strings to add into the Section.</S>
              <S>        [Parameter(</S>
              <S>            ParameterSetName='ByPipe',</S>
              <S>            ValueFromPipeline)]</S>
              <S>        [System.String[]] $InputObject</S>
              <S>    )</S>
              <S>    </S>
              <S>    begin {</S>
              <S>        Set-Clipboard   # Clear the clipboard before we process</S>
              <S>        $Head = </S>
              <S>            if ($AsRegion) {</S>
              <S>                "${Token}region"</S>
              <S>            }        </S>
              <S>            else {</S>
              <S>                "$Token ---"</S>
              <S>            }</S>
              <S></S>
              <S></S>
              <S>        # Adds a space afte the head string</S>
              <S>        # string -&gt; string</S>
              <S>        filter PrependHead {</S>
              <S>            $Head, $_ -join " "</S>
              <S>        }</S>
              <S></S>
              <S></S>
              <S>        # Adds the remaining banner symbols after the section</S>
              <S>        # string -&gt; string</S>
              <S>        filter AppendTail {</S>
              <S></S>
              <S>            Write-Debug "Head &lt;- $_"</S>
              <S>            </S>
              <S>            $HeadLength = $_.ToString().Length - 1</S>
              <S></S>
              <S>            if ($SectionLength -lt $HeadLength) {</S>
              <S>                Write-Warning "SectionLength of $SectionLength is shorter than Head Length of $HeadLength! Resizing."</S>
              <S></S>
              <S>                $SectionLength = $HeadLength</S>
              <S>            }</S>
              <S>            </S>
              <S>            $_, ("-" * ($SectionLength - $HeadLength - 2)) -join " " </S>
              <S></S>
              <S>            if ($AsRegion) {</S>
              <S>                "`n#endregion"</S>
              <S>            }</S>
              <S>        }</S>
              <S></S>
              <S></S>
              <S>        # Transforms a banner to a header</S>
              <S>        # string -&gt; string</S>
              <S>        filter IfAsBanner {</S>
              <S></S>
              <S>            Write-Debug "Head &amp; Tail &lt;- $_"</S>
              <S></S>
              <S>            if ($AsHeader) {</S>
              <S>                Write-Verbose "Writing as Banner"</S>
              <S></S>
              <S>                # Completely discard the incoming pipeline and start off new. A little wasted, but this is not an</S>
              <S>                #  expensive operation.</S>
              <S>                $Line = $Token, ("-" * ($SectionLength - 2)) -join " " </S>
              <S>                $Title = $Token, $section -join " "</S>
              <S></S>
              <S>                $Line, $Title, $Line -join "`n"</S>
              <S>            }</S>
              <S>            else { </S>
              <S>                $_</S>
              <S>            } </S>
              <S>        }</S>
              <S></S>
              <S></S>
              <S>        # Determines how the output is sent -- to the clipboard or not</S>
              <S>        # string -&gt; string option</S>
              <S>        filter Xeq {</S>
              <S>            if ($Silent) {</S>
              <S>                Write-Verbose "Silent -- Result in Clipboard"</S>
              <S>                Set-Clipboard -Append -Value $_</S>
              <S>            }</S>
              <S>            elseif ($NoCopy) {</S>
              <S>                Write-Verbose "NoCopy -- Result not copied to Clipboard"</S>
              <S>                $_</S>
              <S>            } </S>
              <S>            else {</S>
              <S>                Set-Clipboard -Append -Value $_</S>
              <S>                $_</S>
              <S>            }</S>
              <S>        }</S>
              <S>    }</S>
              <S>    </S>
              <S>    process {</S>
              <S>        $section = </S>
              <S>            switch ($PSCmdlet.ParameterSetName) {</S>
              <S>                ByArgument { $Header }</S>
              <S>                ByPipe { $InputObject }</S>
              <S>            }</S>
              <S></S>
              <S>        Write-Debug "Consuming by $( $PSCmdlet.ParameterSetName )"</S>
              <S></S>
              <S>        $section |</S>
              <S>            PrependHead | </S>
              <S>            AppendTail |</S>
              <S>            IfAsBanner | </S>
              <S>            Xeq</S>
              <S>    } </S>
              <S>}</S>
            </LST>
          </Obj>
          <SBK N="CompressCommand"> Get-Content -Path $this.TargetObject.FullName -Verbose </SBK>
        </Props>
      </Obj>
      <Obj RefId="11">
        <TNRef RefId="1" />
        <ToString>DotEntry</ToString>
        <Props>
          <S N="Target">"$PowerShellCurrentUser\profile.config.psd1"</S>
          <S N="ExpandedTarget">C:\Users\endow\Documents\WindowsPowerShell\profile.config.psd1</S>
          <S N="TargetObject">C:\Users\endow\Documents\WindowsPowerShell\profile.config.psd1</S>
          <Obj N="Content" RefId="12">
            <TNRef RefId="2" />
            <LST>
              <S>@{</S>
              <S>    FunctionsInclude         = '*'</S>
              <S>    FunctionsExclude         = ''</S>
              <S></S>
              <S>    Aliases = @{</S>
              <S>        Now   = 'Get-Date'</S>
              <S>        New   = 'New-Object'</S>
              <S>        Today = 'Get-Date'</S>
              <S>        Unset = 'Remove-Variable'</S>
              <S>        Null  = 'Out-Null'</S>
              <S>        Time  = 'New-TimeSpan'</S>
              <S>        ms    = 'Switch-Monitor'</S>
              <S>        get   = 'Get-Variable'</S>
              <S>    }</S>
              <S>    </S>
              <S>    Preferences              = @{</S>
              <S>        ErrorView                     = 'NormalView'</S>
              <S>        DebugPreference               = 'SilentlyContinue'</S>
              <S>        ErrorActionPreference         = 'Continue'</S>
              <S>        ProgressPreference            = 'Continue'</S>
              <S>        VerbosePreference             = 'SilentlyContinue'</S>
              <S>        WarningPreference             = 'Continue'</S>
              <S>        InformationPreference         = 'SilentlyContinue'</S>
              <S>        PSModuleAutoLoadingPreference = 'ModuleQualified'</S>
              <S>    }</S>
              <S></S>
              <S>    PrivateData = @{</S>
              <S>        ErrorForegroundColor    = 'Red'</S>
              <S>        ErrorBackgroundColor    = 'Black'</S>
              <S>        WarningForegroundColor  = 'DarkYellow'</S>
              <S>        WarningBackgroundColor  = 'Black'</S>
              <S>        DebugForegroundColor    = 'Magenta'</S>
              <S>        DebugBackgroundColor    = 'Black'</S>
              <S>        VerboseForegroundColor  = 'DarkCyan'</S>
              <S>        VerboseBackgroundColor  = 'Black'</S>
              <S>        ProgressForegroundColor = 'Black' </S>
              <S>        ProgressBackgroundColor = 'Gray'</S>
              <S>    }</S>
              <S></S>
              <S>    PSDefaultParameterValues = @{</S>
              <S>        '*-File:Encoding' = 'UTF8'</S>
              <S>        '*-Content:Encoding' = 'UTF8' </S>
              <S>        '*-Csv:Encoding' = 'UTF8'</S>
              <S>    }</S>
              <S></S>
              <S>    Path                     = @() </S>
              <S></S>
              <S>    StartupModules           = @(</S>
              <S>        'DirColors'</S>
              <S>        'GoPS'</S>
              <S>    )</S>
              <S></S>
              <S>    PSReadlineOptions = @{</S>
              <S>        EditMode                      = 'vi'</S>
              <S>        ViModeIndicator               = 'Prompt'</S>
              <S>        DingDuration                  = 100</S>
              <S>        DingTone                      = 440</S>
              <S>        HistorySearchCursorMovesToEnd = $true </S>
              <S>        ShowToolTips                  = $true</S>
              <S>        Colors                        = @{</S>
              <S>            Selection = 'Magenta'</S>
              <S>        }</S>
              <S>    }</S>
              <S></S>
              <S>    Header      = @'</S>
              <S>                  .                                                      .</S>
              <S>                .n                   .                 .                  n.</S>
              <S>          .   .dP                  dP                   9b                 9b.    .</S>
              <S>         4    qXb         .       dX                     Xb       .        dXp     t</S>
              <S>        dX.    9Xb      .dXb    __                         __    dXb.     dXP     .Xb</S>
              <S>        9XXb._       _.dXXXXb dXXXXbo.                 .odXXXXb dXXXXb._       _.dXXP</S>
              <S>         9XXXXXXXXXXXXXXXXXXXVXXXXXXXXOo.           .oOXXXXXXXXVXXXXXXXXXXXXXXXXXXXP</S>
              <S>          `9XXXXXXXXXXXXXXXXXXXXX'~   ~`OOO8b   d8OOO'~   ~`XXXXXXXXXXXXXXXXXXXXXP'</S>
              <S>            `9XXXXXXXXXXXP' `9XX'          `98v8P'          `XXP' `9XXXXXXXXXXXP'</S>
              <S>                ~~~~~~~       9X.          .db|db.          .XP       ~~~~~~~</S>
              <S>                                )b.  .dbo.dP'`v'`9b.odb.  .dX(</S>
              <S>                              ,dXXXXXXXXXXXb     dXXXXXXXXXXXb.</S>
              <S>                             dXXXXXXXXXXXP'   .   `9XXXXXXXXXXXb</S>
              <S>                            dXXXXXXXXXXXXb   d|b   dXXXXXXXXXXXXb</S>
              <S>                            9XXb'   `XXXXXb.dX|Xb.dXXXXX'   `dXXP</S>
              <S>                             `'      9XXXXXX(   )XXXXXXP      `'</S>
              <S>                                      XXXX X.`v'.X XXXX</S>
              <S>                                      XP^X'`b   d'`X^XX</S>
              <S>                                      X. 9  `   '  P )X</S>
              <S>                                      `b  `       '  d'</S>
              <S>                                       `             '</S>
              <S>        </S>
              <S>                              _  ____  __/ __ , , , __/ // __  ,</S>
              <S>                             &lt;/_/ / &lt;_(_/_(_)(_(_/_(_/_&lt;/_/ (_/_</S>
              <S>                                                             /  </S>
              <S>        </S>
              <S>        </S>
              <S>'@</S>
              <S></S>
              <S>}</S>
            </LST>
          </Obj>
          <SBK N="CompressCommand"> Get-Content -Path $this.TargetObject.FullName -Verbose </SBK>
        </Props>
      </Obj>
      <Obj RefId="13">
        <TNRef RefId="1" />
        <ToString>DotEntry</ToString>
        <Props>
          <S N="Target">"$PowerShellCurrentUser\psreadline.ps1"</S>
          <S N="ExpandedTarget">C:\Users\endow\Documents\WindowsPowerShell\psreadline.ps1</S>
          <S N="TargetObject">C:\Users\endow\Documents\WindowsPowerShell\psreadline.ps1</S>
          <Obj N="Content" RefId="14">
            <TNRef RefId="2" />
            <LST>
              <S>using namespace System.Management.Automation</S>
              <S>using namespace System.Management.Automation.Language</S>
              <S></S>
              <S>Set-PSReadLineKeyHandler -Key DownArrow -Function HistorySearchForward</S>
              <S>Set-PSReadLineKeyHandler -Key Tab -Function MenuComplete</S>
              <S>Set-PSReadLineKeyHandler -Key '*,y' -BriefDescription 'global yank' -ViMode Command -Scriptblock {</S>
              <S>    param($key, $arg)</S>
              <S></S>
              <S>    $line = $null</S>
              <S>    $cursor = $null </S>
              <S></S>
              <S>    [Microsoft.Powershell.PSConsoleReadLine]::GetBufferState([ref] $line, [ref] $cursor) </S>
              <S></S>
              <S>    Set-Clipboard $line</S>
              <S>} </S>
              <S>Set-PSReadLineKeyHandler -Key Alt+w -Function SelectShellForwardWord</S>
              <S>Set-PSReadLineKeyHandler -Key Alt+b -Function SelectShellBackwardWord</S>
              <S>Set-PSReadLineKeyHandler -Key Ctrl+b -BriefDescription 'Build current dotnet project' -Scriptblock {</S>
              <S>    [Microsoft.PowerShell.PSConsoleReadLine]::RevertLine()</S>
              <S>    [Microsoft.PowerShell.PSConsoleReadLine]::Insert('dotnet build')</S>
              <S>    [Microsoft.PowerShell.PSConsoleReadLine]::AcceptLine()</S>
              <S>} </S>
              <S># This was ripped fromt he PSReadLine Sample profile and modified</S>
              <S>Set-PSReadLineKeyHandler -Key '"',"'" ` -BriefDescription SmartInsertQuote -ScriptBlock {</S>
              <S>    param($key, $arg)</S>
              <S></S>
              <S>    $quote = $key.KeyChar </S>
              <S>    $selectionStart = $null</S>
              <S>    $selectionLength = $null</S>
              <S>    $line = $null</S>
              <S>    $cursor = $null</S>
              <S></S>
              <S>    [Microsoft.PowerShell.PSConsoleReadLine]::GetBufferState([ref] $line, [ref] $cursor)</S>
              <S>    [Microsoft.PowerShell.PSConsoleReadLine]::GetSelectionState([ref] $selectionStart, [ref] $selectionLength)</S>
              <S></S>
              <S>    # If text is selected, just quote it and return</S>
              <S>    if ($selectionStart -ne -1)</S>
              <S>    {</S>
              <S>        [Microsoft.PowerShell.PSConsoleReadLine]::Replace(</S>
              <S>            $selectionStart,</S>
              <S>            $selectionLength,</S>
              <S>            $quote + $line.SubString($selectionStart, $selectionLength) + $quote)</S>
              <S>        [Microsoft.PowerShell.PSConsoleReadLine]::SetCursorPosition($selectionStart + $selectionLength + 2)</S>
              <S></S>
              <S>        return</S>
              <S>    }</S>
              <S></S>
              <S>    $ast = $null</S>
              <S>    $tokens = $null</S>
              <S>    $parseErrors = $null</S>
              <S>    [Microsoft.PowerShell.PSConsoleReadLine]::GetBufferState(</S>
              <S>        [ref] $ast,</S>
              <S>        [ref] $tokens,</S>
              <S>        [ref] $parseErrors,</S>
              <S>        [ref] $null)</S>
              <S></S>
              <S>    function FindToken ($ls, $x) { </S>
              <S></S>
              <S>        foreach ($token in $ls) {</S>
              <S></S>
              <S>            if ($x -lt $token.Extent.StartOffset) { continue }</S>
              <S></S>
              <S>            if ($x -lt $token.Extent.EndOffset) {</S>
              <S>                $result = $token</S>
              <S>                $token = $token -as [StringExpandableToken]</S>
              <S></S>
              <S>                if ($token) {</S>
              <S>                    $nested = FindToken $token.NestedTokens $x</S>
              <S></S>
              <S>                    if ($nested) {</S>
              <S>                        $result = $nested</S>
              <S>                    }</S>
              <S>                }</S>
              <S></S>
              <S>                return $result</S>
              <S>            }</S>
              <S>        }</S>
              <S></S>
              <S>        return</S>
              <S>    }</S>
              <S></S>
              <S>    $token = FindToken $tokens $cursor</S>
              <S></S>
              <S>    # If we're on or inside a **quoted** string token (so not generic), we need to be smarter</S>
              <S>    if ($token -is [StringToken] -and $token.Kind -ne [TokenKind]::Generic) {</S>
              <S></S>
              <S>        # If we're at the start of the string, assume we're inserting a new string</S>
              <S>        if ($token.Extent.StartOffset -eq $cursor) {</S>
              <S>            [Microsoft.PowerShell.PSConsoleReadLine]::Insert("$quote$quote ")</S>
              <S>            [Microsoft.PowerShell.PSConsoleReadLine]::SetCursorPosition($cursor + 1)</S>
              <S></S>
              <S>            return</S>
              <S>        }</S>
              <S></S>
              <S>        # If we're at the end of the string, move over the closing quote if present</S>
              <S>        if ($token.Extent.EndOffset -eq ($cursor + 1) -and $line[$cursor] -eq $quote) {</S>
              <S>            [Microsoft.PowerShell.PSConsoleReadLine]::SetCursorPosition($cursor + 1)</S>
              <S></S>
              <S>            return</S>
              <S>        }</S>
              <S>    }</S>
              <S></S>
              <S>    if ($null -eq $token -or</S>
              <S>        $token.Kind -eq [TokenKind]::RParen -or</S>
              <S>        $token.Kind -eq [TokenKind]::RCurly -or</S>
              <S>        $token.Kind -eq [TokenKind]::RBracket) {</S>
              <S></S>
              <S>        if ($line[0..$cursor].Where{$_ -eq $quote}.Count % 2 -eq 1) {</S>
              <S>            # Odd number of quotes before the cursor, insert a single quote</S>
              <S></S>
              <S>            [Microsoft.PowerShell.PSConsoleReadLine]::Insert($quote)</S>
              <S>        }</S>
              <S>        else {</S>
              <S>            # Insert matching quotes, move cursor to be in between the quotes</S>
              <S></S>
              <S>            [Microsoft.PowerShell.PSConsoleReadLine]::Insert("$quote$quote")</S>
              <S>            [Microsoft.PowerShell.PSConsoleReadLine]::SetCursorPosition($cursor + 1)</S>
              <S>        }</S>
              <S></S>
              <S>        return</S>
              <S>    }</S>
              <S></S>
              <S>    # If cursor is at the start of a token, enclose it in quotes</S>
              <S>    if ($token.Extent.StartOffset -eq $cursor) {</S>
              <S>        if ($token.Kind -eq [TokenKind]::Generic -or</S>
              <S>            $token.Kind -eq [TokenKind]::Identifier -or </S>
              <S>            $token.Kind -eq [TokenKind]::Variable -or</S>
              <S>            $token.TokenFlags.hasFlag([TokenFlags]::Keyword)) {</S>
              <S></S>
              <S>            $end = $token.Extent.EndOffset</S>
              <S>            $len = $end - $cursor</S>
              <S></S>
              <S>            [Microsoft.PowerShell.PSConsoleReadLine]::Replace(</S>
              <S>                $cursor,</S>
              <S>                $len,</S>
              <S>                $quote + $line.SubString($cursor, $len) + $quote)</S>
              <S>            [Microsoft.PowerShell.PSConsoleReadLine]::SetCursorPosition($end + 2)</S>
              <S></S>
              <S>            return</S>
              <S>        }</S>
              <S>    }</S>
              <S></S>
              <S>    # We failed to be smart, so just insert a single quote</S>
              <S>    [Microsoft.PowerShell.PSConsoleReadLine]::Insert($quote)</S>
              <S>}</S>
              <S></S>
              <S>Set-PSReadLineKeyHandler -Key '(','{','[' -BriefDescription InsertPairedBraces -ScriptBlock {</S>
              <S>    param($key, $arg)</S>
              <S></S>
              <S>    $closeChar =</S>
              <S>        switch ($key.KeyChar) {  # The breaks are not necessary</S>
              <S>            '(' { [char] ')' }</S>
              <S>            '{' { [char] '}' }</S>
              <S>            '[' { [char] ']' }</S>
              <S>            default { break }</S>
              <S>        }</S>
              <S></S>
              <S>    $selectionStart = $null</S>
              <S>    $selectionLength = $null </S>
              <S>    $line = $null</S>
              <S>    $cursor = $null</S>
              <S></S>
              <S>    [Microsoft.PowerShell.PSConsoleReadLine]::GetSelectionState([ref] $selectionStart, [ref] $selectionLength)</S>
              <S>    [Microsoft.PowerShell.PSConsoleReadLine]::GetBufferState([ref] $line, [ref] $cursor)</S>
              <S>    </S>
              <S>    if ($selectionStart -ne -1) {</S>
              <S>        # Text is selected, wrap it in brackets</S>
              <S>        [Microsoft.PowerShell.PSConsoleReadLine]::Replace(</S>
              <S>            $selectionStart,</S>
              <S>            $selectionLength,</S>
              <S>            $key.KeyChar + $line.SubString($selectionStart, $selectionLength) + $closeChar)</S>
              <S>        [Microsoft.PowerShell.PSConsoleReadLine]::SetCursorPosition($selectionStart + $selectionLength + 2)</S>
              <S>    }</S>
              <S>    else {</S>
              <S>        # No text is selected, insert a pair</S>
              <S>        [Microsoft.PowerShell.PSConsoleReadLine]::Insert("$($key.KeyChar)$closeChar")</S>
              <S>        [Microsoft.PowerShell.PSConsoleReadLine]::SetCursorPosition($cursor + 1)</S>
              <S>    }</S>
              <S>}</S>
              <S></S>
              <S>Set-PSReadLineKeyHandler -Key ')',']','}' -BriefDescription SmartCloseBraces -ScriptBlock {</S>
              <S>    param($key, $arg)</S>
              <S></S>
              <S>    $line = $null</S>
              <S>    $cursor = $null</S>
              <S>    [Microsoft.PowerShell.PSConsoleReadLine]::GetBufferState([ref] $line, [ref] $cursor)</S>
              <S></S>
              <S>    if ($line[$cursor] -eq $key.KeyChar) {</S>
              <S>        [Microsoft.PowerShell.PSConsoleReadLine]::SetCursorPosition($cursor + 1)</S>
              <S>    }</S>
              <S>    else {</S>
              <S>        [Microsoft.PowerShell.PSConsoleReadLine]::Insert("$($key.KeyChar)")</S>
              <S>    }</S>
              <S>}</S>
              <S></S>
              <S>Set-PSReadLineKeyHandler -Key Backspace -BriefDescription SmartBackspace -ScriptBlock {</S>
              <S>    param($key, $arg)</S>
              <S></S>
              <S>    $line = $null</S>
              <S>    $cursor = $null</S>
              <S>    [Microsoft.PowerShell.PSConsoleReadLine]::GetBufferState([ref] $line, [ref] $cursor)</S>
              <S></S>
              <S>    if ($cursor -gt 0) {</S>
              <S>        $toMatch = $null</S>
              <S></S>
              <S>        if ($cursor -lt $line.Length) {</S>
              <S></S>
              <S>            $tomatch = </S>
              <S>                switch ($line[$cursor]) {</S>
              <S>                    '"' { '"' }</S>
              <S>                    "'" { "'" }</S>
              <S>                    ')' { '(' }</S>
              <S>                    ']' { '[' }</S>
              <S>                    '}' { '{' }</S>
              <S>                    default { $null }</S>
              <S>                }</S>
              <S>        }</S>
              <S></S>
              <S>        if ($toMatch -ne $null -and $line[$cursor-1] -eq $toMatch) {</S>
              <S>            [Microsoft.PowerShell.PSConsoleReadLine]::Delete($cursor - 1, 2)</S>
              <S>        }</S>
              <S>        else {</S>
              <S>            [Microsoft.PowerShell.PSConsoleReadLine]::BackwardDeleteChar($key, $arg)</S>
              <S>        }</S>
              <S>    }</S>
              <S>}</S>
            </LST>
          </Obj>
          <SBK N="CompressCommand"> Get-Content -Path $this.TargetObject.FullName -Verbose </SBK>
        </Props>
      </Obj>
      <Obj RefId="15">
        <TNRef RefId="1" />
        <ToString>DotEntry</ToString>
        <Props>
          <S N="Target">"$PowerShellCurrentUser\prompt.ps1"</S>
          <S N="ExpandedTarget">C:\Users\endow\Documents\WindowsPowerShell\prompt.ps1</S>
          <S N="TargetObject">C:\Users\endow\Documents\WindowsPowerShell\prompt.ps1</S>
          <Obj N="Content" RefId="16">
            <TNRef RefId="2" />
            <LST>
              <S>function global:Prompt {</S>
              <S>    $dir = [System.IO.DirectoryInfo] $pwd.Path</S>
              <S>    $baseName = $dir.BaseName</S>
              <S>    Write-Host " $baseName $('-')$('&gt;' * ($NestedPromptLevel + 1)) " -ForegroundColor DarkBlue -NoNewline</S>
              <S>    return " "</S>
              <S>}</S>
            </LST>
          </Obj>
          <SBK N="CompressCommand"> Get-Content -Path $this.TargetObject.FullName -Verbose </SBK>
        </Props>
      </Obj>
      <Obj RefId="17">
        <TNRef RefId="1" />
        <ToString>DotEntry</ToString>
        <Props>
          <S N="Target">"$PowerShellCurrentUser\argumentcompleter.ps1"</S>
          <S N="ExpandedTarget">C:\Users\endow\Documents\WindowsPowerShell\argumentcompleter.ps1</S>
          <S N="TargetObject">C:\Users\endow\Documents\WindowsPowerShell\argumentcompleter.ps1</S>
          <Obj N="Content" RefId="18">
            <TNRef RefId="2" />
            <LST>
              <S></S>
              <S>Register-ArgumentCompleter -Native -CommandName dotnet -ScriptBlock { </S>
              <S>    param ($commandName, $wordToComplete, $cursorPosition)</S>
              <S></S>
              <S>    dotnet complete --position $cursorPosition "$wordToComplete" |</S>
              <S>        ForEach-Object {</S>
              <S>            New-Object System.Management.Automation.CompletionResult @(</S>
              <S>                $_</S>
              <S>                $_</S>
              <S>                'ParameterValue'</S>
              <S>                $_</S>
              <S>            )</S>
              <S>        } </S>
              <S>} </S>
              <S></S>
              <S>Register-ArgumentCompleter -CommandName Get-Verb -ParameterName Verb -ScriptBlock {</S>
              <S>    param ($commandName, $parameterName, $wordToComplete, $commandAst, $fakeBoundParameter)</S>
              <S></S>
              <S>    Get-Verb |</S>
              <S>        Where-Object Verb -like "$wordToComplete*" |</S>
              <S>        ForEach-Object {</S>
              <S>            New-Object System.Management.Automation.CompletionResult @(</S>
              <S>                $_.Verb</S>
              <S>                $_.Verb</S>
              <S>                'ParameterValue'</S>
              <S>                'Group' + $_.Group </S>
              <S>            )</S>
              <S>        }</S>
              <S>}</S>
              <S></S>
              <S>&lt;# Completer for Scoop:</S>
              <S>  Let's talk about how ASININE this code base is.</S>
              <S>  Too good to use PowerShell's BUILT IN PARAMETERS AND ARGUMENT COMPLETION AND COMMENT BASED HELP.</S>
              <S>  Too good to use objects.</S>
              <S>  There is no way to use PowerShell's internal AST to find commands.</S>
              <S>  I hope if scoop changes, the libexec directory stays the same.</S>
              <S>  Because I literally have to treat a _script_ like a native executable due to this tom-foolery. #&gt; </S>
              <S>Register-ArgumentCompleter -CommandName Scoop -ScriptBlock {</S>
              <S>    param ($wordToComplete, $commandAst)</S>
              <S></S>
              <S>    $cmd = $commandAst.ToString()</S>
              <S></S>
              <S>    if (-not $wordToComplete -and $cmd -ne "scoop") { return } </S>
              <S>    if ($wordToComplete -notmatch '^\w?[\w\-]*$') { return } </S>
              <S>    if ($cmd -notmatch "^scoop\s*$wordToComplete$") { return } </S>
              <S></S>
              <S>    $wild = "$wordToComplete*" </S>
              <S></S>
              <S>    # scoop help doesn't return text. Weird. Don't believe me? Run `scoop help | % { $_.GetType() }</S>
              <S></S>
              <S>    # Use Scoop against itself and hopefully core and command don't change!</S>
              <S>    $ScoopCommands = { </S>
              <S>        $scoopPrefix = scoop prefix scoop</S>
              <S>        $libPath = Join-Path $scoopPrefix lib</S>
              <S>        $core = Join-Path $libPath core.ps1</S>
              <S>        $command = Join-Path $libPath commands.ps1</S>
              <S></S>
              <S>        . $core</S>
              <S>        . $command</S>
              <S></S>
              <S>        return commands</S>
              <S>    }</S>
              <S></S>
              <S>    &amp; $ScoopCommands | </S>
              <S>        Where-Object { $_ -like $wild } | </S>
              <S>        Sort-Object | </S>
              <S>        ForEach-Object { New-Object System.Management.Automation.CompletionResult $_ } </S>
              <S>}</S>
            </LST>
          </Obj>
          <SBK N="CompressCommand"> Get-Content -Path $this.TargetObject.FullName -Verbose </SBK>
        </Props>
      </Obj>
      <Obj RefId="19">
        <TNRef RefId="1" />
        <ToString>DotEntry</ToString>
        <Props>
          <S N="Target">"$env:LOCALAPPDATA\Microsoft\Windows Terminal\settings.json"</S>
          <S N="ExpandedTarget">C:\Users\endow\AppData\Local\Microsoft\Windows Terminal\settings.json</S>
          <S N="TargetObject">C:\Users\endow\AppData\Local\Microsoft\Windows Terminal\settings.json</S>
          <Obj N="Content" RefId="20">
            <TNRef RefId="2" />
            <LST>
              <S>// To view the default settings, hold "alt" while clicking on the "Settings" button.</S>
              <S>// For documentation on these settings, see: https://aka.ms/terminal-documentation</S>
              <S>{</S>
              <S>    "$schema": "https://aka.ms/terminal-profiles-schema",</S>
              <S>    "defaultProfile": "{c0d191a7-334d-4042-b9c8-c4d235b75b34}", </S>
              <S>    "profiles": {</S>
              <S>        "defaults": {</S>
              <S>            "fontFace": "Fira Code",</S>
              <S>            "fontSize": 10,</S>
              <S>            "snapOnInput": true,</S>
              <S>            "startingDirectory": "C:\\Users\\endowdly"</S>
              <S>        },</S>
              <S>        "list": [</S>
              <S>            {</S>
              <S>                // Make changes here to the powershell.exe profile</S>
              <S>                "name": "Red PowerShell",</S>
              <S>                "guid": "{c0d191a7-334d-4042-b9c8-c4d235b75b34}",</S>
              <S>                "commandline": "powershell.exe -nologo",</S>
              <S>                "hidden": false,</S>
              <S>                "fontFace": "consolas",</S>
              <S>                "fontSize": 11,</S>
              <S>                "cursorColor": "#700000",</S>
              <S>                "cursorShape": "filledBox",</S>
              <S>                "colorScheme": "Tomorrow Night Burns",</S>
              <S>                "experimental.retroTerminalEffect": true</S>
              <S>            },</S>
              <S>            {</S>
              <S>                // Make changes here to the powershell.exe profile</S>
              <S>                "guid": "{61c54bbd-c2c6-5271-96e7-009a87ff44bf}",</S>
              <S>                "name": "PowerShell",</S>
              <S>                "commandline": "powershell.exe -nologo",</S>
              <S>                "hidden": false,</S>
              <S>                "cursorColor": "#000070",</S>
              <S>                "cursorShape": "filledBox",</S>
              <S>                "colorScheme": "ayu",</S>
              <S>                "fontFace": "Roboto Mono for Powerline"</S>
              <S>            },</S>
              <S>            {</S>
              <S>                // Make changes here to the powershell.exe profile</S>
              <S>                "guid": "{726e1cd9-7f7d-420c-8d9f-2bce1f1dad39}",</S>
              <S>                "name": "Pwsh",</S>
              <S>                "commandline": "pwsh -nologo",</S>
              <S>                "hidden": false,</S>
              <S>                "cursorColor": "#000070",</S>
              <S>                "cursorShape": "filledBox",</S>
              <S>                "colorScheme": "Red Planet",</S>
              <S>                "fontFace": "Roboto Mono for Powerline"</S>
              <S>            },</S>
              <S>            {</S>
              <S>                // Make changes here to the cmd.exe profile</S>
              <S>                "guid": "{0caa0dad-35be-5f56-a8ff-afceeeaa6101}",</S>
              <S>                "name": "Cmd",</S>
              <S>                "commandline": "cmd.exe",</S>
              <S>                "cursorColor": "#007000",</S>
              <S>                "cursorShape": "vintage",</S>
              <S>                "experimental.retroTerminalEffect": true,</S>
              <S>                "hidden": false</S>
              <S>            },</S>
              <S>            {</S>
              <S>                "guid": "{b453ae62-4e3d-5e58-b989-0a998ec441b8}",</S>
              <S>                "hidden": true,</S>
              <S>                "name": "Azure Cloud Shell",</S>
              <S>                "source": "Windows.Terminal.Azure"</S>
              <S>            },</S>
              <S>            {</S>
              <S>                "hidden": false,</S>
              <S>                "name": "Dev Prompt",</S>
              <S>                "commandline": "cmd.exe /k \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\Common7\\Tools\\VsDevCmd.bat\" -arch=x64",</S>
              <S>                "startingDirectory": "\\"</S>
              <S>            },</S>
              <S>            {</S>
              <S>                "guid": "{574e775e-4f2a-5b96-ac1e-a2962a402336}",</S>
              <S>                "hidden": false,</S>
              <S>                "name": "PowerShell Core",</S>
              <S>                "source": "Windows.Terminal.PowershellCore",</S>
              <S>                "cursorColor": "#000070",</S>
              <S>                "cursorShape": "filledBox",</S>
              <S>                "colorScheme": "ayu"</S>
              <S>            },</S>
              <S>            {</S>
              <S>                // Make changes here to the powershell.exe profile</S>
              <S>                "guid": "{05f6c213-72aa-4049-b2f7-a02741dc0de6}",</S>
              <S>                "name": "NTop",</S>
              <S>                // "commandline": "powershell.exe -nologo -command ntop",</S>
              <S>                "commandline": "ntop",</S>
              <S>                "hidden": false,</S>
              <S>                "cursorColor": "#000070",</S>
              <S>                "cursorShape": "filledBox",</S>
              <S>                "colorScheme": "ayu",</S>
              <S>                "fontFace": "Roboto Mono for Powerline"</S>
              <S>            } </S>
              <S>        ]</S>
              <S>    },</S>
              <S>    // Add custom color schemes to this array</S>
              <S>    "schemes": [</S>
              <S>        {</S>
              <S>            "name": "ayu",</S>
              <S>            "black": "#000000",</S>
              <S>            "red": "#ff3333",</S>
              <S>            "green": "#b8cc52",</S>
              <S>            "yellow": "#e7c547",</S>
              <S>            "blue": "#36a3d9",</S>
              <S>            "purple": "#f07178",</S>
              <S>            "cyan": "#95e6cb",</S>
              <S>            "white": "#ffffff",</S>
              <S>            "brightBlack": "#323232",</S>
              <S>            "brightRed": "#ff6565",</S>
              <S>            "brightGreen": "#eafe84",</S>
              <S>            "brightYellow": "#fff779",</S>
              <S>            "brightBlue": "#68d5ff",</S>
              <S>            "brightPurple": "#ffa3aa",</S>
              <S>            "brightCyan": "#c7fffd",</S>
              <S>            "brightWhite": "#ffffff",</S>
              <S>            "background": "#0f1419",</S>
              <S>            "foreground": "#e6e1cf"</S>
              <S>        },</S>
              <S>        {</S>
              <S>            "name": "Red Planet",</S>
              <S>            "black": "#202020",</S>
              <S>            "red": "#8c3432",</S>
              <S>            "green": "#728271",</S>
              <S>            "yellow": "#e8bf6a",</S>
              <S>            "blue": "#69819e",</S>
              <S>            "purple": "#896492",</S>
              <S>            "cyan": "#5b8390",</S>
              <S>            "white": "#b9aa99",</S>
              <S>            "brightBlack": "#676767",</S>
              <S>            "brightRed": "#b55242",</S>
              <S>            "brightGreen": "#869985",</S>
              <S>            "brightYellow": "#ebeb91",</S>
              <S>            "brightBlue": "#60827e",</S>
              <S>            "brightPurple": "#de4974",</S>
              <S>            "brightCyan": "#38add8",</S>
              <S>            "brightWhite": "#d6bfb8",</S>
              <S>            "background": "#222222",</S>
              <S>            "foreground": "#c2b790"</S>
              <S>        },</S>
              <S>        {</S>
              <S>            "name": "Tomorrow Night Burns",</S>
              <S>            "black": "#252525",</S>
              <S>            "red": "#832e31",</S>
              <S>            "green": "#a63c40",</S>
              <S>            "yellow": "#d3494e",</S>
              <S>            "blue": "#fc595f",</S>
              <S>            "purple": "#df9395",</S>
              <S>            "cyan": "#ba8586",</S>
              <S>            "white": "#f5f5f5",</S>
              <S>            "brightBlack": "#5d6f71",</S>
              <S>            "brightRed": "#832e31",</S>
              <S>            "brightGreen": "#a63c40",</S>
              <S>            "brightYellow": "#d2494e",</S>
              <S>            "brightBlue": "#fc595f",</S>
              <S>            "brightPurple": "#df9395",</S>
              <S>            "brightCyan": "#ba8586",</S>
              <S>            "brightWhite": "#f5f5f5",</S>
              <S>            "background": "#151515",</S>
              <S>            "foreground": "#a1b0b8"</S>
              <S>        }</S>
              <S>    ],</S>
              <S>    // Add any keybinding overrides to this array.</S>
              <S>    // To unbind a default keybinding, set the command to "unbound"</S>
              <S>    "keybindings": [</S>
              <S>        {"command":"toggleFocusMode", "keys": "alt+f"},</S>
              <S>        {"command":"commandPalette", "keys": "alt+p"}</S>
              <S>    ]</S>
              <S>}</S>
            </LST>
          </Obj>
          <SBK N="CompressCommand"> Get-Content -Path $this.TargetObject.FullName -Verbose </SBK>
        </Props>
      </Obj>
      <Obj RefId="21">
        <TNRef RefId="1" />
        <ToString>DotEntry</ToString>
        <Props>
          <S N="Target">"$env:USERPROFILE\.vimrc"</S>
          <S N="ExpandedTarget">C:\Users\endow\.vimrc</S>
          <S N="TargetObject">C:\Users\endow\.vimrc</S>
          <Obj N="Content" RefId="22">
            <TNRef RefId="2" />
            <LST />
          </Obj>
          <SBK N="CompressCommand"> Get-Content -Path $this.TargetObject.FullName -Verbose </SBK>
        </Props>
      </Obj>
      <Obj RefId="23">
        <TNRef RefId="1" />
        <ToString>DotEntry</ToString>
        <Props>
          <S N="Target">"$env:USERPROFILE\.vim\general.vim"</S>
          <S N="ExpandedTarget">C:\Users\endow\.vim\general.vim</S>
          <S N="TargetObject">C:\Users\endow\.vim\general.vim</S>
          <Obj N="Content" RefId="24">
            <TNRef RefId="2" />
            <LST>
              <S>" General Vim Settings</S>
              <S>"   Needs to be sourced</S>
              <S>" endo / endowdly@gmail.com / github.com/endowdly</S>
              <S></S>
              <S>" Also covers basic UI </S>
              <S></S>
              <S>" --- Features ----------------------------------------------------------------- {{{1 </S>
              <S>set nocompatible </S>
              <S></S>
              <S>if has('autocmd')</S>
              <S>    filetype plugin indent on</S>
              <S>endif</S>
              <S>if has('syntax') &amp;&amp; !exists('g:synax_on')</S>
              <S>    syntax enable</S>
              <S>endif</S>
              <S></S>
              <S>set modeline</S>
              <S>set modelines=1</S>
              <S></S>
              <S>set notimeout ttimeout ttimeoutlen=20</S>
              <S></S>
              <S>" set termencoding=utf-8</S>
              <S>" set fileencoding=utf=8</S>
              <S></S>
              <S>set backspace=indent,eol,start</S>
              <S>set complete-=i</S>
              <S>set nrformats-=octal</S>
              <S>set magic </S>
              <S>set lazyredraw</S>
              <S></S>
              <S>" --- Editor Config ------------------------------------------------------------ {{{1</S>
              <S>set textwidth=115</S>
              <S>set shiftwidth=4</S>
              <S>set softtabstop=4</S>
              <S>set expandtab</S>
              <S>set smarttab</S>
              <S>set autoindent smartindent </S>
              <S>set nowrap</S>
              <S></S>
              <S>" --- Basic User Interface ----------------------------------------------------- {{{1 </S>
              <S>set visualbell </S>
              <S>set confirm</S>
              <S>set autowriteall</S>
              <S></S>
              <S>set wildmenu wildmode=full</S>
              <S>set laststatus=2</S>
              <S>set cmdheight=2</S>
              <S>set showtabline=2</S>
              <S></S>
              <S>set number relativenumber </S>
              <S>set showcmd</S>
              <S>set ruler</S>
              <S>set cursorline </S>
              <S></S>
              <S>set splitright</S>
              <S>set splitbelow</S>
              <S></S>
              <S>set sidescroll=6</S>
              <S></S>
              <S>highlight ColorColumn ctermbg=DarkCyan</S>
              <S>highlight ColorColumnExtreme ctermbg=Magenta</S>
              <S>highlight CursorColumnExtreme ctermbg=Black ctermfg=none</S>
              <S>highlight CursorLine ctermbg=Black ctermfg=none</S>
              <S>call matchadd('ColorColumn', '\%81v', 100)</S>
              <S>call matchadd('ColorColumnExtreme', '\%115v', 100) </S>
              <S></S>
              <S>" --- Searching ---------------------------------------------------------------- {{{1</S>
              <S>set incsearch</S>
              <S>set hlsearch</S>
              <S>set ignorecase smartcase</S>
              <S></S>
              <S>" --- Folding ------------------------------------------------------------------ {{{1</S>
              <S>set foldenable</S>
              <S>set foldlevelstart=10</S>
              <S>set foldnestmax=10</S>
              <S></S>
              <S>" --- Neovim Options ----------------------------------------------------------- {{{1</S>
              <S>if !has('nvim') &amp;&amp; &amp;timeoutlen == -1</S>
              <S>    set ttimeout</S>
              <S>    set ttimeoutlen=100</S>
              <S>endif</S>
              <S></S>
              <S>" vim: fmd=marker:foldlevel=0</S>
              <S></S>
            </LST>
          </Obj>
          <SBK N="CompressCommand"> Get-Content -Path $this.TargetObject.FullName -Verbose </SBK>
        </Props>
      </Obj>
      <Obj RefId="25">
        <TNRef RefId="1" />
        <ToString>DotEntry</ToString>
        <Props>
          <S N="Target">"$env:USERPROFILE\.vim\keys.vim"</S>
          <S N="ExpandedTarget">C:\Users\endow\.vim\keys.vim</S>
          <S N="TargetObject">C:\Users\endow\.vim\keys.vim</S>
          <Obj N="Content" RefId="26">
            <TNRef RefId="2" />
            <LST>
              <S>" Vim keybindings</S>
              <S>"   Needs to be sourced</S>
              <S>" endo / endowdly@gmail.com / github.com/endowdly</S>
              <S></S>
              <S>let mapleader=";"</S>
              <S></S>
              <S>nnoremap ; ,</S>
              <S>nnoremap &lt;C-,&gt; ,</S>
              <S></S>
              <S>nmap &lt;leader&gt;&lt;space&gt; :nohl&lt;CR&gt;</S>
              <S></S>
              <S>inoremap ;; &lt;esc&gt;</S>
              <S>inoremap jk &lt;esc&gt;</S>
              <S></S>
              <S>nnoremap j gj</S>
              <S>nnoremap k gk</S>
              <S>nnoremap gl $</S>
              <S>nnoremap gh ^</S>
              <S></S>
              <S>" Easy open config</S>
              <S>nnoremap &lt;leader&gt;ec :vsp $MYVIMRC&lt;CR&gt;</S>
              <S>nnoremap &lt;leader&gt;sc :so $MYVIMRC&lt;CR&gt;</S>
              <S></S>
              <S>" Easier split movement</S>
              <S>nnoremap &lt;C-h&gt; &lt;C-w&gt;h</S>
              <S>nnoremap &lt;C-j&gt; &lt;C-w&gt;j</S>
              <S>nnoremap &lt;C-k&gt; &lt;C-w&gt;k</S>
              <S>nnoremap &lt;C-l&gt; &lt;C-w&gt;l</S>
              <S>nnoremap &lt;C-q&gt; &lt;C-w&gt;q </S>
              <S></S>
              <S>" Easier split management</S>
              <S>nnoremap &lt;leader&gt;x ZQ</S>
              <S>nnoremap &lt;leader&gt;ws :split&lt;CR&gt;</S>
              <S>nnoremap &lt;leader&gt;wv :vsplit&lt;CR&gt;</S>
              <S></S>
              <S>" Move text by line</S>
              <S>nnoremap &lt;M-h&gt; xhP</S>
              <S>nnoremap &lt;M-l&gt; xp</S>
              <S>nnoremap &lt;M-j&gt; :m+&lt;CR&gt;==</S>
              <S>nnoremap &lt;M-k&gt; :m-2&lt;CR&gt;==</S>
              <S>inoremap &lt;M-j&gt; &lt;esc&gt;:m+&lt;CR&gt;==gi</S>
              <S>inoremap &lt;M-k&gt; &lt;esc&gt;:m-2&lt;CR&gt;==gi</S>
              <S>vnoremap &lt;M-j&gt; :'&gt;m+&lt;CR&gt;gv=gv</S>
              <S>vnoremap &lt;M-k&gt; :'&lt;m-2&lt;CR&gt;gv=gv</S>
              <S></S>
              <S>nnoremap &lt;leader&gt;y yy</S>
              <S>nnoremap &lt;leader&gt;d dd</S>
              <S>nnoremap &lt;leader&gt;o o&lt;esc&gt;k</S>
              <S>nnoremap &lt;leader&gt;O O&lt;esc&gt;k</S>
              <S></S>
              <S>" vim: fdm=marker:foldlevel=0</S>
              <S></S>
            </LST>
          </Obj>
          <SBK N="CompressCommand"> Get-Content -Path $this.TargetObject.FullName -Verbose </SBK>
        </Props>
      </Obj>
      <Obj RefId="27">
        <TNRef RefId="1" />
        <ToString>DotEntry</ToString>
        <Props>
          <S N="Target">"$env:USERPROFILE\.vim\autocommands.vim"</S>
          <S N="ExpandedTarget">C:\Users\endow\.vim\autocommands.vim</S>
          <S N="TargetObject">C:\Users\endow\.vim\autocommands.vim</S>
          <Obj N="Content" RefId="28">
            <TNRef RefId="2" />
            <LST>
              <S>" Vim Autocommands</S>
              <S>"   Needs to be sourced</S>
              <S>" endo / endowdly@gmail.com / github.com/endowdly</S>
              <S></S>
              <S>autocmd BufNewFile,BufRead *.fs,*.fsi,*.fsx set filetype=fsharp</S>
              <S></S>
              <S>augroup numberToggle</S>
              <S>    autocmd!</S>
              <S>    autocmd BufEnter,FocusGained,InsertLeave,CmdlineLeave * set relativenumber</S>
              <S>    autocmd BufLeave,FocusLost,InsertEnter,CmdlineEnter * set norelativenumber</S>
              <S>augroup end</S>
              <S></S>
              <S>augroup colorLineToggle</S>
              <S>    autocmd!</S>
              <S>    autocmd BufEnter,FocusGained * set cursorline</S>
              <S>    autocmd BufLeave,FocusLost * set nocursorline</S>
              <S>augroup end</S>
              <S></S>
              <S>" vim:fdm=marker:foldlevel=0</S>
              <S></S>
            </LST>
          </Obj>
          <SBK N="CompressCommand"> Get-Content -Path $this.TargetObject.FullName -Verbose </SBK>
        </Props>
      </Obj>
      <Obj RefId="29">
        <TNRef RefId="1" />
        <ToString>DotEntry</ToString>
        <Props>
          <S N="Target">"$env:APPDATA\GrafX2\gfx2-win32.cfg"</S>
          <S N="ExpandedTarget">C:\Users\endow\AppData\Roaming\GrafX2\gfx2-win32.cfg</S>
          <S N="TargetObject">C:\Users\endow\AppData\Roaming\GrafX2\gfx2-win32.cfg</S>
          <Obj N="Content" RefId="30">
            <TNRef RefId="2" />
            <LST>
              <S>CFG_x0002__x0000_b_x0000__x0000_ø_x0004__x0000__x0000_&amp;_x0000__x0000__x0000__x0001__x0000_(_x0000__x0000__x0000__x0002__x0000_%_x0000__x0000__x0000__x0003__x0000_'_x0000__x0000__x0000__x0004__x0000_&amp;_x0010__x0000__x0000__x0005__x0000_(_x0010__x0000__x0000__x0006__x0000_%_x0010__x0000__x0000__x0007__x0000_'_x0010__x0000__x0000__x0008__x0000_&amp;@_x0000__x0000__x0009__x0000_(@_x0000__x0000_</S>
              <S>_x0000_%@_x0000__x0000__x000B__x0000_'@_x0000__x0000__x000C__x0000_&amp; _x0000__x0000_</S>
              <S>_x0000_( _x0000__x0000__x000E__x0000_% _x0000__x0000__x000F__x0000_' _x0000__x0000__x0010__x0000_  _x0000__x0000__x0011__x0000_ _x0010__x0000__x0000__x0012__x0000_y_x0000__x0000__x0000__x0013__x0000_x_x0000__x0000__x0000__x0014__x0000_._x0000__x0000__x0000__x0015__x0000_s_x0000__x0000__x0000__x0016__x0000_s_x0010__x0000__x0000__x0017__x0000_D_x0000__x0000__x0000__x0018__x0000_D_x0010__x0000__x0000__x0019__x0000_D _x0000__x0000__x001A__x0000_L_x0000__x0000__x0000__x001B__x0000_L_x0010__x0000__x0000__x001C__x0000_A_x0000__x0000__x0000__x001D__x0000_A_x0010__x0000__x0000__x001E__x0000_F_x0000__x0000__x0000_|_x0000_F_x0010__x0000__x0000__x001F__x0000_I_x0000__x0000__x0000_ _x0000_I_x0010__x0000__x0000_!_x0000_R_x0000__x0000__x0000_"_x0000_R_x0010__x0000__x0000_#_x0000_C_x0000__x0000__x0000_$_x0000_C _x0000__x0000_%_x0000_C_x0010__x0000__x0000_&amp;_x0000_C0_x0000__x0000_'_x0000_N_x0000__x0000__x0000_(_x0000_N _x0000__x0000_)_x0000_N_x0010__x0000__x0000_*_x0000_N0_x0000__x0000_+_x0000_R@_x0000__x0000_,_x0000_G@_x0000__x0000_-_x0000_C@_x0000__x0000_._x0000_CP_x0000__x0000_/_x0000_e_x0000__x0000__x0000_0_x0000_e_x0010__x0000__x0000_1_x0000_E_x0000__x0000__x0000_2_x0000_t_x0000__x0000__x0000_3_x0000_t_x0010__x0000__x0000_ƒ_x0000_t _x0000__x0000_„_x0000_t0_x0000__x0000_4_x0000_u_x0000__x0000__x0000_5_x0000_u_x0010__x0000__x0000_6_x0000_u@_x0000__x0000_7_x0000_uP_x0000__x0000_8_x0000_G_x0000__x0000__x0000_9_x0000_G_x0010__x0000__x0000_:_x0000_G _x0000__x0000_;_x0000_G0_x0000__x0000_&lt;_x0000_G`_x0000__x0000_=_x0000_v_x0000__x0000__x0000_&gt;_x0000_v_x0010__x0000__x0000_?_x0000_w_x0000__x0000__x0000_{_x0000_w_x0010__x0000__x0000_@_x0000_w@_x0000__x0000_A_x0000_B@_x0000__x0000_B_x0000_BP_x0000__x0000_Î_x0000__x0000__x0000__x0000__x0000_Ï_x0000__x0000__x0000__x0000__x0000_C_x0000_B_x0000__x0000__x0000_D_x0000_B _x0000__x0000_E_x0000_B_x0010__x0000__x0000_F_x0000_X_x0000__x0000__x0000_G_x0000_Y_x0000__x0000__x0000_H_x0000_Z_x0000__x0000__x0000_I_x0000_Z_x0010__x0000__x0000_J_x0000_S_x0000__x0000__x0000_K_x0000_S_x0010__x0000__x0000_L_x0000_O_x0000__x0000__x0000_M_x0000_O_x0010__x0000__x0000_N_x0000_z_x0000__x0000__x0000_O_x0000_{_x0000__x0000__x0000_P_x0000_W_x0000__x0000__x0000_Q_x0000_À_x0000__x0000__x0000_R_x0000_À_x0010__x0000__x0000_S_x0000_M_x0000__x0010__x0002_T_x0000_M_x0010__x0000__x0000_U_x0000_k_x0000__x0000__x0002_V_x0000_m_x0000__x0001__x0002_W_x0000_B`_x0000__x0000_X_x0000_T_x0000__x0000__x0000_Y_x0000_</S>
              <S>_x0000__x0000__x0000_Z_x0000_</S>
              <S>_x0010__x0000__x0000_[_x0000_p_x0000__x0000__x0000_\_x0000_p_x0010__x0000__x0000_]_x0000__x0009__x0000__x0000__x0000_^_x0000__x0009__x0010__x0000__x0000___x0000_q_x0000__x0000__x0000_`_x0000_q_x0010__x0000__x0000_a_x0000_r_x0000__x0000__x0000_b_x0000_r_x0010__x0000__x0000_c_x0000_q _x0000__x0000_d_x0000_r _x0000__x0000_e_x0000_y_x0010__x0000__x0000_f_x0000_U_x0000__x0000__x0000_g_x0000_U_x0010__x0000__x0000_…_x0000_._x0010__x0000__x0000_h_x0000__x0008__x0000__x0000__x0000_i_x0000__x0008__x0010__x0000__x0000_j_x0000_Q_x0000__x0000__x0000_k_x0000_P_x0000__x0000__x0000_}_x0000_P_x0010__x0000__x0000_‚_x0000_P _x0000__x0000_l_x0000_!_x0000__x0000__x0000_m_x0000_"_x0000__x0000__x0000_n_x0000_!_x0010__x0000__x0000_o_x0000_"_x0010__x0000__x0000_p_x0000_e _x0000__x0000_q_x0000_$ _x0000__x0000_r_x0000_! _x0000__x0000_s_x0000_# _x0000__x0000_t_x0000_" _x0000__x0000_u_x0000_Ý_x0000__x0000__x0000_v_x0000_Û_x0000__x0000__x0000_w_x0000_Ý_x0010__x0000__x0000_x_x0000_Û_x0010__x0000__x0000_~_x0000_»_x0000__x0000__x0000__x007F__x0000_½_x0000__x0000__x0000_€_x0000_»_x0010__x0000__x0000__x0081__x0000_½_x0010__x0000__x0000_y_x0000_¼_x0000__x0000__x0000_z_x0000_¾_x0000__x0000__x0000_†_x0000_E_x0010__x0000__x0000_‡_x0000_1_x0000__x0000__x0000_ˆ_x0000_2_x0000__x0000__x0000_‰_x0000_3_x0000__x0000__x0000_Š_x0000_4_x0000__x0000__x0000_‹_x0000_5_x0000__x0000__x0000_Œ_x0000_6_x0000__x0000__x0000__x008D__x0000_7_x0000__x0000__x0000_Ž_x0000_8_x0000__x0000__x0000__x008F__x0000_9_x0000__x0000__x0000__x0090__x0000_0_x0000__x0000__x0000_‘_x0000_1 _x0000__x0000_’_x0000_2 _x0000__x0000_“_x0000_3 _x0000__x0000_”_x0000_4 _x0000__x0000_•_x0000_5 _x0000__x0000_–_x0000_6 _x0000__x0000_—_x0000_7 _x0000__x0000_˜_x0000_8 _x0000__x0000_™_x0000__x0000__x0000__x0000__x0000_š_x0000__x0000__x0000__x0000__x0000_›_x0000__x0000__x0000__x0000__x0000_œ_x0000__x0000__x0000__x0000__x0000__x009D__x0000__x0000__x0000__x0000__x0000_ž_x0000_GP_x0000__x0000_Ÿ_x0000__x0000__x0000__x0000__x0000_ _x0000__x0000__x0000__x0000__x0000_¡_x0000__x0000__x0000__x0000__x0000_¢_x0000__x0000__x0000__x0000__x0000_£_x0000__x0000__x0000__x0000__x0000_¤_x0000__x0000__x0000__x0000__x0000_¥_x0000__x0000__x0000__x0000__x0000_¦_x0000__x0000__x0000__x0000__x0000_§_x0000__x0000__x0000__x0000__x0000_¨_x0000__x0000__x0000__x0000__x0000_©_x0000__x0000__x0000__x0000__x0000_ª_x0000__x0000__x0000__x0000__x0000_«_x0000__x0000__x0000__x0000__x0000_¬_x0000__x0000__x0000__x0000__x0000_­_x0000__x0000__x0000__x0000__x0000_®_x0000__x0000__x0000__x0000__x0000_¯_x0000_-@_x0000__x0000_Ñ_x0000__x0000__x0000__x0000__x0000_°_x0000_.@_x0000__x0000_±_x0000_#@_x0000__x0000_²_x0000_!@_x0000__x0000_³_x0000_"@_x0000__x0000_´_x0000_$@_x0000__x0000_µ_x0000__x0000__x0000__x0000__x0000_¶_x0000__x0000__x0000__x0000__x0000_·_x0000_H_x0010__x0000__x0000_¸_x0000_X_x0010__x0000__x0000_¹_x0000_Y_x0010__x0000__x0000_º_x0000_H_x0000__x0000__x0000_»_x0000__x0000__x0000__x0000__x0000_¼_x0000__x0000__x0000__x0000__x0000_½_x0000__x0000__x0000__x0000__x0000_¾_x0000__x0000__x0000__x0000__x0000_¿_x0000__x0000__x0000__x0000__x0000_À_x0000__x0000__x0000__x0000__x0000_Á_x0000__x0000__x0000__x0000__x0000_Â_x0000__x0000__x0000__x0000__x0000_Ã_x0000__x0000__x0000__x0000__x0000_Ä_x0000__x0000__x0000__x0000__x0000_Å_x0000_À _x0000__x0000_Æ_x0000__x0000__x0000__x0000__x0000_Ç_x0000__x0000__x0000__x0000__x0000_È_x0000__x0000__x0000__x0000__x0000_É_x0000__x0000__x0000__x0000__x0000_Ê_x0000__x0000__x0000__x0000__x0000_Ë_x0000__x0000__x0000__x0000__x0000_Ì_x0000__x0000__x0000__x0000__x0000_Í_x0000__x0000__x0000__x0000__x0000_Ð_x0000_ _x0000__x0000__x0000_Ñ_x0000_k_x0010__x0000__x0012_Ò_x0000_m_x0010__x0001__x0012__x0001__x0000__x0000__x0002__x0011_ _x0000__x0010__x0000__x0011__x0000__x0012__x0000__x0013__x0000__x0014__x0000__x0015__x0000__x0016__x0000__x0017__x0000__x0018__x0000__x0019__x0000__x001A__x0000__x001B__x0000__x001C__x0000__x001D__x0000__x001E__x0000__x001F__x0000__x0000__x0001_ _x0000_!_x0000_"_x0000_#_x0000_$_x0000_%_x0000_&amp;_x0000_'_x0000_(_x0000_)_x0000_*_x0000_+_x0000_,_x0000_-_x0000_._x0000_/_x0000__x0000__x0001_0_x0000_1_x0000_2_x0000_3_x0000_4_x0000_5_x0000_6_x0000_7_x0000_8_x0000_9_x0000_:_x0000_;_x0000_&lt;_x0000_=_x0000_&gt;_x0000_?_x0000__x0000__x0001_@_x0000_A_x0000_B_x0000_C_x0000_D_x0000_E_x0000_F_x0000_G_x0000_H_x0000_I_x0000_J_x0000_K_x0000_L_x0000_M_x0000_N_x0000_O_x0000__x0000__x0001_P_x0000_Q_x0000_R_x0000_S_x0000_T_x0000_U_x0000_V_x0000_W_x0000_X_x0000_Y_x0000_Z_x0000_[_x0000_\_x0000_]_x0000_^_x0000___x0000__x0000__x0001_`_x0000_a_x0000_b_x0000_c_x0000_d_x0000_e_x0000_f_x0000_g_x0000_h_x0000_i_x0000_j_x0000_k_x0000_l_x0000_m_x0000_n_x0000_o_x0000__x0000__x0001_p_x0000_q_x0000_r_x0000_s_x0000_t_x0000_u_x0000_v_x0000_w_x0000_x_x0000_y_x0000_z_x0000_{_x0000_|_x0000_}_x0000_~</S>
              <S>J_x0003__x0001__x0001__x0000__x0001__x0000__x0000__x0000__x0000__x0000_€_x0001__x0002__x0000__x0002__x0000__x0001__x0000__x0001__x0000_ð_x0001__x0003__x0000__x0003__x0000__x0001__x0000__x0001__x0000_ÿ€_x0001__x0004__x0000__x0004__x0000__x0002__x0000__x0002__x0000_ÿÿ_x0001__x0005__x0000__x0005__x0000__x0002__x0000__x0002__x0000_ÿÿÿ€_x0001__x0007__x0000__x0007__x0000__x0003__x0000__x0003__x0000_ÿÿÿÿÿÿ€_x0001__x0008__x0000__x0008__x0000__x0004__x0000__x0004__x0000_ÿÿÿÿÿÿÿÿ_x0001__x000C__x0000__x000C__x0000__x0006__x0000__x0006__x0000_ÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿ_x0001__x0010__x0000__x0010__x0000__x0008__x0000__x0008__x0000_ÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿ_x000B__x0010__x0000__x0010__x0000__x0008__x0000__x0008__x0000_ªªUUªªUUªªUUªªUUªªUUªªUUªªUUªªUU_x0009__x000F__x0000__x000F__x0000__x0007__x0000__x0007__x0000__x0001__x0000__x0007__x0000__x001F__x0000__x007F__x0001_ÿ_x0007_ÿ_x001F_ÿ_x007F_ÿ_x007F_ü_x007F_ð_x007F_À_x007F__x0000_|_x0000_p_x0000_@_x0000__x0009__x0005__x0000__x0005__x0000__x0002__x0000__x0002__x0000_#¾â_x0000__x0000__x0003__x0000__x0003__x0000__x0001__x0000__x0001__x0000_]_x0000__x0000__x0004__x0000__x0004__x0000__x0002__x0000__x0002__x0000_oö_x0000__x0005__x0000__x0005__x0000__x0002__x0000__x0002__x0000_wÿ÷_x0000__x0000__x0006__x0000__x0006__x0000__x0003__x0000__x0003__x0000_{ÿÿýà_x0000__x0008__x0000__x0008__x0000__x0004__x0000__x0004__x0000_&lt;~ÿÿÿÿ~&lt;_x0000_</S>
              <S>_x0000_</S>
              <S>_x0000__x0005__x0000__x0005__x0000__x001E__x001F_çûÿÿÿÿýþ_x007F_‡€_x0000__x000C__x0000__x000C__x0000__x0006__x0000__x0006__x0000__x000F__x0003_ü_x007F_çþÿÿÿÿÿÿ_x007F_çþ?Àð_x0000__x000E__x0000__x000E__x0000__x0007__x0000__x0007__x0000__x0007_€_x007F_ƒÿ_x001F_þ_x007F_ûÿÿÿÿÿÿýÿçÿ_x008F_ü_x001F_à_x001E__x0000__x0000__x0010__x0000__x0010__x0000__x0008__x0000__x0008__x0000__x0007_à_x001F_ø?ü_x007F_þ_x007F_þÿÿÿÿÿÿÿÿÿÿÿÿ_x007F_þ_x007F_þ?ü_x001F_ø_x0007_à</S>
              <S>_x000F__x0000__x000F__x0000__x0007__x0000__x0007__x0000__x0005_@_x0015_@UAUEUUUUUUUUUUUUQUAU_x0001_T_x0001_P_x0000_</S>
              <S>_x000B__x0000__x000B__x0000__x0005__x0000__x0005__x0000__x0004__x0005_QU_x0015_EUUUQTUEP_x0010__x0000_</S>
              <S>_x0005__x0000__x0005__x0000__x0002__x0000__x0002__x0000_UUU_x0000__x0002__x0002__x0000__x0001__x0000__x0001__x0000__x0000__x0000_À_x0002__x0003__x0000__x0001__x0000__x0001__x0000__x0000__x0000_à_x0002__x0004__x0000__x0001__x0000__x0002__x0000__x0000__x0000_ð_x0002__x0008__x0000__x0001__x0000__x0004__x0000__x0000__x0000_ÿ_x0003__x0001__x0000__x0002__x0000__x0000__x0000__x0001__x0000_À_x0003__x0001__x0000__x0003__x0000__x0000__x0000__x0001__x0000_à_x0003__x0001__x0000__x0004__x0000__x0000__x0000__x0002__x0000_ð_x0003__x0001__x0000__x0008__x0000__x0000__x0000__x0004__x0000_ÿ_x0007__x0003__x0000__x0003__x0000__x0001__x0000__x0001__x0000_ª€_x0007__x0005__x0000__x0005__x0000__x0002__x0000__x0002__x0000_Šˆ¨€_x0008__x0005__x0000__x0005__x0000__x0002__x0000__x0002__x0000_!&gt;B_x0000__x0008__x000F__x0000__x000F__x0000__x0007__x0000__x0007__x0000__x0001__x0000__x0002__x0000__x0004__x0000__x0008__x0000__x0010__x0000_ _x0000_@_x007F_ÿ_x0001__x0000__x0002__x0000__x0004__x0000__x0008__x0000__x0010__x0000_ _x0000_@_x0000__x0004__x0002__x0000__x0002__x0000__x0001__x0000__x0001__x0000_`_x0004__x0004__x0000__x0004__x0000__x0002__x0000__x0002__x0000__x0012_H_x0004__x0008__x0000__x0008__x0000__x0004__x0000__x0004__x0000__x0001__x0002__x0004__x0008__x0010_ @€_x0005__x0002__x0000__x0002__x0000__x0001__x0000__x0001__x0000__x0090__x0005__x0004__x0000__x0004__x0000__x0002__x0000__x0002__x0000_„!_x0005__x0008__x0000__x0008__x0000__x0004__x0000__x0004__x0000_€@ _x0010__x0008__x0004__x0002__x0001__x0006__x0004__x0000__x0004__x0000__x0002__x0000__x0002__x0000_ _x0081__x0006__x0008__x0000__x0008__x0000__x0004__x0000__x0004__x0000_D_x0000__x0011__x0000_ˆ_x0001_@_x0008__x0006_</S>
              <S>_x0000_</S>
              <S>_x0000__x0006__x0000__x0006__x0000__x0008__x0000__x0008__x0090__x0000__x0010_B_x0010__x0002__x0006__x0002__x0002__x0004__x0002__x0008_B_x0010_D_x0000__x0000_D_x0000__x0014__x0003__x0000__x0003__x0000__x0001__x0000__x0001__x0000__x007F__x0000__x0014__x0003__x0000__x0003__x0000__x0001__x0000__x0001__x0000_Ý€_x0014__x0007__x0000__x0007__x0000__x0003__x0000__x0003__x0000__x0006_0‚_x0004__x0010_ _x0000__x000B_</S>
              <S>_x0000__x0000__x0000__x0000__x0000__x0000__x0000__x0000__x0000__x0000__x0000_</S>
            </LST>
          </Obj>
          <SBK N="CompressCommand"> Get-Content -Path $this.TargetObject.FullName -Verbose </SBK>
        </Props>
      </Obj>
      <Obj RefId="31">
        <TNRef RefId="1" />
        <ToString>DotEntry</ToString>
        <Props>
          <S N="Target">"$env:APPDATA\GrafX2\gfx2.ini"</S>
          <S N="ExpandedTarget">C:\Users\endow\AppData\Roaming\GrafX2\gfx2.ini</S>
          <S N="TargetObject">C:\Users\endow\AppData\Roaming\GrafX2\gfx2.ini</S>
          <Obj N="Content" RefId="32">
            <TNRef RefId="2" />
            <LST>
              <S>###### GrafX2 initialization file ###### Fichier d'initialisation de GrafX2 ##</S>
              <S>#                                     #                                      #</S>
              <S># You may modify this file with any   # Vous pouvez modifier ce fichier avec #</S>
              <S># standard ASCII text editor.         # n'importe quel Ã©diteur de texte      #</S>
              <S>#                                     # ASCII standard.                      #</S>
              <S>#                                     #                                      #</S>
              <S># Comments are preceded by ';' or     # Les commentaires sont prÃ©cÃ©dÃ©s par   #</S>
              <S># '#'.                                # ';' ou '#'.                          #</S>
              <S>#                                     #                                      #</S>
              <S># Options are not case sensitive and  # Les options ne sont pas sensibles Ã   #</S>
              <S># spaces are ignored.                 # la casse et les espaces sont ignorÃ©s.#</S>
              <S>#                                     #                                      #</S>
              <S># You must not change the order of    # Vous ne devez pas changer l'ordre    #</S>
              <S># the sections and their options.     # des sections et de leurs options.    #</S>
              <S># You must not delete or put into     # Vous ne devez pas effacer ou mettre  #</S>
              <S># comment any section nor option.     # en commentaire une section ou option.#</S>
              <S>#                                     #                                      #</S>
              <S># Each option is preceded by a        # Chaque option est prÃ©cÃ©dÃ©e par un    #</S>
              <S># comment which explains its meaning. # commentaire qui explique sa fonction.#</S>
              <S>#                                     #                                      #</S>
              <S>##############################################################################</S>
              <S></S>
              <S></S>
              <S></S>
              <S>[MOUSE]                               # [SOURIS]</S>
              <S></S>
              <S>  ; The sensitivity of the mouse can  | La sensibilitÃ© de la souris peut</S>
              <S>  ; take values from 1 to 4. The      | prendre des valeurs de 1 Ã  4. Plus</S>
              <S>  ; smaller values, the faster.       | les valeurs sont petites, plus c'est</S>
              <S>  ; This only takes effect in         | rapide. Ce paramÃ©trage n'est utilisÃ©</S>
              <S>  ; fullscreen modes.                 | que dans les modes "plein Ã©cran".</S>
              <S>  ;                                   |</S>
              <S>  X_sensitivity = 1_x0009_; (default 1)</S>
              <S>  Y_sensitivity = 1_x0009_; (default 1)</S>
              <S></S>
              <S>  ; Unused setting, only kept for compatibility.</S>
              <S>  X_correction_factor = 0_x0009_; (default 0)</S>
              <S>  Y_correction_factor = 0_x0009_; (default 0)</S>
              <S></S>
              <S>  ; Aspect of the main cursor (cross) | Aspect du curseur principal (croix)</S>
              <S>  ; 1: Solid                          | 1: Solide</S>
              <S>  ; 2: Transparent                    | 2: Transparent</S>
              <S>  ; 3: Thin (solid)                   | 3: Fin (solide)</S>
              <S>  Cursor_aspect = 1_x0009_; (default 1)</S>
              <S></S>
              <S>[MENU]                                # [MENU]</S>
              <S></S>
              <S>  ; Colors of the menus (the black    | Couleurs des menus (la couleur noire</S>
              <S>  ; and the white colors cannot be    | et la couleur blanche ne peuvent pas</S>
              <S>  ; modified).                        | Ãªtre modifiÃ©es).</S>
              <S>  ; Values are in {Red,Green,Blue}    | Les valeurs sont dans l'ordre {Rouge,</S>
              <S>  ; order and are between 0 and 63.   | Vert,Bleu} et vont de 0 Ã  63.</S>
              <S>  Light_color = 42,42,42_x0009_; (default 42,42,42)</S>
              <S>  Dark_color  = 27,27,27_x0009_; (default 27,27,27)</S>
              <S>  ;</S>
              <S>  ;  Light_color = 24,25,30_x0009_; \_ Nightmare</S>
              <S>  ;  Dark_color  = 13,14,19_x0009_; /</S>
              <S>  ;</S>
              <S>  ;  Light_color = 10,45,28_x0009_; \_ Forest</S>
              <S>  ;  Dark_color  =  5,27,12_x0009_; /</S>
              <S>  ;</S>
              <S>  ;  Light_color = 48,41,26_x0009_; \_ Gold</S>
              <S>  ;  Dark_color  = 26,22,15_x0009_; /</S>
              <S>  ;</S>
              <S>  ;  Light_color = 10,40,55_x0009_; \_ Oceanic</S>
              <S>  ;  Dark_color  = 10,20,32_x0009_; /</S>
              <S></S>
              <S>  ; Aspect ratio and size of the      | Proportion des menus et de la barre</S>
              <S>  ; menus and the tool-bar.           | d'outils.</S>
              <S>  ; Possible values:                  | Valeurs possibles:</S>
              <S>  ; 0: Do not adapt (pixels are not   | 0: Ne pas adapter (les pixels ne sont</S>
              <S>  ;    stretched)                     |    pas Ã©tirÃ©s)</S>
              <S>  ; 1: Adapt the menus and the tool-  | 1: Adapter les menus et la barre</S>
              <S>  ;    bar according to the resolution|    d'outils suivant la rÃ©solution</S>
              <S>  ; 2: Slightly adapt the ratio of    | 2: Adapter lÃ©gÃ¨rement les proportions</S>
              <S>  ;    the menus and tool-bar         |    des menus et de la barre d'outils</S>
              <S>  ; -1:Do not adapt (like 0)          | -1:Ne pas adapter (comme 0)</S>
              <S>  ; -2:Stretch by x2 maximum          | -2:Etire au double de taille si possible</S>
              <S>  ; -3:Stretch by x3 maximum          | -3:Etire au triple de taille si possible</S>
              <S>  ; -4:Stretch by x4 maximum          | -4:Etire au quadruple de taille si</S>
              <S>  ;                                   |    possible.</S>
              <S>  Menu_ratio = -2_x0009_; (default -2)</S>
              <S></S>
              <S>[FILE_SELECTOR]                       # [SELECTEUR_DE_FICHIERS]</S>
              <S></S>
              <S>  ; Show hidden files and             | Afficher les fichiers et rÃ©pertoires</S>
              <S>  ; directories (values are 'yes' or  | cachÃ©s (les valeurs sont 'yes' ou</S>
              <S>  ; 'no').                            | 'no').</S>
              <S>  Show_hidden_files       = no_x0009_; (default 'no')</S>
              <S>  Show_hidden_directories = no_x0009_; (default 'no')</S>
              <S></S>
              <S>  ; Delay before displaying a preview | DÃ©lai avant d'afficher une preview</S>
              <S>  ; in file-selectors (in 18.2th of   | dans les sÃ©lecteurs de fichiers (en</S>
              <S>  ; second). Possible values range    | 18.2Ã¨mes de seconde) Les valeurs</S>
              <S>  ; from 1 to 256.                    | possibles vont de 1 Ã  256.</S>
              <S>  Preview_delay = 8_x0009_; (default 8)</S>
              <S></S>
              <S>  ; Maximize the preview of the       | Maximiser la preview des images pour</S>
              <S>  ; pictures so that it is as big as  | qu'elle soit aussi grande que</S>
              <S>  ; possible. If you're not in the    | possible.</S>
              <S>  ; same resolution as the picture's  | Si vous n'Ãªtes pas dans la mÃªme rÃ©so-</S>
              <S>  ; one, it can try to correct the    | lution que celle de l'image, cela peut</S>
              <S>  ; aspect ratio, but if the picture  | essayer de corriger les proportions,</S>
              <S>  ; does not fill the whole screen,   | mais si l'image ne prend pas tout</S>
              <S>  ; it can be worse.                  | l'Ã©cran, cela peut Ãªtre pire.</S>
              <S>  Maximize_preview = no_x0009_; (default 'no')</S>
              <S></S>
              <S>  ; This option is used to place the  | Cette option est utilisÃ©e pour placer</S>
              <S>  ; selection bar on a filename by    | la barre de sÃ©lection sur un nom de</S>
              <S>  ; typing its first letters.         | fichier en tapant ses 1Ã¨res lettres.</S>
              <S>  ; For example, if you want to find  | Par exemple, si vous voulez trouver le</S>
              <S>  ; the "PICTURE.PKM" in a directory  | fichier "PICTURE.PKM" dans un rÃ©per-</S>
              <S>  ; that also contains "PALETTE.PAL", | toire contenant Ã©galement le fichier</S>
              <S>  ; you'll just have to type P and I. | "PALETTE.PAL", vous n'aurez qu'Ã  taper</S>
              <S>  ; The different values of "FFF"     | P puis I.</S>
              <S>  ; indicate if you want to find the  | Les different valeurs de "FFF"</S>
              <S>  ; name in both files and directories| indiquent si vous voulez trouvez le nom</S>
              <S>  ; or just in only one of these:     | dans les fichiers ET les rÃ©pertoires ou</S>
              <S>  ; 0: files and directories          | simplement dans l'un OU l'autre.</S>
              <S>  ; 1: files only                     | 0: fichiers et rÃ©pertoires</S>
              <S>  ; 2: directories only               | 1: fichiers seulement</S>
              <S>  ;                                   | 2: rÃ©pertoires seulement</S>
              <S>  Find_file_fast = 0_x0009_; (default 0)</S>
              <S></S>
              <S></S>
              <S>[LOADING]                             # [CHARGEMENT]</S>
              <S></S>
              <S>  ; Automatically set the resolution  | Passer automatiquement dans la bonne</S>
              <S>  ; when loading a picture.           | rÃ©solution lors du chargement d'une</S>
              <S>  ; You should set this value to      | image.</S>
              <S>  ; 'yes' after disabling the video   | Vous devriez dÃ©finir cette option Ã </S>
              <S>  ; modes that are not supported by   | 'yes' aprÃ¨s avoir inhibÃ© les modes</S>
              <S>  ; your video card or monitor.       | vidÃ©o qui ne sont pas supportÃ©s par</S>
              <S>  ;                                   | votre matÃ©riel.</S>
              <S>  Auto_set_resolution = no_x0009_; (default 'no')</S>
              <S></S>
              <S>  ; If the variable above is set to   | Si la variable ci-dessus est Ã  'yes',</S>
              <S>  ; 'yes', this one tells if you want | celle-ci indique si vous voulez</S>
              <S>  ; to set the resolution according   | dÃ©finir la rÃ©solution suivant:</S>
              <S>  ; to:                               | 1: les dimensions de "l'Ã©cran</S>
              <S>  ; 1: the internal "original screen" |    d'origine" internes Ã  l'image</S>
              <S>  ;    dimensions of the picture      | 2: les vÃ©ritables dimensions de</S>
              <S>  ; 2: the actual dimensions of the   |    l'image</S>
              <S>  ;    picture                        |</S>
              <S>  Set_resolution_according_to = 1_x0009_; (default 1)</S>
              <S></S>
              <S>  ; If you load a picture with a      | Si vous chargez une image ayant une</S>
              <S>  ; palette of less than 256 colors,  | palette de moins de 256 couleurs,</S>
              <S>  ; this option defines if you want   | cette option indique si vous souhaitez</S>
              <S>  ; to clear the palette or to keep   | effacer la palette ou bien conserver</S>
              <S>  ; the colors of the previous        | les couleurs de l'image prÃ©cÃ©dente qui</S>
              <S>  ; picture that are over the number  | se situent au-delÃ  du nombre de la</S>
              <S>  ; of colors of the new picture.     | nouvelle image.</S>
              <S>  ; For example, if you load a        | Par exemple, si vous chargez une image</S>
              <S>  ; 32-color picture, the colors 32   | de 32 couleurs, les couleurs 32 Ã  255</S>
              <S>  ; to 255 will be set to black if    | seront passÃ©es en noir si cette option</S>
              <S>  ; this option is set to 'yes', or   | est Ã  'yes', ou bien elles resteront</S>
              <S>  ; they will be kept unchanged if    | inchangÃ©es si elle est Ã  'no'.</S>
              <S>  ; this option is set to 'no'.       |</S>
              <S>  Clear_palette = yes_x0009_; (default 'yes')</S>
              <S></S>
              <S></S>
              <S>[MISCELLANEOUS]                       # [DIVERS]</S>
              <S></S>
              <S>  ; Draw the limits of the picture.   | Afficher les limites de l'image</S>
              <S>  Draw_limits = yes_x0009_; (default 'yes')</S>
              <S></S>
              <S>  ; Adjust the brush grabbing in      | Ajuster la capture de brosse en mode</S>
              <S>  ; "grid" mode.                      | "grille".</S>
              <S>  Adjust_brush_pick = yes_x0009_; (default 'yes')</S>
              <S></S>
              <S>  ; Coordinates:                      | CoordonnÃ©es:</S>
              <S>  ; 1: Relative                       | 1: Relatives</S>
              <S>  ; 2: Absolute                       | 2: Absolues</S>
              <S>  Coordinates = 1_x0009_; (default 1)</S>
              <S></S>
              <S>  ; Create a backup file when saving. | CrÃ©er un fichier backup lors des</S>
              <S>  ;                                   | sauvegardes.</S>
              <S>  Backup = no_x0009_; (default 'no')</S>
              <S></S>
              <S>  ; Number of pages stored in memory  | Nombre de pages stockÃ©es en mÃ©moire</S>
              <S>  ; for "undoing".                    | destinÃ©es Ã  annuler les derniÃ¨res</S>
              <S>  ; Values are between 1 and 99.      | modifications. Valeurs entre 1 et 99.</S>
              <S>  Undo_pages = 20_x0009_; (default 20)</S>
              <S></S>
              <S>  ; Speed of the scroll-bars (in VBLs | Vitesse des barre de dÃ©filement (en</S>
              <S>  ; waited) while clicking with the   | VBLs attendus) lorsque l'un des</S>
              <S>  ; left or right button of the mouse.| boutons de la souris est enfoncÃ©.</S>
              <S>  ; Values can be between 1 and 255.  | Les valeurs sont comprises entre 1 et</S>
              <S>  ; The bigger values, the slower.    | 255. Plus elles sont grandes, plus</S>
              <S>  ;                                   | c'est lent.</S>
              <S>  Gauges_scrolling_speed_Left  = 10_x0009_; (default 10)</S>
              <S>  Gauges_scrolling_speed_Right = 3_x0009_; (default 3)</S>
              <S></S>
              <S>  ; Automatically save the configu-   | Enregistre automatiquement la configu-</S>
              <S>  ; ration when exiting the program.  | ration lorsqu'on quitte le programme.</S>
              <S>  Auto_save = yes_x0009_; (default 'yes')</S>
              <S></S>
              <S>  ; Maximum number of vertices used   | Nombre maximum de vertex utilisÃ©s dans</S>
              <S>  ; in filled polygons and polyforms, | les polygÃ´nes et polyformes pleins, et</S>
              <S>  ; and lasso. Possible values range  | le lasso. Les valeurs possibles vont</S>
              <S>  ; from 2 to 16384.                  | de 2 Ã  16384.</S>
              <S>  ; Each vertex takes 4 bytes.        | Chaque vertex prend 4 octets.</S>
              <S>  Vertices_per_polygon = 1024_x0009_; (default 1024)</S>
              <S></S>
              <S>  ; Automatically zoom into the       | Zoomer automatiquement la zone pointÃ©e</S>
              <S>  ; pointed area when you press the   | par la souris lorsque vous appuyez sur</S>
              <S>  ; short-key of the Magnifier button | la touche de raccourci de la loupe.</S>
              <S>  ; while being above the picture.    |</S>
              <S>  Fast_zoom = yes_x0009_; (default 'yes')</S>
              <S></S>
              <S>  ; Separate the colors in the tool-  | SÃ©parer les couleurs dans la barre</S>
              <S>  ; bar by a black squaring.          | d'outils par un quadrillage noir.</S>
              <S>  Separate_colors = no_x0009_; (default 'no')</S>
              <S></S>
              <S>  ; Initial value of the feedback for | Valeur initiale du "feedback" pour les</S>
              <S>  ; the drawing modes (cf. docs).     | modes de dessin (cf. docs).</S>
              <S>  FX_feedback = yes_x0009_; (default 'yes')</S>
              <S></S>
              <S>  ; When you reduce the palette or    | Si vous rÃ©duisez la palette ou "zappez"</S>
              <S>  ; "zap" some colors out of it, it is| quelques couleurs, il est possible</S>
              <S>  ; possible that there are not enough| qu'il ne reste pas assez de couleurs</S>
              <S>  ; colors left to draw the menus.    | pour afficher les menus. Mettre cette</S>
              <S>  ; Switching the following variable  | variable Ã  'yes' ramÃ¨nera automatiquent</S>
              <S>  ; on will bring back the colors of  | les couleurs du menu s'il reste moins</S>
              <S>  ; the menu if there are less than 4 | de 4 couleurs aprÃ¨s une "rÃ©duction" ou</S>
              <S>  ; colors left after "reducing" or   | un "zapping".</S>
              <S>  ; "zapping".                        |</S>
              <S>  Safety_colors = yes_x0009_; (default 'yes')</S>
              <S></S>
              <S>  ; Display a message at startup      | Afficher un message au dÃ©marrage</S>
              <S>  ; telling the version number of the | indiquant le numÃ©ro de version du</S>
              <S>  ; program.                          | programme.</S>
              <S>  Opening_message = yes_x0009_; (default 'yes')</S>
              <S></S>
              <S>  ; Take the Stencil into account when| Prendre le Stencil en compte lorsqu'on</S>
              <S>  ; clearing the image.               | efface l'image.</S>
              <S>  Clear_with_stencil = yes_x0009_; (default 'yes')</S>
              <S></S>
              <S>  ; Directly set the discontinuous    | Passer automatiquement en mode de</S>
              <S>  ; freehand drawing mode after brush | dessin discontinu aprÃ¨s la prise d'une</S>
              <S>  ; grabbing.                         | brosse.</S>
              <S>  Auto_discontinuous = no_x0009_; (default 'no')</S>
              <S></S>
              <S>  ; Save the screen dimensions in GIF | Sauver les dimensions de l'Ã©cran dans</S>
              <S>  ; files. If you want to read these  | les fichiers GIF. Si vous voulez lire</S>
              <S>  ; files with Photoshop or Alchemy,  | ces fichiers avec Photoshop ou Alchemy,</S>
              <S>  ; and maybe some other programs, you| et peut-Ãªtre d'autres programmes, vous</S>
              <S>  ; must set this option to 'no'.     | devez mettre cette option Ã  'no'.</S>
              <S>  Save_screen_size_in_GIF = no_x0009_; (default 'no')</S>
              <S></S>
              <S>  ; Automatically count the number of | Compter automatiquement le nombre de</S>
              <S>  ; different colors used when opening| couleurs diffÃ©rentes utilisÃ©es lors de</S>
              <S>  ; the palette editor window. (Set it| d'ouverture de la fenÃªtre d'Ã©dition de</S>
              <S>  ; to 'no' if you have a slow PC or  | la palette. (Mettez-le Ã  'no' si vous</S>
              <S>  ; if you edit huge pictures)        | avez un PC lent ou bien si vous Ã©ditez</S>
              <S>  ;                                   | d'Ã©normes images).</S>
              <S>  Auto_nb_colors_used = yes     ; (default 'yes')</S>
              <S></S>
              <S>  ; Default video mode at startup     | Mode vidÃ©o par dÃ©faut au</S>
              <S>  ; (see the list by running the      | dÃ©marrage (voir la liste en lanÃ§ant</S>
              <S>  ; program with argument "/?".       | le programme avec l'option "/?".</S>
              <S>  Default_video_mode = window_x0009_; (default 'window')</S>
              <S></S>
              <S>  ; Window dimensions. The program    | Dimensions de la fenÃªtre en mode</S>
              <S>  ; remembers the last window size.   | fenÃªtrÃ©.</S>
              <S>  Default_window_size = 1313,764 ; (default '640,480')</S>
              <S></S>
              <S>  ; This setting allows you merge successive mouse movements into a single</S>
              <S>  ; mouse movement. You should only use it if you are using a mouse which</S>
              <S>  ; reports at 200Hz or more, and you experience lag when using discontinuous</S>
              <S>  ; hand-drawing with large brushes (this tool tries to paste the brush and</S>
              <S>  ; update the screen on each new mouse position) In this case, set this to 2</S>
              <S>  ; or more, to ignore some intermediate mouse reports when a more recent one</S>
              <S>  ; is present.</S>
              <S>  ; Note that with a value superior to 1, you lose precision with continuous</S>
              <S>  ; hand-drawing, as intermediate mouse positions are skipped.</S>
              <S>  Merge_movement = 0 ; (default 0)</S>
              <S></S>
              <S>  ; Number of columns in the palette of the menu bar. Can be any number from</S>
              <S>  ; 1 to 256. If there is not enough room, the program will display less</S>
              <S>  ; columns. But your preference will be kept, and as soon as there is more</S>
              <S>  ; space in the screen, more columns will be shown.</S>
              <S>  ;</S>
              <S>  Palette_Cells_x005F_X = 16; (Default 16)</S>
              <S></S>
              <S>  ; Number of lines in the palette of the menu. Can be any number from</S>
              <S>  ; 1 to 16. The menu can always display the number of lines you request.</S>
              <S>  ;</S>
              <S>  Palette_Cells_Y = 4; (Default 4)</S>
              <S></S>
              <S>  ; Bookmarked directories. Leave the directory blank for unused ones.</S>
              <S>  ;</S>
              <S>  Bookmark_label = </S>
              <S>  Bookmark_directory = </S>
              <S></S>
              <S>  Bookmark_label = </S>
              <S>  Bookmark_directory = </S>
              <S></S>
              <S>  Bookmark_label = </S>
              <S>  Bookmark_directory = </S>
              <S></S>
              <S>  Bookmark_label = </S>
              <S>  Bookmark_directory = </S>
              <S></S>
              <S>  ; In the classic layout, the palette in the menu has colors from left to</S>
              <S>  ; right. If you prefer the colors ordered top to bottom, set this option</S>
              <S>  ; to YES.</S>
              <S>  ;</S>
              <S>  Palette_vertical = yes; (Default YES)</S>
              <S></S>
              <S>  ; The program remembers the last window position, if the</S>
              <S>  ; OS isn't able to do it by itself. (ie: Windows)</S>
              <S>  Window_position = 312,312; (Default 9999,9999 which means: NA)</S>
              <S></S>
              <S>  ; This is the time (in milliseconds) between two clicks for Grafx2 to</S>
              <S>  ; recognize a double-click. Double-click is used mostly in the palette</S>
              <S>  ; area of the menu: double-click a color to open the palette.</S>
              <S>  Double_click_speed = 500; (Default 500)</S>
              <S></S>
              <S>  ; When you press two digit keys in rapid succession (ex: 3 8), Grafx2</S>
              <S>  ; sets transparency to 38% (instead of 30% then 80%). This setting</S>
              <S>  ; allows you to set the maximum delay between two keypresses for</S>
              <S>  ; GrafX2 to recognize them as a combo.</S>
              <S>  Double_key_speed = 500; (Default 500)</S>
              <S></S>
              <S>  ; Name of the skinfile you want to  | Nom du fichier skin que vous voulez</S>
              <S>  ; use.                              | utiliser.</S>
              <S>  ; Default : (empty to let the program choose)</S>
              <S>  Skin_file = </S>
              <S></S>
              <S>  ; Name of the font file (8x8) you   | Nom du fichier police de caractÃ¨re</S>
              <S>  ; want to use.                      | 8x8 utilisÃ©e dans les menus.</S>
              <S>  ; Default : (empty to let the program choose)</S>
              <S>  Font_file = </S>
              <S></S>
              <S>  ; This determines the color value for the grid. Each pixel of</S>
              <S>  ; the grid will be displayed by XOR-ing the original color with</S>
              <S>  ; the value of this setting.</S>
              <S>  ; For example, if you always paint 16-color images, you can set it</S>
              <S>  ; to 16 so the color of the grid are 16 for 0, 17 for 1, etc.</S>
              <S>  ; Then you can set colors 16-31 as lighter/darker variants</S>
              <S>  ; of your original palette, resulting in a pretty grid !</S>
              <S>  ;</S>
              <S>  ; Valid values are 1 to 255.</S>
              <S>  Grid_x005F_XOR_color = 255; (Default 255)</S>
              <S></S>
              <S>  ; This records the last pixel ratio used, to restore it on start.</S>
              <S>  ; Valid values are from 0 to 7 for: Simple, Wide, Tall, Double,</S>
              <S>  ; Triple, Wide2, Tall2, Quadruple.</S>
              <S>  ;</S>
              <S>  Pixel_ratio = 0; (Default 0)</S>
              <S></S>
              <S>  ; This records the visibility of toolbars, to restore them on start.</S>
              <S>  ; It's a bitfield, where 1=Status, 2=Layers/Animation, 4=Tools</S>
              <S>  ;</S>
              <S>  Menubars_visible = 255; (Default 255)</S>
              <S></S>
              <S>  ; This enables a mode where right mouse buttons acts as</S>
              <S>  ; a color picker, with most tools.</S>
              <S>  ;</S>
              <S>  Right_click_colorpick = no; (Default NO)</S>
              <S></S>
              <S>  ; When this mode is active, scrolling the view (and the magnifier view)</S>
              <S>  ; affects both the main image and the spare page - as long as they have</S>
              <S>  ; the same dimensions.</S>
              <S>  ;</S>
              <S>  Sync_views = yes; (Default YES)</S>
              <S></S>
              <S>  ; This setting determines which key inverts the mouse buttons</S>
              <S>  ; when it's held : A left click is then interpreted as a right-click.</S>
              <S>  ; It's especially useful for one-button controllers,</S>
              <S>  ; such as touchscreens and tablets.</S>
              <S>  ; Possible values are 0 (none), 1 (control), 2 (alt)</S>
              <S>  ;</S>
              <S>  Swap_buttons = 1; (Default 1)</S>
              <S></S>
              <S>  ; Last directory browsed with the script selector.</S>
              <S>  ; Leave blank to initially start in (data directory)/scripts</S>
              <S>  ;</S>
              <S>  Scripts_directory = C:\Users\endow\scoop\apps\grafx2\current\share\grafx2\scripts</S>
              <S></S>
              <S>  ; When this setting is disabled, and you create a shortcut with a key that</S>
              <S>  ; is already associated to another shortcut, Grafx2 will unset the latter.</S>
              <S>  ; If you enable this mode, Grafx2 will not make such check, so you can design</S>
              <S>  ; shortcuts that trigger several actions at once.</S>
              <S>  ;</S>
              <S>  Allow_multi_shortcuts = no; (Default no)</S>
              <S></S>
              <S>  ; Determines if the Tilemap tool should identify tiles that are mirrored</S>
              <S>  ; version of other tiles, on the X axis.</S>
              <S>  ;</S>
              <S>  Tilemap_detect_mirrored_x005F_x = no; (Default no)</S>
              <S></S>
              <S>  ; Determines if the Tilemap tool should identify tiles that are mirrored</S>
              <S>  ; version of other tiles, on the Y axis.</S>
              <S>  ;</S>
              <S>  Tilemap_detect_mirrored_y = no; (Default no)</S>
              <S></S>
              <S>  ; Determines if the Tilemap tool should identify tiles that are reversed</S>
              <S>  ; versions of other tiles (180Â°).</S>
              <S>  ;</S>
              <S>  Tilemap_detect_mirrored_x005F_xy = no; (Default no)</S>
              <S></S>
              <S>  ; Determines if the Tilemap tool should show the number of distinct tiles</S>
              <S>  ; at the end of analysis.</S>
              <S>  ;</S>
              <S>  Tilemap_count = no; (Default no)</S>
              <S></S>
              <S>  ; Enables the virtual keyboard when the user enters a textbox.</S>
              <S>  ;</S>
              <S>  ; 0=Auto (guess), 1=ON, 2=OFF</S>
              <S>  Use_virtual_keyboard = 0; (Default 0)</S>
              <S></S>
              <S>  ; Indicates if new images should by default use layers. The alternative</S>
              <S>  ; is animation frames.</S>
              <S>  ;</S>
              <S>  Default_mode_layers = yes; (Default no)</S>
              <S></S>
              <S>  ; Set the gamma value used to translate palettes from Thomson MO/TO</S>
              <S>  ; pictures. 10 is 1.0, 22 is 2.2 etc.</S>
              <S>  ;</S>
              <S>  MOTO_gamma = 28; (Default 28)</S>
              <S></S>
              <S>  ; end of configuration</S>
            </LST>
          </Obj>
          <SBK N="CompressCommand"> Get-Content -Path $this.TargetObject.FullName -Verbose </SBK>
        </Props>
      </Obj>
      <Obj RefId="33">
        <TN RefId="3">
          <T>DotCommand</T>
          <T>Entry</T>
          <T>System.Object</T>
        </TN>
        <ToString>DotCommand</ToString>
        <Props>
          <SBK N="ExpandCommand"></SBK>
          <Obj N="Content" RefId="34">
            <TNRef RefId="2" />
            <LST>
              <S>aaron-bond.better-comments@2.1.0</S>
              <S>AlanWalk.markdown-toc@1.5.6</S>
              <S>asciidoctor.asciidoctor-vscode@2.8.10</S>
              <S>Bauke.horizon-vscode@3.0.3</S>
              <S>cake-build.cake-vscode@1.0.0</S>
              <S>darkriszty.markdown-table-prettify@3.0.0</S>
              <S>DavidAnson.vscode-markdownlint@0.40.3</S>
              <S>DotJoshJohnson.xml@2.5.1</S>
              <S>enkia.tokyo-night@0.8.2</S>
              <S>fabiospampinato.vscode-todo-plus@4.18.4</S>
              <S>hawkeyegold.bonsai@1.4.0</S>
              <S>Ionide.Ionide-fsharp@5.9.1</S>
              <S>jamesmaj.easy-icons@0.3.1</S>
              <S>jerry.theme-dark-starry-night@1.0.2</S>
              <S>k--kato.docomment@0.1.20</S>
              <S>lunarlimbo.banner-comments-plus@0.3.1</S>
              <S>mdickin.markdown-shortcuts@0.12.0</S>
              <S>mhutchie.git-graph@1.30.0</S>
              <S>ms-dotnettools.csharp@1.23.11</S>
              <S>ms-python.python@2020.9.114305</S>
              <S>ms-vscode.powershell@2020.6.0</S>
              <S>RandomFractalsInc.vscode-vega-viewer@9.3.0</S>
              <S>rolandostar.tabletopsimulator-lua@1.0.3</S>
              <S>rust-lang.rust@0.7.8</S>
              <S>streetsidesoftware.code-spell-checker@1.9.0</S>
              <S>sygene.auto-correct@0.2.2</S>
              <S>teabyii.ayu@1.0.5</S>
              <S>vscodevim.vim@1.21.5</S>
              <S>wwm.better-align@1.1.6</S>
              <S>XadillaX.viml@1.0.1</S>
              <S>yannpapouin.theme-monolivia@1.0.5</S>
            </LST>
          </Obj>
          <SBK N="CompressCommand">code --list-extensions --show-versions</SBK>
        </Props>
      </Obj>
      <Obj RefId="35">
        <TNRef RefId="3" />
        <ToString>DotCommand</ToString>
        <Props>
          <SBK N="ExpandCommand">scoop bucket add endo-scoop https://github.com/endowdly/endo-scoop.git</SBK>
          <Obj N="Content" RefId="36">
            <TNRef RefId="2" />
            <LST />
          </Obj>
          <SBK N="CompressCommand"></SBK>
        </Props>
      </Obj>
      <Obj RefId="37">
        <TNRef RefId="3" />
        <ToString>DotCommand</ToString>
        <Props>
          <SBK N="ExpandCommand">scoop install $_</SBK>
          <Obj N="Content" RefId="38">
            <TNRef RefId="2" />
            <LST>
              <S>7zip (v:19.00) [main]</S>
              <S>agave-nf (v:2.1.0)</S>
              <S>alacritty (v:0.5.0) [extras]</S>
              <S>bat (v:0.15.4) [main]</S>
              <S>bigblueterminal-nf (v:2.1.0) [nerd-fonts]</S>
              <S>BigBlueTerminal-NF-Mono (v:2.1.0)</S>
              <S>cacert (v:2021-04-13) [main]</S>
              <S>colortool (v:1904.29002) [main]</S>
              <S>dark (v:3.11.2) [main]</S>
              <S>delta (v:0.7.1) [main]</S>
              <S>dotnet-sdk (v:5.0.402) [main]</S>
              <S>exercism (v:3.0.13) [main]</S>
              <S>fd (v:8.1.1) [main]</S>
              <S>firacode-nf (v:2.1.0) [nerd-fonts]</S>
              <S>gh (v:2.1.0) [main]</S>
              <S>git (v:2.33.1.windows.1) [main]</S>
              <S>github (v:2.9.4) [extras]</S>
              <S>gnuplot (v:5.4.1) [main]</S>
              <S>gohu-nf (v:2.1.0) [nerd-fonts]</S>
              <S>gops (v:2.2.0) [endo-scoop]</S>
              <S>grafx2 (v:2.8) [endo-scoop]</S>
              <S>hexed (v:1.0.32) [main]</S>
              <S>innounp (v:0.50) [main]</S>
              <S>insect (v:5.4.0) [main]</S>
              <S>kicad (v:5.1.10_1) [extras]</S>
              <S>less (v:562.0) [main]</S>
              <S>lessmsi (v:1.7.0) [main]</S>
              <S>links (v:2.25) [main]</S>
              <S>neovim (v:0.4.4) [main]</S>
              <S>nodejs (v:14.9.0) [main]</S>
              <S>ntop (v:0.3.4) [main]</S>
              <S>openscad (v:2021.01) [extras]</S>
              <S>openssh (v:8.2p1-1) [main]</S>
              <S>openssl (v:1.1.1k) [main]</S>
              <S>paint.net (v:4.2.13) [extras]</S>
              <S>pandoc (v:2.11.4) [main]</S>
              <S>pixie (v:4.1) [extras]</S>
              <S>psparklines (v:1.0.0) [endo-scoop]</S>
              <S>pwsh (v:7.1.3) [main]</S>
              <S>rustup (v:1.24.1) [main]</S>
              <S>sudo (v:0.2020.01.26) [main]</S>
              <S>terminus-nf (v:2.1.0) [nerd-fonts]</S>
              <S>vcredist2019 (v:14.27.29016.0) [extras]</S>
              <S>vlc (v:3.0.16) [extras]</S>
              <S>vscode (v:1.48.2) [extras]</S>
              <S>windows-terminal (v:1.2.2381.0) [extras]</S>
              <S>winfetch (v:2.2.0) [extras]</S>
            </LST>
          </Obj>
          <SBK N="CompressCommand">scoop export</SBK>
        </Props>
      </Obj>
    </LST>
  </Obj>
</Objs>
